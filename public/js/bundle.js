// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../../node_modules/core-js/modules/_global.js":[function(require,module,exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

},{}],"../../node_modules/core-js/modules/_core.js":[function(require,module,exports) {
var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

},{}],"../../node_modules/core-js/modules/_is-object.js":[function(require,module,exports) {
module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

},{}],"../../node_modules/core-js/modules/_an-object.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/_fails.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

},{}],"../../node_modules/core-js/modules/_descriptors.js":[function(require,module,exports) {
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_dom-create.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var document = require('./_global').document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_ie8-dom-define.js":[function(require,module,exports) {
module.exports = !require('./_descriptors') && !require('./_fails')(function () {
  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;
});

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_dom-create":"../../node_modules/core-js/modules/_dom-create.js"}],"../../node_modules/core-js/modules/_to-primitive.js":[function(require,module,exports) {
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/_object-dp.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var toPrimitive = require('./_to-primitive');
var dP = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_ie8-dom-define":"../../node_modules/core-js/modules/_ie8-dom-define.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_property-desc.js":[function(require,module,exports) {
module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

},{}],"../../node_modules/core-js/modules/_hide.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_has.js":[function(require,module,exports) {
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};

},{}],"../../node_modules/core-js/modules/_uid.js":[function(require,module,exports) {
var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

},{}],"../../node_modules/core-js/modules/_library.js":[function(require,module,exports) {
module.exports = false;

},{}],"../../node_modules/core-js/modules/_shared.js":[function(require,module,exports) {

var core = require('./_core');
var global = require('./_global');
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: require('./_library') ? 'pure' : 'global',
  copyright: 'Â© 2020 Denis Pushkarev (zloirock.ru)'
});

},{"./_core":"../../node_modules/core-js/modules/_core.js","./_global":"../../node_modules/core-js/modules/_global.js","./_library":"../../node_modules/core-js/modules/_library.js"}],"../../node_modules/core-js/modules/_function-to-string.js":[function(require,module,exports) {
module.exports = require('./_shared')('native-function-to-string', Function.toString);

},{"./_shared":"../../node_modules/core-js/modules/_shared.js"}],"../../node_modules/core-js/modules/_redefine.js":[function(require,module,exports) {

var global = require('./_global');
var hide = require('./_hide');
var has = require('./_has');
var SRC = require('./_uid')('src');
var $toString = require('./_function-to-string');
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

require('./_core').inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_has":"../../node_modules/core-js/modules/_has.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_function-to-string":"../../node_modules/core-js/modules/_function-to-string.js","./_core":"../../node_modules/core-js/modules/_core.js"}],"../../node_modules/core-js/modules/_a-function.js":[function(require,module,exports) {
module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

},{}],"../../node_modules/core-js/modules/_ctx.js":[function(require,module,exports) {
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js"}],"../../node_modules/core-js/modules/_export.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var hide = require('./_hide');
var redefine = require('./_redefine');
var ctx = require('./_ctx');
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_core":"../../node_modules/core-js/modules/_core.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js"}],"../../node_modules/core-js/modules/_defined.js":[function(require,module,exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

},{}],"../../node_modules/core-js/modules/_to-object.js":[function(require,module,exports) {
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function (it) {
  return Object(defined(it));
};

},{"./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_to-integer.js":[function(require,module,exports) {
// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

},{}],"../../node_modules/core-js/modules/_to-absolute-index.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js"}],"../../node_modules/core-js/modules/_to-length.js":[function(require,module,exports) {
// 7.1.15 ToLength
var toInteger = require('./_to-integer');
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js"}],"../../node_modules/core-js/modules/_array-copy-within.js":[function(require,module,exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/_wks.js":[function(require,module,exports) {
var store = require('./_shared')('wks');
var uid = require('./_uid');
var Symbol = require('./_global').Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

},{"./_shared":"../../node_modules/core-js/modules/_shared.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_add-to-unscopables.js":[function(require,module,exports) {
// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = require('./_wks')('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

},{"./_wks":"../../node_modules/core-js/modules/_wks.js","./_hide":"../../node_modules/core-js/modules/_hide.js"}],"../../node_modules/core-js/modules/es6.array.copy-within.js":[function(require,module,exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });

require('./_add-to-unscopables')('copyWithin');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-copy-within":"../../node_modules/core-js/modules/_array-copy-within.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_array-fill.js":[function(require,module,exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
'use strict';
var toObject = require('./_to-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/es6.array.fill.js":[function(require,module,exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = require('./_export');

$export($export.P, 'Array', { fill: require('./_array-fill') });

require('./_add-to-unscopables')('fill');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-fill":"../../node_modules/core-js/modules/_array-fill.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_cof.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

},{}],"../../node_modules/core-js/modules/_iobject.js":[function(require,module,exports) {
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_is-array.js":[function(require,module,exports) {
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_array-species-constructor.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var isArray = require('./_is-array');
var SPECIES = require('./_wks')('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_is-array":"../../node_modules/core-js/modules/_is-array.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_array-species-create.js":[function(require,module,exports) {
// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = require('./_array-species-constructor');

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};

},{"./_array-species-constructor":"../../node_modules/core-js/modules/_array-species-constructor.js"}],"../../node_modules/core-js/modules/_array-methods.js":[function(require,module,exports) {
// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = require('./_ctx');
var IObject = require('./_iobject');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var asc = require('./_array-species-create');
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_array-species-create":"../../node_modules/core-js/modules/_array-species-create.js"}],"../../node_modules/core-js/modules/es6.array.find.js":[function(require,module,exports) {
'use strict';
// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/es6.array.find-index.js":[function(require,module,exports) {
'use strict';
// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = require('./_export');
var $find = require('./_array-methods')(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
require('./_add-to-unscopables')(KEY);

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_iter-call.js":[function(require,module,exports) {
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/_iterators.js":[function(require,module,exports) {
module.exports = {};

},{}],"../../node_modules/core-js/modules/_is-array-iter.js":[function(require,module,exports) {
// check on default Array iterator
var Iterators = require('./_iterators');
var ITERATOR = require('./_wks')('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

},{"./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_create-property.js":[function(require,module,exports) {
'use strict';
var $defineProperty = require('./_object-dp');
var createDesc = require('./_property-desc');

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js"}],"../../node_modules/core-js/modules/_classof.js":[function(require,module,exports) {
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof');
var TAG = require('./_wks')('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

},{"./_cof":"../../node_modules/core-js/modules/_cof.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/core.get-iterator-method.js":[function(require,module,exports) {
var classof = require('./_classof');
var ITERATOR = require('./_wks')('iterator');
var Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

},{"./_classof":"../../node_modules/core-js/modules/_classof.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_core":"../../node_modules/core-js/modules/_core.js"}],"../../node_modules/core-js/modules/_iter-detect.js":[function(require,module,exports) {
var ITERATOR = require('./_wks')('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};

},{"./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.array.from.js":[function(require,module,exports) {
'use strict';
var ctx = require('./_ctx');
var $export = require('./_export');
var toObject = require('./_to-object');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var toLength = require('./_to-length');
var createProperty = require('./_create-property');
var getIterFn = require('./core.get-iterator-method');

$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_iter-call":"../../node_modules/core-js/modules/_iter-call.js","./_is-array-iter":"../../node_modules/core-js/modules/_is-array-iter.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_create-property":"../../node_modules/core-js/modules/_create-property.js","./core.get-iterator-method":"../../node_modules/core-js/modules/core.get-iterator-method.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js"}],"../../node_modules/core-js/modules/_to-iobject.js":[function(require,module,exports) {
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject');
var defined = require('./_defined');
module.exports = function (it) {
  return IObject(defined(it));
};

},{"./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_array-includes.js":[function(require,module,exports) {
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');
var toAbsoluteIndex = require('./_to-absolute-index');
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

},{"./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js"}],"../../node_modules/core-js/modules/es7.array.includes.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/Array.prototype.includes
var $export = require('./_export');
var $includes = require('./_array-includes')(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

require('./_add-to-unscopables')('includes');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/_iter-step.js":[function(require,module,exports) {
module.exports = function (done, value) {
  return { value: value, done: !!done };
};

},{}],"../../node_modules/core-js/modules/_shared-key.js":[function(require,module,exports) {
var shared = require('./_shared')('keys');
var uid = require('./_uid');
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};

},{"./_shared":"../../node_modules/core-js/modules/_shared.js","./_uid":"../../node_modules/core-js/modules/_uid.js"}],"../../node_modules/core-js/modules/_object-keys-internal.js":[function(require,module,exports) {
var has = require('./_has');
var toIObject = require('./_to-iobject');
var arrayIndexOf = require('./_array-includes')(false);
var IE_PROTO = require('./_shared-key')('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

},{"./_has":"../../node_modules/core-js/modules/_has.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_shared-key":"../../node_modules/core-js/modules/_shared-key.js"}],"../../node_modules/core-js/modules/_enum-bug-keys.js":[function(require,module,exports) {
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

},{}],"../../node_modules/core-js/modules/_object-keys.js":[function(require,module,exports) {
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = require('./_object-keys-internal');
var enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};

},{"./_object-keys-internal":"../../node_modules/core-js/modules/_object-keys-internal.js","./_enum-bug-keys":"../../node_modules/core-js/modules/_enum-bug-keys.js"}],"../../node_modules/core-js/modules/_object-dps.js":[function(require,module,exports) {
var dP = require('./_object-dp');
var anObject = require('./_an-object');
var getKeys = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_html.js":[function(require,module,exports) {
var document = require('./_global').document;
module.exports = document && document.documentElement;

},{"./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_object-create.js":[function(require,module,exports) {
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = require('./_an-object');
var dPs = require('./_object-dps');
var enumBugKeys = require('./_enum-bug-keys');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_object-dps":"../../node_modules/core-js/modules/_object-dps.js","./_enum-bug-keys":"../../node_modules/core-js/modules/_enum-bug-keys.js","./_shared-key":"../../node_modules/core-js/modules/_shared-key.js","./_dom-create":"../../node_modules/core-js/modules/_dom-create.js","./_html":"../../node_modules/core-js/modules/_html.js"}],"../../node_modules/core-js/modules/_set-to-string-tag.js":[function(require,module,exports) {
var def = require('./_object-dp').f;
var has = require('./_has');
var TAG = require('./_wks')('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_has":"../../node_modules/core-js/modules/_has.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_iter-create.js":[function(require,module,exports) {
'use strict';
var create = require('./_object-create');
var descriptor = require('./_property-desc');
var setToStringTag = require('./_set-to-string-tag');
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};

},{"./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_object-gpo.js":[function(require,module,exports) {
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = require('./_has');
var toObject = require('./_to-object');
var IE_PROTO = require('./_shared-key')('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

},{"./_has":"../../node_modules/core-js/modules/_has.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_shared-key":"../../node_modules/core-js/modules/_shared-key.js"}],"../../node_modules/core-js/modules/_iter-define.js":[function(require,module,exports) {
'use strict';
var LIBRARY = require('./_library');
var $export = require('./_export');
var redefine = require('./_redefine');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var $iterCreate = require('./_iter-create');
var setToStringTag = require('./_set-to-string-tag');
var getPrototypeOf = require('./_object-gpo');
var ITERATOR = require('./_wks')('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

},{"./_library":"../../node_modules/core-js/modules/_library.js","./_export":"../../node_modules/core-js/modules/_export.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_iter-create":"../../node_modules/core-js/modules/_iter-create.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.array.iterator.js":[function(require,module,exports) {
'use strict';
var addToUnscopables = require('./_add-to-unscopables');
var step = require('./_iter-step');
var Iterators = require('./_iterators');
var toIObject = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js","./_iter-step":"../../node_modules/core-js/modules/_iter-step.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_iter-define":"../../node_modules/core-js/modules/_iter-define.js"}],"../../node_modules/core-js/modules/es6.array.of.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var createProperty = require('./_create-property');

// WebKit Array.of isn't generic
$export($export.S + $export.F * require('./_fails')(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_create-property":"../../node_modules/core-js/modules/_create-property.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_strict-method.js":[function(require,module,exports) {
'use strict';
var fails = require('./_fails');

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};

},{"./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.array.sort.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var aFunction = require('./_a-function');
var toObject = require('./_to-object');
var fails = require('./_fails');
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !require('./_strict-method')($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_strict-method":"../../node_modules/core-js/modules/_strict-method.js"}],"../../node_modules/core-js/modules/_set-species.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var dP = require('./_object-dp');
var DESCRIPTORS = require('./_descriptors');
var SPECIES = require('./_wks')('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.array.species.js":[function(require,module,exports) {
require('./_set-species')('Array');

},{"./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/_date-to-primitive.js":[function(require,module,exports) {
'use strict';
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js"}],"../../node_modules/core-js/modules/es6.date.to-primitive.js":[function(require,module,exports) {
var TO_PRIMITIVE = require('./_wks')('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));

},{"./_wks":"../../node_modules/core-js/modules/_wks.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_date-to-primitive":"../../node_modules/core-js/modules/_date-to-primitive.js"}],"../../node_modules/core-js/modules/es6.function.has-instance.js":[function(require,module,exports) {
'use strict';
var isObject = require('./_is-object');
var getPrototypeOf = require('./_object-gpo');
var HAS_INSTANCE = require('./_wks')('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js"}],"../../node_modules/core-js/modules/es6.function.name.js":[function(require,module,exports) {
var dP = require('./_object-dp').f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || require('./_descriptors') && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_redefine-all.js":[function(require,module,exports) {
var redefine = require('./_redefine');
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};

},{"./_redefine":"../../node_modules/core-js/modules/_redefine.js"}],"../../node_modules/core-js/modules/_an-instance.js":[function(require,module,exports) {
module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

},{}],"../../node_modules/core-js/modules/_for-of.js":[function(require,module,exports) {
var ctx = require('./_ctx');
var call = require('./_iter-call');
var isArrayIter = require('./_is-array-iter');
var anObject = require('./_an-object');
var toLength = require('./_to-length');
var getIterFn = require('./core.get-iterator-method');
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_iter-call":"../../node_modules/core-js/modules/_iter-call.js","./_is-array-iter":"../../node_modules/core-js/modules/_is-array-iter.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./core.get-iterator-method":"../../node_modules/core-js/modules/core.get-iterator-method.js"}],"../../node_modules/core-js/modules/_meta.js":[function(require,module,exports) {
var META = require('./_uid')('meta');
var isObject = require('./_is-object');
var has = require('./_has');
var setDesc = require('./_object-dp').f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !require('./_fails')(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};

},{"./_uid":"../../node_modules/core-js/modules/_uid.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_has":"../../node_modules/core-js/modules/_has.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_validate-collection.js":[function(require,module,exports) {
var isObject = require('./_is-object');
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/_collection-strong.js":[function(require,module,exports) {
'use strict';
var dP = require('./_object-dp').f;
var create = require('./_object-create');
var redefineAll = require('./_redefine-all');
var ctx = require('./_ctx');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var $iterDefine = require('./_iter-define');
var step = require('./_iter-step');
var setSpecies = require('./_set-species');
var DESCRIPTORS = require('./_descriptors');
var fastKey = require('./_meta').fastKey;
var validate = require('./_validate-collection');
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_iter-define":"../../node_modules/core-js/modules/_iter-define.js","./_iter-step":"../../node_modules/core-js/modules/_iter-step.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js"}],"../../node_modules/core-js/modules/_object-pie.js":[function(require,module,exports) {
exports.f = {}.propertyIsEnumerable;

},{}],"../../node_modules/core-js/modules/_object-gopd.js":[function(require,module,exports) {
var pIE = require('./_object-pie');
var createDesc = require('./_property-desc');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var has = require('./_has');
var IE8_DOM_DEFINE = require('./_ie8-dom-define');
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};

},{"./_object-pie":"../../node_modules/core-js/modules/_object-pie.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_has":"../../node_modules/core-js/modules/_has.js","./_ie8-dom-define":"../../node_modules/core-js/modules/_ie8-dom-define.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js"}],"../../node_modules/core-js/modules/_set-proto.js":[function(require,module,exports) {
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object');
var anObject = require('./_an-object');
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js"}],"../../node_modules/core-js/modules/_inherit-if-required.js":[function(require,module,exports) {
var isObject = require('./_is-object');
var setPrototypeOf = require('./_set-proto').set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_set-proto":"../../node_modules/core-js/modules/_set-proto.js"}],"../../node_modules/core-js/modules/_collection.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var $export = require('./_export');
var redefine = require('./_redefine');
var redefineAll = require('./_redefine-all');
var meta = require('./_meta');
var forOf = require('./_for-of');
var anInstance = require('./_an-instance');
var isObject = require('./_is-object');
var fails = require('./_fails');
var $iterDetect = require('./_iter-detect');
var setToStringTag = require('./_set-to-string-tag');
var inheritIfRequired = require('./_inherit-if-required');

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_export":"../../node_modules/core-js/modules/_export.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_inherit-if-required":"../../node_modules/core-js/modules/_inherit-if-required.js"}],"../../node_modules/core-js/modules/es6.map.js":[function(require,module,exports) {
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var MAP = 'Map';

// 23.1 Map Objects
module.exports = require('./_collection')(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);

},{"./_collection-strong":"../../node_modules/core-js/modules/_collection-strong.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/_math-log1p.js":[function(require,module,exports) {
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

},{}],"../../node_modules/core-js/modules/es6.math.acosh.js":[function(require,module,exports) {
// 20.2.2.3 Math.acosh(x)
var $export = require('./_export');
var log1p = require('./_math-log1p');
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-log1p":"../../node_modules/core-js/modules/_math-log1p.js"}],"../../node_modules/core-js/modules/es6.math.asinh.js":[function(require,module,exports) {
// 20.2.2.5 Math.asinh(x)
var $export = require('./_export');
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.atanh.js":[function(require,module,exports) {
// 20.2.2.7 Math.atanh(x)
var $export = require('./_export');
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_math-sign.js":[function(require,module,exports) {
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

},{}],"../../node_modules/core-js/modules/es6.math.cbrt.js":[function(require,module,exports) {
// 20.2.2.9 Math.cbrt(x)
var $export = require('./_export');
var sign = require('./_math-sign');

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-sign":"../../node_modules/core-js/modules/_math-sign.js"}],"../../node_modules/core-js/modules/es6.math.clz32.js":[function(require,module,exports) {
// 20.2.2.11 Math.clz32(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.cosh.js":[function(require,module,exports) {
// 20.2.2.12 Math.cosh(x)
var $export = require('./_export');
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_math-expm1.js":[function(require,module,exports) {
// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;

},{}],"../../node_modules/core-js/modules/es6.math.expm1.js":[function(require,module,exports) {
// 20.2.2.14 Math.expm1(x)
var $export = require('./_export');
var $expm1 = require('./_math-expm1');

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-expm1":"../../node_modules/core-js/modules/_math-expm1.js"}],"../../node_modules/core-js/modules/_math-fround.js":[function(require,module,exports) {
// 20.2.2.16 Math.fround(x)
var sign = require('./_math-sign');
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};

},{"./_math-sign":"../../node_modules/core-js/modules/_math-sign.js"}],"../../node_modules/core-js/modules/es6.math.fround.js":[function(require,module,exports) {
// 20.2.2.16 Math.fround(x)
var $export = require('./_export');

$export($export.S, 'Math', { fround: require('./_math-fround') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-fround":"../../node_modules/core-js/modules/_math-fround.js"}],"../../node_modules/core-js/modules/es6.math.hypot.js":[function(require,module,exports) {
// 20.2.2.17 Math.hypot([value1[, value2[, â¦ ]]])
var $export = require('./_export');
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.imul.js":[function(require,module,exports) {
// 20.2.2.18 Math.imul(x, y)
var $export = require('./_export');
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * require('./_fails')(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.math.log1p.js":[function(require,module,exports) {
// 20.2.2.20 Math.log1p(x)
var $export = require('./_export');

$export($export.S, 'Math', { log1p: require('./_math-log1p') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-log1p":"../../node_modules/core-js/modules/_math-log1p.js"}],"../../node_modules/core-js/modules/es6.math.log10.js":[function(require,module,exports) {
// 20.2.2.21 Math.log10(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.log2.js":[function(require,module,exports) {
// 20.2.2.22 Math.log2(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.math.sign.js":[function(require,module,exports) {
// 20.2.2.28 Math.sign(x)
var $export = require('./_export');

$export($export.S, 'Math', { sign: require('./_math-sign') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-sign":"../../node_modules/core-js/modules/_math-sign.js"}],"../../node_modules/core-js/modules/es6.math.sinh.js":[function(require,module,exports) {
// 20.2.2.30 Math.sinh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * require('./_fails')(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-expm1":"../../node_modules/core-js/modules/_math-expm1.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.math.tanh.js":[function(require,module,exports) {
// 20.2.2.33 Math.tanh(x)
var $export = require('./_export');
var expm1 = require('./_math-expm1');
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_math-expm1":"../../node_modules/core-js/modules/_math-expm1.js"}],"../../node_modules/core-js/modules/es6.math.trunc.js":[function(require,module,exports) {
// 20.2.2.34 Math.trunc(x)
var $export = require('./_export');

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_object-gopn.js":[function(require,module,exports) {
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = require('./_object-keys-internal');
var hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};

},{"./_object-keys-internal":"../../node_modules/core-js/modules/_object-keys-internal.js","./_enum-bug-keys":"../../node_modules/core-js/modules/_enum-bug-keys.js"}],"../../node_modules/core-js/modules/_string-ws.js":[function(require,module,exports) {
module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

},{}],"../../node_modules/core-js/modules/_string-trim.js":[function(require,module,exports) {
var $export = require('./_export');
var defined = require('./_defined');
var fails = require('./_fails');
var spaces = require('./_string-ws');
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_defined":"../../node_modules/core-js/modules/_defined.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_string-ws":"../../node_modules/core-js/modules/_string-ws.js"}],"../../node_modules/core-js/modules/es6.number.constructor.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var has = require('./_has');
var cof = require('./_cof');
var inheritIfRequired = require('./_inherit-if-required');
var toPrimitive = require('./_to-primitive');
var fails = require('./_fails');
var gOPN = require('./_object-gopn').f;
var gOPD = require('./_object-gopd').f;
var dP = require('./_object-dp').f;
var $trim = require('./_string-trim').trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = require('./_descriptors') ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  require('./_redefine')(global, NUMBER, $Number);
}

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_has":"../../node_modules/core-js/modules/_has.js","./_cof":"../../node_modules/core-js/modules/_cof.js","./_inherit-if-required":"../../node_modules/core-js/modules/_inherit-if-required.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_string-trim":"../../node_modules/core-js/modules/_string-trim.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js"}],"../../node_modules/core-js/modules/es6.number.epsilon.js":[function(require,module,exports) {
// 20.1.2.1 Number.EPSILON
var $export = require('./_export');

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.is-finite.js":[function(require,module,exports) {
// 20.1.2.2 Number.isFinite(number)
var $export = require('./_export');
var _isFinite = require('./_global').isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_is-integer.js":[function(require,module,exports) {
// 20.1.2.3 Number.isInteger(number)
var isObject = require('./_is-object');
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/es6.number.is-integer.js":[function(require,module,exports) {
// 20.1.2.3 Number.isInteger(number)
var $export = require('./_export');

$export($export.S, 'Number', { isInteger: require('./_is-integer') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_is-integer":"../../node_modules/core-js/modules/_is-integer.js"}],"../../node_modules/core-js/modules/es6.number.is-nan.js":[function(require,module,exports) {
// 20.1.2.4 Number.isNaN(number)
var $export = require('./_export');

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.is-safe-integer.js":[function(require,module,exports) {
// 20.1.2.5 Number.isSafeInteger(number)
var $export = require('./_export');
var isInteger = require('./_is-integer');
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_is-integer":"../../node_modules/core-js/modules/_is-integer.js"}],"../../node_modules/core-js/modules/es6.number.max-safe-integer.js":[function(require,module,exports) {
// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.number.min-safe-integer.js":[function(require,module,exports) {
// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = require('./_export');

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_parse-float.js":[function(require,module,exports) {
var $parseFloat = require('./_global').parseFloat;
var $trim = require('./_string-trim').trim;

module.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_string-trim":"../../node_modules/core-js/modules/_string-trim.js","./_string-ws":"../../node_modules/core-js/modules/_string-ws.js"}],"../../node_modules/core-js/modules/es6.number.parse-float.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseFloat = require('./_parse-float');
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_parse-float":"../../node_modules/core-js/modules/_parse-float.js"}],"../../node_modules/core-js/modules/_parse-int.js":[function(require,module,exports) {
var $parseInt = require('./_global').parseInt;
var $trim = require('./_string-trim').trim;
var ws = require('./_string-ws');
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_string-trim":"../../node_modules/core-js/modules/_string-trim.js","./_string-ws":"../../node_modules/core-js/modules/_string-ws.js"}],"../../node_modules/core-js/modules/es6.number.parse-int.js":[function(require,module,exports) {
var $export = require('./_export');
var $parseInt = require('./_parse-int');
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_parse-int":"../../node_modules/core-js/modules/_parse-int.js"}],"../../node_modules/core-js/modules/_object-gops.js":[function(require,module,exports) {
exports.f = Object.getOwnPropertySymbols;

},{}],"../../node_modules/core-js/modules/_object-assign.js":[function(require,module,exports) {
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = require('./_descriptors');
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
var toObject = require('./_to-object');
var IObject = require('./_iobject');
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_iobject":"../../node_modules/core-js/modules/_iobject.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.object.assign.js":[function(require,module,exports) {
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-assign":"../../node_modules/core-js/modules/_object-assign.js"}],"../../node_modules/core-js/modules/_object-forced-pam.js":[function(require,module,exports) {
'use strict';
// Forced replacement prototype accessors methods
module.exports = require('./_library') || !require('./_fails')(function () {
  var K = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, K, function () { /* empty */ });
  delete require('./_global')[K];
});

},{"./_library":"../../node_modules/core-js/modules/_library.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es7.object.define-getter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter) {
    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/es7.object.define-setter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var aFunction = require('./_a-function');
var $defineProperty = require('./_object-dp');

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter) {
    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/_object-to-array.js":[function(require,module,exports) {
var DESCRIPTORS = require('./_descriptors');
var getKeys = require('./_object-keys');
var toIObject = require('./_to-iobject');
var isEnum = require('./_object-pie').f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js"}],"../../node_modules/core-js/modules/es7.object.entries.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $entries = require('./_object-to-array')(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-to-array":"../../node_modules/core-js/modules/_object-to-array.js"}],"../../node_modules/core-js/modules/_object-sap.js":[function(require,module,exports) {
// most Object methods by ES6 should accept primitives
var $export = require('./_export');
var core = require('./_core');
var fails = require('./_fails');
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_core":"../../node_modules/core-js/modules/_core.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.object.freeze.js":[function(require,module,exports) {
// 19.1.2.5 Object.freeze(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":[function(require,module,exports) {
// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = require('./_to-iobject');
var $getOwnPropertyDescriptor = require('./_object-gopd').f;

require('./_object-sap')('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

},{"./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/_own-keys.js":[function(require,module,exports) {
// all object keys, includes non-enumerable and symbols
var gOPN = require('./_object-gopn');
var gOPS = require('./_object-gops');
var anObject = require('./_an-object');
var Reflect = require('./_global').Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

},{"./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = require('./_export');
var ownKeys = require('./_own-keys');
var toIObject = require('./_to-iobject');
var gOPD = require('./_object-gopd');
var createProperty = require('./_create-property');

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_own-keys":"../../node_modules/core-js/modules/_own-keys.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_create-property":"../../node_modules/core-js/modules/_create-property.js"}],"../../node_modules/core-js/modules/_object-gopn-ext.js":[function(require,module,exports) {
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject');
var gOPN = require('./_object-gopn').f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js"}],"../../node_modules/core-js/modules/es6.object.get-own-property-names.js":[function(require,module,exports) {
// 19.1.2.7 Object.getOwnPropertyNames(O)
require('./_object-sap')('getOwnPropertyNames', function () {
  return require('./_object-gopn-ext').f;
});

},{"./_object-sap":"../../node_modules/core-js/modules/_object-sap.js","./_object-gopn-ext":"../../node_modules/core-js/modules/_object-gopn-ext.js"}],"../../node_modules/core-js/modules/es6.object.get-prototype-of.js":[function(require,module,exports) {
// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = require('./_to-object');
var $getPrototypeOf = require('./_object-gpo');

require('./_object-sap')('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es7.object.lookup-getter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupGetter__: function __lookupGetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/es7.object.lookup-setter.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var toObject = require('./_to-object');
var toPrimitive = require('./_to-primitive');
var getPrototypeOf = require('./_object-gpo');
var getOwnPropertyDescriptor = require('./_object-gopd').f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
require('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {
  __lookupSetter__: function __lookupSetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
    } while (O = getPrototypeOf(O));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-forced-pam":"../../node_modules/core-js/modules/_object-forced-pam.js"}],"../../node_modules/core-js/modules/es6.object.prevent-extensions.js":[function(require,module,exports) {
// 19.1.2.15 Object.preventExtensions(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/_same-value.js":[function(require,module,exports) {
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

},{}],"../../node_modules/core-js/modules/es6.object.is.js":[function(require,module,exports) {
// 19.1.3.10 Object.is(value1, value2)
var $export = require('./_export');
$export($export.S, 'Object', { is: require('./_same-value') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_same-value":"../../node_modules/core-js/modules/_same-value.js"}],"../../node_modules/core-js/modules/es6.object.is-frozen.js":[function(require,module,exports) {
// 19.1.2.12 Object.isFrozen(O)
var isObject = require('./_is-object');

require('./_object-sap')('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.is-sealed.js":[function(require,module,exports) {
// 19.1.2.13 Object.isSealed(O)
var isObject = require('./_is-object');

require('./_object-sap')('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.is-extensible.js":[function(require,module,exports) {
// 19.1.2.11 Object.isExtensible(O)
var isObject = require('./_is-object');

require('./_object-sap')('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.keys.js":[function(require,module,exports) {
// 19.1.2.14 Object.keys(O)
var toObject = require('./_to-object');
var $keys = require('./_object-keys');

require('./_object-sap')('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});

},{"./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.seal.js":[function(require,module,exports) {
// 19.1.2.17 Object.seal(O)
var isObject = require('./_is-object');
var meta = require('./_meta').onFreeze;

require('./_object-sap')('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-sap":"../../node_modules/core-js/modules/_object-sap.js"}],"../../node_modules/core-js/modules/es6.object.set-prototype-of.js":[function(require,module,exports) {
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_set-proto":"../../node_modules/core-js/modules/_set-proto.js"}],"../../node_modules/core-js/modules/es7.object.values.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-object-values-entries
var $export = require('./_export');
var $values = require('./_object-to-array')(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-to-array":"../../node_modules/core-js/modules/_object-to-array.js"}],"../../node_modules/core-js/modules/_species-constructor.js":[function(require,module,exports) {
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = require('./_an-object');
var aFunction = require('./_a-function');
var SPECIES = require('./_wks')('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_invoke.js":[function(require,module,exports) {
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};

},{}],"../../node_modules/core-js/modules/_task.js":[function(require,module,exports) {


var ctx = require('./_ctx');
var invoke = require('./_invoke');
var html = require('./_html');
var cel = require('./_dom-create');
var global = require('./_global');
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (require('./_cof')(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};

},{"./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_invoke":"../../node_modules/core-js/modules/_invoke.js","./_html":"../../node_modules/core-js/modules/_html.js","./_dom-create":"../../node_modules/core-js/modules/_dom-create.js","./_global":"../../node_modules/core-js/modules/_global.js","./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_microtask.js":[function(require,module,exports) {


var global = require('./_global');
var macrotask = require('./_task').set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = require('./_cof')(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_task":"../../node_modules/core-js/modules/_task.js","./_cof":"../../node_modules/core-js/modules/_cof.js"}],"../../node_modules/core-js/modules/_new-promise-capability.js":[function(require,module,exports) {
'use strict';
// 25.4.1.5 NewPromiseCapability(C)
var aFunction = require('./_a-function');

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js"}],"../../node_modules/core-js/modules/_perform.js":[function(require,module,exports) {
module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};

},{}],"../../node_modules/core-js/modules/_user-agent.js":[function(require,module,exports) {

var global = require('./_global');
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';

},{"./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/_promise-resolve.js":[function(require,module,exports) {
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var newPromiseCapability = require('./_new-promise-capability');

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_new-promise-capability":"../../node_modules/core-js/modules/_new-promise-capability.js"}],"../../node_modules/core-js/modules/es6.promise.js":[function(require,module,exports) {


'use strict';
var LIBRARY = require('./_library');
var global = require('./_global');
var ctx = require('./_ctx');
var classof = require('./_classof');
var $export = require('./_export');
var isObject = require('./_is-object');
var aFunction = require('./_a-function');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var speciesConstructor = require('./_species-constructor');
var task = require('./_task').set;
var microtask = require('./_microtask')();
var newPromiseCapabilityModule = require('./_new-promise-capability');
var perform = require('./_perform');
var userAgent = require('./_user-agent');
var promiseResolve = require('./_promise-resolve');
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});

},{"./_library":"../../node_modules/core-js/modules/_library.js","./_global":"../../node_modules/core-js/modules/_global.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_classof":"../../node_modules/core-js/modules/_classof.js","./_export":"../../node_modules/core-js/modules/_export.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_task":"../../node_modules/core-js/modules/_task.js","./_microtask":"../../node_modules/core-js/modules/_microtask.js","./_new-promise-capability":"../../node_modules/core-js/modules/_new-promise-capability.js","./_perform":"../../node_modules/core-js/modules/_perform.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js","./_promise-resolve":"../../node_modules/core-js/modules/_promise-resolve.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js","./_core":"../../node_modules/core-js/modules/_core.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js"}],"../../node_modules/core-js/modules/es7.promise.finally.js":[function(require,module,exports) {

// https://github.com/tc39/proposal-promise-finally
'use strict';
var $export = require('./_export');
var core = require('./_core');
var global = require('./_global');
var speciesConstructor = require('./_species-constructor');
var promiseResolve = require('./_promise-resolve');

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_core":"../../node_modules/core-js/modules/_core.js","./_global":"../../node_modules/core-js/modules/_global.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_promise-resolve":"../../node_modules/core-js/modules/_promise-resolve.js"}],"../../node_modules/core-js/modules/es6.reflect.apply.js":[function(require,module,exports) {
// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = require('./_export');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var rApply = (require('./_global').Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !require('./_fails')(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_global":"../../node_modules/core-js/modules/_global.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/_bind.js":[function(require,module,exports) {
'use strict';
var aFunction = require('./_a-function');
var isObject = require('./_is-object');
var invoke = require('./_invoke');
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};

},{"./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_invoke":"../../node_modules/core-js/modules/_invoke.js"}],"../../node_modules/core-js/modules/es6.reflect.construct.js":[function(require,module,exports) {
// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = require('./_export');
var create = require('./_object-create');
var aFunction = require('./_a-function');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var fails = require('./_fails');
var bind = require('./_bind');
var rConstruct = (require('./_global').Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_bind":"../../node_modules/core-js/modules/_bind.js","./_global":"../../node_modules/core-js/modules/_global.js"}],"../../node_modules/core-js/modules/es6.reflect.define-property.js":[function(require,module,exports) {
// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = require('./_object-dp');
var $export = require('./_export');
var anObject = require('./_an-object');
var toPrimitive = require('./_to-primitive');

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * require('./_fails')(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.reflect.delete-property.js":[function(require,module,exports) {
// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = require('./_export');
var gOPD = require('./_object-gopd').f;
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.get.js":[function(require,module,exports) {
// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var isObject = require('./_is-object');
var anObject = require('./_an-object');

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });

},{"./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_has":"../../node_modules/core-js/modules/_has.js","./_export":"../../node_modules/core-js/modules/_export.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":[function(require,module,exports) {
// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = require('./_object-gopd');
var $export = require('./_export');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});

},{"./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.get-prototype-of.js":[function(require,module,exports) {
// 26.1.8 Reflect.getPrototypeOf(target)
var $export = require('./_export');
var getProto = require('./_object-gpo');
var anObject = require('./_an-object');

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.has.js":[function(require,module,exports) {
// 26.1.9 Reflect.has(target, propertyKey)
var $export = require('./_export');

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/es6.reflect.is-extensible.js":[function(require,module,exports) {
// 26.1.10 Reflect.isExtensible(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.own-keys.js":[function(require,module,exports) {
// 26.1.11 Reflect.ownKeys(target)
var $export = require('./_export');

$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_own-keys":"../../node_modules/core-js/modules/_own-keys.js"}],"../../node_modules/core-js/modules/es6.reflect.prevent-extensions.js":[function(require,module,exports) {
// 26.1.12 Reflect.preventExtensions(target)
var $export = require('./_export');
var anObject = require('./_an-object');
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.reflect.set.js":[function(require,module,exports) {
// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = require('./_object-dp');
var gOPD = require('./_object-gopd');
var getPrototypeOf = require('./_object-gpo');
var has = require('./_has');
var $export = require('./_export');
var createDesc = require('./_property-desc');
var anObject = require('./_an-object');
var isObject = require('./_is-object');

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });

},{"./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_has":"../../node_modules/core-js/modules/_has.js","./_export":"../../node_modules/core-js/modules/_export.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js"}],"../../node_modules/core-js/modules/es6.reflect.set-prototype-of.js":[function(require,module,exports) {
// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = require('./_export');
var setProto = require('./_set-proto');

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_set-proto":"../../node_modules/core-js/modules/_set-proto.js"}],"../../node_modules/core-js/modules/_is-regexp.js":[function(require,module,exports) {
// 7.2.8 IsRegExp(argument)
var isObject = require('./_is-object');
var cof = require('./_cof');
var MATCH = require('./_wks')('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};

},{"./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_cof":"../../node_modules/core-js/modules/_cof.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_flags.js":[function(require,module,exports) {
'use strict';
// 21.2.5.3 get RegExp.prototype.flags
var anObject = require('./_an-object');
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js"}],"../../node_modules/core-js/modules/es6.regexp.constructor.js":[function(require,module,exports) {

var global = require('./_global');
var inheritIfRequired = require('./_inherit-if-required');
var dP = require('./_object-dp').f;
var gOPN = require('./_object-gopn').f;
var isRegExp = require('./_is-regexp');
var $flags = require('./_flags');
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {
  re2[require('./_wks')('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  require('./_redefine')(global, 'RegExp', $RegExp);
}

require('./_set-species')('RegExp');

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_inherit-if-required":"../../node_modules/core-js/modules/_inherit-if-required.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_flags":"../../node_modules/core-js/modules/_flags.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/es6.regexp.flags.js":[function(require,module,exports) {
// 21.2.5.3 get RegExp.prototype.flags()
if (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {
  configurable: true,
  get: require('./_flags')
});

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_flags":"../../node_modules/core-js/modules/_flags.js"}],"../../node_modules/core-js/modules/_string-at.js":[function(require,module,exports) {
var toInteger = require('./_to-integer');
var defined = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_advance-string-index.js":[function(require,module,exports) {
'use strict';
var at = require('./_string-at')(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};

},{"./_string-at":"../../node_modules/core-js/modules/_string-at.js"}],"../../node_modules/core-js/modules/_regexp-exec-abstract.js":[function(require,module,exports) {
'use strict';

var classof = require('./_classof');
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};

},{"./_classof":"../../node_modules/core-js/modules/_classof.js"}],"../../node_modules/core-js/modules/_regexp-exec.js":[function(require,module,exports) {
'use strict';

var regexpFlags = require('./_flags');

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;

},{"./_flags":"../../node_modules/core-js/modules/_flags.js"}],"../../node_modules/core-js/modules/es6.regexp.exec.js":[function(require,module,exports) {
'use strict';
var regexpExec = require('./_regexp-exec');
require('./_export')({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});

},{"./_regexp-exec":"../../node_modules/core-js/modules/_regexp-exec.js","./_export":"../../node_modules/core-js/modules/_export.js"}],"../../node_modules/core-js/modules/_fix-re-wks.js":[function(require,module,exports) {
'use strict';
require('./es6.regexp.exec');
var redefine = require('./_redefine');
var hide = require('./_hide');
var fails = require('./_fails');
var defined = require('./_defined');
var wks = require('./_wks');
var regexpExec = require('./_regexp-exec');

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};

},{"./es6.regexp.exec":"../../node_modules/core-js/modules/es6.regexp.exec.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_defined":"../../node_modules/core-js/modules/_defined.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_regexp-exec":"../../node_modules/core-js/modules/_regexp-exec.js"}],"../../node_modules/core-js/modules/es6.regexp.match.js":[function(require,module,exports) {
'use strict';

var anObject = require('./_an-object');
var toLength = require('./_to-length');
var advanceStringIndex = require('./_advance-string-index');
var regExpExec = require('./_regexp-exec-abstract');

// @@match logic
require('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_advance-string-index":"../../node_modules/core-js/modules/_advance-string-index.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/es6.regexp.replace.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';

var anObject = require('./_an-object');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var toInteger = require('./_to-integer');
var advanceStringIndex = require('./_advance-string-index');
var regExpExec = require('./_regexp-exec-abstract');
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
require('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_advance-string-index":"../../node_modules/core-js/modules/_advance-string-index.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/es6.regexp.split.js":[function(require,module,exports) {
'use strict';

var isRegExp = require('./_is-regexp');
var anObject = require('./_an-object');
var speciesConstructor = require('./_species-constructor');
var advanceStringIndex = require('./_advance-string-index');
var toLength = require('./_to-length');
var callRegExpExec = require('./_regexp-exec-abstract');
var regexpExec = require('./_regexp-exec');
var fails = require('./_fails');
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
require('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});

},{"./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_advance-string-index":"../../node_modules/core-js/modules/_advance-string-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_regexp-exec":"../../node_modules/core-js/modules/_regexp-exec.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/es6.regexp.search.js":[function(require,module,exports) {
'use strict';

var anObject = require('./_an-object');
var sameValue = require('./_same-value');
var regExpExec = require('./_regexp-exec-abstract');

// @@search logic
require('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});

},{"./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_same-value":"../../node_modules/core-js/modules/_same-value.js","./_regexp-exec-abstract":"../../node_modules/core-js/modules/_regexp-exec-abstract.js","./_fix-re-wks":"../../node_modules/core-js/modules/_fix-re-wks.js"}],"../../node_modules/core-js/modules/es6.regexp.to-string.js":[function(require,module,exports) {

'use strict';
require('./es6.regexp.flags');
var anObject = require('./_an-object');
var $flags = require('./_flags');
var DESCRIPTORS = require('./_descriptors');
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}

},{"./es6.regexp.flags":"../../node_modules/core-js/modules/es6.regexp.flags.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_flags":"../../node_modules/core-js/modules/_flags.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_fails":"../../node_modules/core-js/modules/_fails.js"}],"../../node_modules/core-js/modules/es6.set.js":[function(require,module,exports) {
'use strict';
var strong = require('./_collection-strong');
var validate = require('./_validate-collection');
var SET = 'Set';

// 23.2 Set Objects
module.exports = require('./_collection')(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);

},{"./_collection-strong":"../../node_modules/core-js/modules/_collection-strong.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/_wks-ext.js":[function(require,module,exports) {
exports.f = require('./_wks');

},{"./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/_wks-define.js":[function(require,module,exports) {

var global = require('./_global');
var core = require('./_core');
var LIBRARY = require('./_library');
var wksExt = require('./_wks-ext');
var defineProperty = require('./_object-dp').f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_core":"../../node_modules/core-js/modules/_core.js","./_library":"../../node_modules/core-js/modules/_library.js","./_wks-ext":"../../node_modules/core-js/modules/_wks-ext.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js"}],"../../node_modules/core-js/modules/_enum-keys.js":[function(require,module,exports) {
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys');
var gOPS = require('./_object-gops');
var pIE = require('./_object-pie');
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

},{"./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js"}],"../../node_modules/core-js/modules/es6.symbol.js":[function(require,module,exports) {

'use strict';
// ECMAScript 6 symbols shim
var global = require('./_global');
var has = require('./_has');
var DESCRIPTORS = require('./_descriptors');
var $export = require('./_export');
var redefine = require('./_redefine');
var META = require('./_meta').KEY;
var $fails = require('./_fails');
var shared = require('./_shared');
var setToStringTag = require('./_set-to-string-tag');
var uid = require('./_uid');
var wks = require('./_wks');
var wksExt = require('./_wks-ext');
var wksDefine = require('./_wks-define');
var enumKeys = require('./_enum-keys');
var isArray = require('./_is-array');
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var toObject = require('./_to-object');
var toIObject = require('./_to-iobject');
var toPrimitive = require('./_to-primitive');
var createDesc = require('./_property-desc');
var _create = require('./_object-create');
var gOPNExt = require('./_object-gopn-ext');
var $GOPD = require('./_object-gopd');
var $GOPS = require('./_object-gops');
var $DP = require('./_object-dp');
var $keys = require('./_object-keys');
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !require('./_library')) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_has":"../../node_modules/core-js/modules/_has.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_export":"../../node_modules/core-js/modules/_export.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_shared":"../../node_modules/core-js/modules/_shared.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_wks-ext":"../../node_modules/core-js/modules/_wks-ext.js","./_wks-define":"../../node_modules/core-js/modules/_wks-define.js","./_enum-keys":"../../node_modules/core-js/modules/_enum-keys.js","./_is-array":"../../node_modules/core-js/modules/_is-array.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_object-gopn-ext":"../../node_modules/core-js/modules/_object-gopn-ext.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js","./_object-gops":"../../node_modules/core-js/modules/_object-gops.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-pie":"../../node_modules/core-js/modules/_object-pie.js","./_library":"../../node_modules/core-js/modules/_library.js","./_hide":"../../node_modules/core-js/modules/_hide.js"}],"../../node_modules/core-js/modules/es7.symbol.async-iterator.js":[function(require,module,exports) {
require('./_wks-define')('asyncIterator');

},{"./_wks-define":"../../node_modules/core-js/modules/_wks-define.js"}],"../../node_modules/core-js/modules/_string-html.js":[function(require,module,exports) {
var $export = require('./_export');
var fails = require('./_fails');
var defined = require('./_defined');
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/es6.string.anchor.js":[function(require,module,exports) {
'use strict';
// B.2.3.2 String.prototype.anchor(name)
require('./_string-html')('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.big.js":[function(require,module,exports) {
'use strict';
// B.2.3.3 String.prototype.big()
require('./_string-html')('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.blink.js":[function(require,module,exports) {
'use strict';
// B.2.3.4 String.prototype.blink()
require('./_string-html')('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.bold.js":[function(require,module,exports) {
'use strict';
// B.2.3.5 String.prototype.bold()
require('./_string-html')('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.code-point-at.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $at = require('./_string-at')(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-at":"../../node_modules/core-js/modules/_string-at.js"}],"../../node_modules/core-js/modules/_string-context.js":[function(require,module,exports) {
// helper for String#{startsWith, endsWith, includes}
var isRegExp = require('./_is-regexp');
var defined = require('./_defined');

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};

},{"./_is-regexp":"../../node_modules/core-js/modules/_is-regexp.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_fails-is-regexp.js":[function(require,module,exports) {
var MATCH = require('./_wks')('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};

},{"./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es6.string.ends-with.js":[function(require,module,exports) {
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_string-context":"../../node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"../../node_modules/core-js/modules/_fails-is-regexp.js"}],"../../node_modules/core-js/modules/es6.string.fixed.js":[function(require,module,exports) {
'use strict';
// B.2.3.6 String.prototype.fixed()
require('./_string-html')('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.fontcolor.js":[function(require,module,exports) {
'use strict';
// B.2.3.7 String.prototype.fontcolor(color)
require('./_string-html')('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.fontsize.js":[function(require,module,exports) {
'use strict';
// B.2.3.8 String.prototype.fontsize(size)
require('./_string-html')('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.from-code-point.js":[function(require,module,exports) {
var $export = require('./_export');
var toAbsoluteIndex = require('./_to-absolute-index');
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js"}],"../../node_modules/core-js/modules/es6.string.includes.js":[function(require,module,exports) {
// 21.1.3.7 String.prototype.includes(searchString, position = 0)
'use strict';
var $export = require('./_export');
var context = require('./_string-context');
var INCLUDES = 'includes';

$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-context":"../../node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"../../node_modules/core-js/modules/_fails-is-regexp.js"}],"../../node_modules/core-js/modules/es6.string.italics.js":[function(require,module,exports) {
'use strict';
// B.2.3.9 String.prototype.italics()
require('./_string-html')('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.iterator.js":[function(require,module,exports) {
'use strict';
var $at = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

},{"./_string-at":"../../node_modules/core-js/modules/_string-at.js","./_iter-define":"../../node_modules/core-js/modules/_iter-define.js"}],"../../node_modules/core-js/modules/es6.string.link.js":[function(require,module,exports) {
'use strict';
// B.2.3.10 String.prototype.link(url)
require('./_string-html')('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/_string-repeat.js":[function(require,module,exports) {
'use strict';
var toInteger = require('./_to-integer');
var defined = require('./_defined');

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/_string-pad.js":[function(require,module,exports) {
// https://github.com/tc39/proposal-string-pad-start-end
var toLength = require('./_to-length');
var repeat = require('./_string-repeat');
var defined = require('./_defined');

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};

},{"./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_string-repeat":"../../node_modules/core-js/modules/_string-repeat.js","./_defined":"../../node_modules/core-js/modules/_defined.js"}],"../../node_modules/core-js/modules/es7.string.pad-start.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-pad":"../../node_modules/core-js/modules/_string-pad.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js"}],"../../node_modules/core-js/modules/es7.string.pad-end.js":[function(require,module,exports) {
'use strict';
// https://github.com/tc39/proposal-string-pad-start-end
var $export = require('./_export');
var $pad = require('./_string-pad');
var userAgent = require('./_user-agent');

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-pad":"../../node_modules/core-js/modules/_string-pad.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js"}],"../../node_modules/core-js/modules/es6.string.raw.js":[function(require,module,exports) {
var $export = require('./_export');
var toIObject = require('./_to-iobject');
var toLength = require('./_to-length');

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-iobject":"../../node_modules/core-js/modules/_to-iobject.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/es6.string.repeat.js":[function(require,module,exports) {
var $export = require('./_export');

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: require('./_string-repeat')
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_string-repeat":"../../node_modules/core-js/modules/_string-repeat.js"}],"../../node_modules/core-js/modules/es6.string.small.js":[function(require,module,exports) {
'use strict';
// B.2.3.11 String.prototype.small()
require('./_string-html')('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.starts-with.js":[function(require,module,exports) {
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
'use strict';
var $export = require('./_export');
var toLength = require('./_to-length');
var context = require('./_string-context');
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_string-context":"../../node_modules/core-js/modules/_string-context.js","./_fails-is-regexp":"../../node_modules/core-js/modules/_fails-is-regexp.js"}],"../../node_modules/core-js/modules/es6.string.strike.js":[function(require,module,exports) {
'use strict';
// B.2.3.12 String.prototype.strike()
require('./_string-html')('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.sub.js":[function(require,module,exports) {
'use strict';
// B.2.3.13 String.prototype.sub()
require('./_string-html')('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/es6.string.sup.js":[function(require,module,exports) {
'use strict';
// B.2.3.14 String.prototype.sup()
require('./_string-html')('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});

},{"./_string-html":"../../node_modules/core-js/modules/_string-html.js"}],"../../node_modules/core-js/modules/_typed.js":[function(require,module,exports) {

var global = require('./_global');
var hide = require('./_hide');
var uid = require('./_uid');
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_uid":"../../node_modules/core-js/modules/_uid.js"}],"../../node_modules/core-js/modules/_to-index.js":[function(require,module,exports) {
// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};

},{"./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js"}],"../../node_modules/core-js/modules/_typed-buffer.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var DESCRIPTORS = require('./_descriptors');
var LIBRARY = require('./_library');
var $typed = require('./_typed');
var hide = require('./_hide');
var redefineAll = require('./_redefine-all');
var fails = require('./_fails');
var anInstance = require('./_an-instance');
var toInteger = require('./_to-integer');
var toLength = require('./_to-length');
var toIndex = require('./_to-index');
var gOPN = require('./_object-gopn').f;
var dP = require('./_object-dp').f;
var arrayFill = require('./_array-fill');
var setToStringTag = require('./_set-to-string-tag');
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_library":"../../node_modules/core-js/modules/_library.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-index":"../../node_modules/core-js/modules/_to-index.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_array-fill":"../../node_modules/core-js/modules/_array-fill.js","./_set-to-string-tag":"../../node_modules/core-js/modules/_set-to-string-tag.js"}],"../../node_modules/core-js/modules/es6.typed.array-buffer.js":[function(require,module,exports) {
'use strict';
var $export = require('./_export');
var $typed = require('./_typed');
var buffer = require('./_typed-buffer');
var anObject = require('./_an-object');
var toAbsoluteIndex = require('./_to-absolute-index');
var toLength = require('./_to-length');
var isObject = require('./_is-object');
var ArrayBuffer = require('./_global').ArrayBuffer;
var speciesConstructor = require('./_species-constructor');
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * require('./_fails')(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

require('./_set-species')(ARRAY_BUFFER);

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_typed-buffer":"../../node_modules/core-js/modules/_typed-buffer.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_global":"../../node_modules/core-js/modules/_global.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js"}],"../../node_modules/core-js/modules/_typed-array.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';
if (require('./_descriptors')) {
  var LIBRARY = require('./_library');
  var global = require('./_global');
  var fails = require('./_fails');
  var $export = require('./_export');
  var $typed = require('./_typed');
  var $buffer = require('./_typed-buffer');
  var ctx = require('./_ctx');
  var anInstance = require('./_an-instance');
  var propertyDesc = require('./_property-desc');
  var hide = require('./_hide');
  var redefineAll = require('./_redefine-all');
  var toInteger = require('./_to-integer');
  var toLength = require('./_to-length');
  var toIndex = require('./_to-index');
  var toAbsoluteIndex = require('./_to-absolute-index');
  var toPrimitive = require('./_to-primitive');
  var has = require('./_has');
  var classof = require('./_classof');
  var isObject = require('./_is-object');
  var toObject = require('./_to-object');
  var isArrayIter = require('./_is-array-iter');
  var create = require('./_object-create');
  var getPrototypeOf = require('./_object-gpo');
  var gOPN = require('./_object-gopn').f;
  var getIterFn = require('./core.get-iterator-method');
  var uid = require('./_uid');
  var wks = require('./_wks');
  var createArrayMethod = require('./_array-methods');
  var createArrayIncludes = require('./_array-includes');
  var speciesConstructor = require('./_species-constructor');
  var ArrayIterators = require('./es6.array.iterator');
  var Iterators = require('./_iterators');
  var $iterDetect = require('./_iter-detect');
  var setSpecies = require('./_set-species');
  var arrayFill = require('./_array-fill');
  var arrayCopyWithin = require('./_array-copy-within');
  var $DP = require('./_object-dp');
  var $GOPD = require('./_object-gopd');
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };

},{"./_descriptors":"../../node_modules/core-js/modules/_descriptors.js","./_library":"../../node_modules/core-js/modules/_library.js","./_global":"../../node_modules/core-js/modules/_global.js","./_fails":"../../node_modules/core-js/modules/_fails.js","./_export":"../../node_modules/core-js/modules/_export.js","./_typed":"../../node_modules/core-js/modules/_typed.js","./_typed-buffer":"../../node_modules/core-js/modules/_typed-buffer.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_property-desc":"../../node_modules/core-js/modules/_property-desc.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_to-integer":"../../node_modules/core-js/modules/_to-integer.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_to-index":"../../node_modules/core-js/modules/_to-index.js","./_to-absolute-index":"../../node_modules/core-js/modules/_to-absolute-index.js","./_to-primitive":"../../node_modules/core-js/modules/_to-primitive.js","./_has":"../../node_modules/core-js/modules/_has.js","./_classof":"../../node_modules/core-js/modules/_classof.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_is-array-iter":"../../node_modules/core-js/modules/_is-array-iter.js","./_object-create":"../../node_modules/core-js/modules/_object-create.js","./_object-gpo":"../../node_modules/core-js/modules/_object-gpo.js","./_object-gopn":"../../node_modules/core-js/modules/_object-gopn.js","./core.get-iterator-method":"../../node_modules/core-js/modules/core.get-iterator-method.js","./_uid":"../../node_modules/core-js/modules/_uid.js","./_wks":"../../node_modules/core-js/modules/_wks.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_array-includes":"../../node_modules/core-js/modules/_array-includes.js","./_species-constructor":"../../node_modules/core-js/modules/_species-constructor.js","./es6.array.iterator":"../../node_modules/core-js/modules/es6.array.iterator.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_iter-detect":"../../node_modules/core-js/modules/_iter-detect.js","./_set-species":"../../node_modules/core-js/modules/_set-species.js","./_array-fill":"../../node_modules/core-js/modules/_array-fill.js","./_array-copy-within":"../../node_modules/core-js/modules/_array-copy-within.js","./_object-dp":"../../node_modules/core-js/modules/_object-dp.js","./_object-gopd":"../../node_modules/core-js/modules/_object-gopd.js"}],"../../node_modules/core-js/modules/es6.typed.int8-array.js":[function(require,module,exports) {
require('./_typed-array')('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint8-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.int16-array.js":[function(require,module,exports) {
require('./_typed-array')('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint16-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.int32-array.js":[function(require,module,exports) {
require('./_typed-array')('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.uint32-array.js":[function(require,module,exports) {
require('./_typed-array')('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.float32-array.js":[function(require,module,exports) {
require('./_typed-array')('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/es6.typed.float64-array.js":[function(require,module,exports) {
require('./_typed-array')('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

},{"./_typed-array":"../../node_modules/core-js/modules/_typed-array.js"}],"../../node_modules/core-js/modules/_collection-weak.js":[function(require,module,exports) {
'use strict';
var redefineAll = require('./_redefine-all');
var getWeak = require('./_meta').getWeak;
var anObject = require('./_an-object');
var isObject = require('./_is-object');
var anInstance = require('./_an-instance');
var forOf = require('./_for-of');
var createArrayMethod = require('./_array-methods');
var $has = require('./_has');
var validate = require('./_validate-collection');
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};

},{"./_redefine-all":"../../node_modules/core-js/modules/_redefine-all.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_an-object":"../../node_modules/core-js/modules/_an-object.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_an-instance":"../../node_modules/core-js/modules/_an-instance.js","./_for-of":"../../node_modules/core-js/modules/_for-of.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_has":"../../node_modules/core-js/modules/_has.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js"}],"../../node_modules/core-js/modules/es6.weak-map.js":[function(require,module,exports) {

'use strict';
var global = require('./_global');
var each = require('./_array-methods')(0);
var redefine = require('./_redefine');
var meta = require('./_meta');
var assign = require('./_object-assign');
var weak = require('./_collection-weak');
var isObject = require('./_is-object');
var validate = require('./_validate-collection');
var NATIVE_WEAK_MAP = require('./_validate-collection');
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_array-methods":"../../node_modules/core-js/modules/_array-methods.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_meta":"../../node_modules/core-js/modules/_meta.js","./_object-assign":"../../node_modules/core-js/modules/_object-assign.js","./_collection-weak":"../../node_modules/core-js/modules/_collection-weak.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/es6.weak-set.js":[function(require,module,exports) {
'use strict';
var weak = require('./_collection-weak');
var validate = require('./_validate-collection');
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
require('./_collection')(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);

},{"./_collection-weak":"../../node_modules/core-js/modules/_collection-weak.js","./_validate-collection":"../../node_modules/core-js/modules/_validate-collection.js","./_collection":"../../node_modules/core-js/modules/_collection.js"}],"../../node_modules/core-js/modules/_flatten-into-array.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = require('./_is-array');
var isObject = require('./_is-object');
var toLength = require('./_to-length');
var ctx = require('./_ctx');
var IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;

},{"./_is-array":"../../node_modules/core-js/modules/_is-array.js","./_is-object":"../../node_modules/core-js/modules/_is-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_ctx":"../../node_modules/core-js/modules/_ctx.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/core-js/modules/es7.array.flat-map.js":[function(require,module,exports) {
'use strict';
// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = require('./_export');
var flattenIntoArray = require('./_flatten-into-array');
var toObject = require('./_to-object');
var toLength = require('./_to-length');
var aFunction = require('./_a-function');
var arraySpeciesCreate = require('./_array-species-create');

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

require('./_add-to-unscopables')('flatMap');

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_flatten-into-array":"../../node_modules/core-js/modules/_flatten-into-array.js","./_to-object":"../../node_modules/core-js/modules/_to-object.js","./_to-length":"../../node_modules/core-js/modules/_to-length.js","./_a-function":"../../node_modules/core-js/modules/_a-function.js","./_array-species-create":"../../node_modules/core-js/modules/_array-species-create.js","./_add-to-unscopables":"../../node_modules/core-js/modules/_add-to-unscopables.js"}],"../../node_modules/core-js/modules/web.timers.js":[function(require,module,exports) {

// ie9- setTimeout & setInterval additional parameters fix
var global = require('./_global');
var $export = require('./_export');
var userAgent = require('./_user-agent');
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});

},{"./_global":"../../node_modules/core-js/modules/_global.js","./_export":"../../node_modules/core-js/modules/_export.js","./_user-agent":"../../node_modules/core-js/modules/_user-agent.js"}],"../../node_modules/core-js/modules/web.immediate.js":[function(require,module,exports) {
var $export = require('./_export');
var $task = require('./_task');
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});

},{"./_export":"../../node_modules/core-js/modules/_export.js","./_task":"../../node_modules/core-js/modules/_task.js"}],"../../node_modules/core-js/modules/web.dom.iterable.js":[function(require,module,exports) {

var $iterators = require('./es6.array.iterator');
var getKeys = require('./_object-keys');
var redefine = require('./_redefine');
var global = require('./_global');
var hide = require('./_hide');
var Iterators = require('./_iterators');
var wks = require('./_wks');
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}

},{"./es6.array.iterator":"../../node_modules/core-js/modules/es6.array.iterator.js","./_object-keys":"../../node_modules/core-js/modules/_object-keys.js","./_redefine":"../../node_modules/core-js/modules/_redefine.js","./_global":"../../node_modules/core-js/modules/_global.js","./_hide":"../../node_modules/core-js/modules/_hide.js","./_iterators":"../../node_modules/core-js/modules/_iterators.js","./_wks":"../../node_modules/core-js/modules/_wks.js"}],"../../node_modules/regenerator-runtime/runtime.js":[function(require,module,exports) {
var define;
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

},{}],"../../node_modules/axios/lib/helpers/bind.js":[function(require,module,exports) {
'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

},{}],"../../node_modules/axios/lib/utils.js":[function(require,module,exports) {
'use strict';

var bind = require('./helpers/bind');

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};

},{"./helpers/bind":"../../node_modules/axios/lib/helpers/bind.js"}],"../../node_modules/axios/lib/helpers/buildURL.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

},{"./../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/core/InterceptorManager.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

},{"./../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/helpers/normalizeHeaderName.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

},{"../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/core/enhanceError.js":[function(require,module,exports) {
'use strict';

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  };
  return error;
};

},{}],"../../node_modules/axios/lib/core/createError.js":[function(require,module,exports) {
'use strict';

var enhanceError = require('./enhanceError');

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

},{"./enhanceError":"../../node_modules/axios/lib/core/enhanceError.js"}],"../../node_modules/axios/lib/core/settle.js":[function(require,module,exports) {
'use strict';

var createError = require('./createError');

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};

},{"./createError":"../../node_modules/axios/lib/core/createError.js"}],"../../node_modules/axios/lib/helpers/cookies.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);

},{"./../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/helpers/isAbsoluteURL.js":[function(require,module,exports) {
'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

},{}],"../../node_modules/axios/lib/helpers/combineURLs.js":[function(require,module,exports) {
'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};

},{}],"../../node_modules/axios/lib/core/buildFullPath.js":[function(require,module,exports) {
'use strict';

var isAbsoluteURL = require('../helpers/isAbsoluteURL');
var combineURLs = require('../helpers/combineURLs');

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};

},{"../helpers/isAbsoluteURL":"../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../helpers/combineURLs":"../../node_modules/axios/lib/helpers/combineURLs.js"}],"../../node_modules/axios/lib/helpers/parseHeaders.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

},{"./../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/helpers/isURLSameOrigin.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);

},{"./../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/cancel/Cancel.js":[function(require,module,exports) {
'use strict';

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;

},{}],"../../node_modules/axios/lib/adapters/xhr.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var settle = require('./../core/settle');
var cookies = require('./../helpers/cookies');
var buildURL = require('./../helpers/buildURL');
var buildFullPath = require('../core/buildFullPath');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var createError = require('../core/createError');
var defaults = require('../defaults');
var Cancel = require('../cancel/Cancel');

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;
    var onCanceled;
    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?
        request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      var transitional = config.transitional || defaults.transitional;
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(
        timeoutErrorMessage,
        config,
        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function(cancel) {
        if (!request) {
          return;
        }
        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);
      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

},{"./../utils":"../../node_modules/axios/lib/utils.js","./../core/settle":"../../node_modules/axios/lib/core/settle.js","./../helpers/cookies":"../../node_modules/axios/lib/helpers/cookies.js","./../helpers/buildURL":"../../node_modules/axios/lib/helpers/buildURL.js","../core/buildFullPath":"../../node_modules/axios/lib/core/buildFullPath.js","./../helpers/parseHeaders":"../../node_modules/axios/lib/helpers/parseHeaders.js","./../helpers/isURLSameOrigin":"../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../core/createError":"../../node_modules/axios/lib/core/createError.js","../defaults":"../../node_modules/axios/lib/defaults.js","../cancel/Cancel":"../../node_modules/axios/lib/cancel/Cancel.js"}],"../../node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"../../node_modules/axios/lib/defaults.js":[function(require,module,exports) {
var process = require("process");
'use strict';

var utils = require('./utils');
var normalizeHeaderName = require('./helpers/normalizeHeaderName');
var enhanceError = require('./core/enhanceError');

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = require('./adapters/xhr');
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = require('./adapters/http');
  }
  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {

  transitional: {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  },

  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional || defaults.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw enhanceError(e, this, 'E_JSON_PARSE');
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },

  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

},{"./utils":"../../node_modules/axios/lib/utils.js","./helpers/normalizeHeaderName":"../../node_modules/axios/lib/helpers/normalizeHeaderName.js","./core/enhanceError":"../../node_modules/axios/lib/core/enhanceError.js","./adapters/xhr":"../../node_modules/axios/lib/adapters/xhr.js","./adapters/http":"../../node_modules/axios/lib/adapters/xhr.js","process":"../../node_modules/process/browser.js"}],"../../node_modules/axios/lib/core/transformData.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var defaults = require('./../defaults');

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });

  return data;
};

},{"./../utils":"../../node_modules/axios/lib/utils.js","./../defaults":"../../node_modules/axios/lib/defaults.js"}],"../../node_modules/axios/lib/cancel/isCancel.js":[function(require,module,exports) {
'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

},{}],"../../node_modules/axios/lib/core/dispatchRequest.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');
var Cancel = require('../cancel/Cancel');

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new Cancel('canceled');
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData.call(
    config,
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};

},{"./../utils":"../../node_modules/axios/lib/utils.js","./transformData":"../../node_modules/axios/lib/core/transformData.js","../cancel/isCancel":"../../node_modules/axios/lib/cancel/isCancel.js","../defaults":"../../node_modules/axios/lib/defaults.js","../cancel/Cancel":"../../node_modules/axios/lib/cancel/Cancel.js"}],"../../node_modules/axios/lib/core/mergeConfig.js":[function(require,module,exports) {
'use strict';

var utils = require('../utils');

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(prop) {
    if (prop in config2) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  var mergeMap = {
    'url': valueFromConfig2,
    'method': valueFromConfig2,
    'data': valueFromConfig2,
    'baseURL': defaultToConfig2,
    'transformRequest': defaultToConfig2,
    'transformResponse': defaultToConfig2,
    'paramsSerializer': defaultToConfig2,
    'timeout': defaultToConfig2,
    'timeoutMessage': defaultToConfig2,
    'withCredentials': defaultToConfig2,
    'adapter': defaultToConfig2,
    'responseType': defaultToConfig2,
    'xsrfCookieName': defaultToConfig2,
    'xsrfHeaderName': defaultToConfig2,
    'onUploadProgress': defaultToConfig2,
    'onDownloadProgress': defaultToConfig2,
    'decompress': defaultToConfig2,
    'maxContentLength': defaultToConfig2,
    'maxBodyLength': defaultToConfig2,
    'transport': defaultToConfig2,
    'httpAgent': defaultToConfig2,
    'httpsAgent': defaultToConfig2,
    'cancelToken': defaultToConfig2,
    'socketPath': defaultToConfig2,
    'responseEncoding': defaultToConfig2,
    'validateStatus': mergeDirectKeys
  };

  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
    var merge = mergeMap[prop] || mergeDeepProperties;
    var configValue = merge(prop);
    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);
  });

  return config;
};

},{"../utils":"../../node_modules/axios/lib/utils.js"}],"../../node_modules/axios/lib/env/data.js":[function(require,module,exports) {
module.exports = {
  "version": "0.24.0"
};
},{}],"../../node_modules/axios/lib/helpers/validator.js":[function(require,module,exports) {
'use strict';

var VERSION = require('../env/data').version;

var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

var deprecatedWarnings = {};

/**
 * Transitional option validator
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function(value, opt, opts) {
    if (validator === false) {
      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new TypeError('options must be an object');
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new TypeError('option ' + opt + ' must be ' + result);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw Error('Unknown option ' + opt);
    }
  }
}

module.exports = {
  assertOptions: assertOptions,
  validators: validators
};

},{"../env/data":"../../node_modules/axios/lib/env/data.js"}],"../../node_modules/axios/lib/core/Axios.js":[function(require,module,exports) {
'use strict';

var utils = require('./../utils');
var buildURL = require('../helpers/buildURL');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');
var mergeConfig = require('./mergeConfig');
var validator = require('../helpers/validator');

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators.boolean),
      forcedJSONParsing: validators.transitional(validators.boolean),
      clarifyTimeoutError: validators.transitional(validators.boolean)
    }, false);
  }

  // filter out skipped interceptors
  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });

  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];

    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);

    promise = Promise.resolve(config);
    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }


  var newConfig = config;
  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();
    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;

},{"./../utils":"../../node_modules/axios/lib/utils.js","../helpers/buildURL":"../../node_modules/axios/lib/helpers/buildURL.js","./InterceptorManager":"../../node_modules/axios/lib/core/InterceptorManager.js","./dispatchRequest":"../../node_modules/axios/lib/core/dispatchRequest.js","./mergeConfig":"../../node_modules/axios/lib/core/mergeConfig.js","../helpers/validator":"../../node_modules/axios/lib/helpers/validator.js"}],"../../node_modules/axios/lib/cancel/CancelToken.js":[function(require,module,exports) {
'use strict';

var Cancel = require('./Cancel');

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;

  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;

  // eslint-disable-next-line func-names
  this.promise.then(function(cancel) {
    if (!token._listeners) return;

    var i;
    var l = token._listeners.length;

    for (i = 0; i < l; i++) {
      token._listeners[i](cancel);
    }
    token._listeners = null;
  });

  // eslint-disable-next-line func-names
  this.promise.then = function(onfulfilled) {
    var _resolve;
    // eslint-disable-next-line func-names
    var promise = new Promise(function(resolve) {
      token.subscribe(resolve);
      _resolve = resolve;
    }).then(onfulfilled);

    promise.cancel = function reject() {
      token.unsubscribe(_resolve);
    };

    return promise;
  };

  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Subscribe to the cancel signal
 */

CancelToken.prototype.subscribe = function subscribe(listener) {
  if (this.reason) {
    listener(this.reason);
    return;
  }

  if (this._listeners) {
    this._listeners.push(listener);
  } else {
    this._listeners = [listener];
  }
};

/**
 * Unsubscribe from the cancel signal
 */

CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
  if (!this._listeners) {
    return;
  }
  var index = this._listeners.indexOf(listener);
  if (index !== -1) {
    this._listeners.splice(index, 1);
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

},{"./Cancel":"../../node_modules/axios/lib/cancel/Cancel.js"}],"../../node_modules/axios/lib/helpers/spread.js":[function(require,module,exports) {
'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

},{}],"../../node_modules/axios/lib/helpers/isAxiosError.js":[function(require,module,exports) {
'use strict';

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};

},{}],"../../node_modules/axios/lib/axios.js":[function(require,module,exports) {
'use strict';

var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');
axios.VERSION = require('./env/data').version;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

// Expose isAxiosError
axios.isAxiosError = require('./helpers/isAxiosError');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;

},{"./utils":"../../node_modules/axios/lib/utils.js","./helpers/bind":"../../node_modules/axios/lib/helpers/bind.js","./core/Axios":"../../node_modules/axios/lib/core/Axios.js","./core/mergeConfig":"../../node_modules/axios/lib/core/mergeConfig.js","./defaults":"../../node_modules/axios/lib/defaults.js","./cancel/Cancel":"../../node_modules/axios/lib/cancel/Cancel.js","./cancel/CancelToken":"../../node_modules/axios/lib/cancel/CancelToken.js","./cancel/isCancel":"../../node_modules/axios/lib/cancel/isCancel.js","./env/data":"../../node_modules/axios/lib/env/data.js","./helpers/spread":"../../node_modules/axios/lib/helpers/spread.js","./helpers/isAxiosError":"../../node_modules/axios/lib/helpers/isAxiosError.js"}],"../../node_modules/axios/index.js":[function(require,module,exports) {
module.exports = require('./lib/axios');
},{"./lib/axios":"../../node_modules/axios/lib/axios.js"}],"../../node_modules/node-libs-browser/node_modules/util/support/isBufferBrowser.js":[function(require,module,exports) {
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],"../../node_modules/node-libs-browser/node_modules/inherits/inherits_browser.js":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"../../node_modules/node-libs-browser/node_modules/util/util.js":[function(require,module,exports) {
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {
  var keys = Object.keys(obj);
  var descriptors = {};

  for (var i = 0; i < keys.length; i++) {
    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
  }

  return descriptors;
};

var formatRegExp = /%[sdj%]/g;

exports.format = function (f) {
  if (!isString(f)) {
    var objects = [];

    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }

    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function (x) {
    if (x === '%%') return '%';
    if (i >= len) return x;

    switch (x) {
      case '%s':
        return String(args[i++]);

      case '%d':
        return Number(args[i++]);

      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }

      default:
        return x;
    }
  });

  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }

  return str;
}; // Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.


exports.deprecate = function (fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  } // Allow for deprecating things in the process of starting up.


  if (typeof process === 'undefined') {
    return function () {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;

  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }

      warned = true;
    }

    return fn.apply(this, arguments);
  }

  return deprecated;
};

var debugs = {};
var debugEnviron;

exports.debuglog = function (set) {
  if (isUndefined(debugEnviron)) debugEnviron = undefined || '';
  set = set.toUpperCase();

  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;

      debugs[set] = function () {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function () {};
    }
  }

  return debugs[set];
};
/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */

/* legacy: obj, showHidden, depth, colors*/


function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  }; // legacy...

  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];

  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  } // set default options


  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}

exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

inspect.colors = {
  'bold': [1, 22],
  'italic': [3, 23],
  'underline': [4, 24],
  'inverse': [7, 27],
  'white': [37, 39],
  'grey': [90, 39],
  'black': [30, 39],
  'blue': [34, 39],
  'cyan': [36, 39],
  'green': [32, 39],
  'magenta': [35, 39],
  'red': [31, 39],
  'yellow': [33, 39]
}; // Don't use 'blue' not visible on cmd.exe

inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};

function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}

function stylizeNoColor(str, styleType) {
  return str;
}

function arrayToHash(array) {
  var hash = {};
  array.forEach(function (val, idx) {
    hash[val] = true;
  });
  return hash;
}

function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.
  !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);

    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }

    return ret;
  } // Primitive types cannot have properties


  var primitive = formatPrimitive(ctx, value);

  if (primitive) {
    return primitive;
  } // Look up the keys of the object.


  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  } // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx


  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  } // Some type of object without properties can be shortcutted.


  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }

    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }

    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }

    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '',
      array = false,
      braces = ['{', '}']; // Make Array say that they are Array

  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  } // Make functions say that they are functions


  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  } // Make RegExps say that they are RegExps


  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  } // Make dates with properties first say the date


  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  } // Make error with message first say the error


  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);
  var output;

  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function (key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();
  return reduceToSingleString(output, base, braces);
}

function formatPrimitive(ctx, value) {
  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }

  if (isNumber(value)) return ctx.stylize('' + value, 'number');
  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is "object", so special case here.

  if (isNull(value)) return ctx.stylize('null', 'null');
}

function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}

function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];

  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
    } else {
      output.push('');
    }
  }

  keys.forEach(function (key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
    }
  });
  return output;
}

function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || {
    value: value[key]
  };

  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }

  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }

  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }

      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function (line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function (line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }

  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }

    name = JSON.stringify('' + key);

    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}

function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function (prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
} // NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.


function isArray(ar) {
  return Array.isArray(ar);
}

exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}

exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}

exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}

exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}

exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}

exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}

exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}

exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}

exports.isDate = isDate;

function isError(e) {
  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
}

exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}

exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
  typeof arg === 'undefined';
}

exports.isPrimitive = isPrimitive;
exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}

var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34

function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
} // log is just a thin wrapper to console.log that prepends a timestamp


exports.log = function () {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};
/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */


exports.inherits = require('inherits');

exports._extend = function (origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;
  var keys = Object.keys(add);
  var i = keys.length;

  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }

  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function') throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];

    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }

    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn,
      enumerable: false,
      writable: false,
      configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });
    var args = [];

    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn,
    enumerable: false,
    writable: false,
    configurable: true
  });
  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));
};

exports.promisify.custom = kCustomPromisifiedSymbol;

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }

  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  } // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.


  function callbackified() {
    var args = [];

    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();

    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }

    var self = this;

    var cb = function () {
      return maybeCb.apply(self, arguments);
    }; // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)


    original.apply(this, args).then(function (ret) {
      process.nextTick(cb, null, ret);
    }, function (rej) {
      process.nextTick(callbackifyOnRejected, rej, cb);
    });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));
  return callbackified;
}

exports.callbackify = callbackify;
},{"./support/isBuffer":"../../node_modules/node-libs-browser/node_modules/util/support/isBufferBrowser.js","inherits":"../../node_modules/node-libs-browser/node_modules/inherits/inherits_browser.js","process":"../../node_modules/process/browser.js"}],"../../node_modules/object-assign/index.js":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"../../node_modules/assert/node_modules/util/support/isBufferBrowser.js":[function(require,module,exports) {
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],"../../node_modules/assert/node_modules/inherits/inherits_browser.js":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"../../node_modules/assert/node_modules/util/util.js":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var formatRegExp = /%[sdj%]/g;

exports.format = function (f) {
  if (!isString(f)) {
    var objects = [];

    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }

    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function (x) {
    if (x === '%%') return '%';
    if (i >= len) return x;

    switch (x) {
      case '%s':
        return String(args[i++]);

      case '%d':
        return Number(args[i++]);

      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }

      default:
        return x;
    }
  });

  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }

  return str;
}; // Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.


exports.deprecate = function (fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function () {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;

  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }

      warned = true;
    }

    return fn.apply(this, arguments);
  }

  return deprecated;
};

var debugs = {};
var debugEnviron;

exports.debuglog = function (set) {
  if (isUndefined(debugEnviron)) debugEnviron = undefined || '';
  set = set.toUpperCase();

  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;

      debugs[set] = function () {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function () {};
    }
  }

  return debugs[set];
};
/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */

/* legacy: obj, showHidden, depth, colors*/


function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  }; // legacy...

  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];

  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  } // set default options


  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}

exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

inspect.colors = {
  'bold': [1, 22],
  'italic': [3, 23],
  'underline': [4, 24],
  'inverse': [7, 27],
  'white': [37, 39],
  'grey': [90, 39],
  'black': [30, 39],
  'blue': [34, 39],
  'cyan': [36, 39],
  'green': [32, 39],
  'magenta': [35, 39],
  'red': [31, 39],
  'yellow': [33, 39]
}; // Don't use 'blue' not visible on cmd.exe

inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};

function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}

function stylizeNoColor(str, styleType) {
  return str;
}

function arrayToHash(array) {
  var hash = {};
  array.forEach(function (val, idx) {
    hash[val] = true;
  });
  return hash;
}

function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.
  !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);

    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }

    return ret;
  } // Primitive types cannot have properties


  var primitive = formatPrimitive(ctx, value);

  if (primitive) {
    return primitive;
  } // Look up the keys of the object.


  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  } // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx


  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  } // Some type of object without properties can be shortcutted.


  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }

    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }

    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }

    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '',
      array = false,
      braces = ['{', '}']; // Make Array say that they are Array

  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  } // Make functions say that they are functions


  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  } // Make RegExps say that they are RegExps


  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  } // Make dates with properties first say the date


  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  } // Make error with message first say the error


  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);
  var output;

  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function (key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();
  return reduceToSingleString(output, base, braces);
}

function formatPrimitive(ctx, value) {
  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }

  if (isNumber(value)) return ctx.stylize('' + value, 'number');
  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is "object", so special case here.

  if (isNull(value)) return ctx.stylize('null', 'null');
}

function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}

function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];

  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
    } else {
      output.push('');
    }
  }

  keys.forEach(function (key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
    }
  });
  return output;
}

function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || {
    value: value[key]
  };

  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }

  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }

  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }

      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function (line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function (line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }

  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }

    name = JSON.stringify('' + key);

    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}

function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function (prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
} // NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.


function isArray(ar) {
  return Array.isArray(ar);
}

exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}

exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}

exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}

exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}

exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}

exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}

exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}

exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}

exports.isDate = isDate;

function isError(e) {
  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
}

exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}

exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
  typeof arg === 'undefined';
}

exports.isPrimitive = isPrimitive;
exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}

var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34

function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
} // log is just a thin wrapper to console.log that prepends a timestamp


exports.log = function () {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};
/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */


exports.inherits = require('inherits');

exports._extend = function (origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;
  var keys = Object.keys(add);
  var i = keys.length;

  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }

  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}
},{"./support/isBuffer":"../../node_modules/assert/node_modules/util/support/isBufferBrowser.js","inherits":"../../node_modules/assert/node_modules/inherits/inherits_browser.js","process":"../../node_modules/process/browser.js"}],"../../node_modules/assert/assert.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';

var objectAssign = require('object-assign');

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:
// NB: The URL to the CommonJS spec is kept just for tradition.
//     node-assert has evolved a lot since then, both in API and behavior.

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

// Expose a strict only variant of assert
function strict(value, message) {
  if (!value) fail(value, true, message, '==', strict);
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

},{"object-assign":"../../node_modules/object-assign/index.js","util/":"../../node_modules/assert/node_modules/util/util.js"}],"../../node_modules/console-browserify/index.js":[function(require,module,exports) {
var global = arguments[3];
/*global window, global*/
var util = require("util")
var assert = require("assert")
function now() { return new Date().getTime() }

var slice = Array.prototype.slice
var console
var times = {}

if (typeof global !== "undefined" && global.console) {
    console = global.console
} else if (typeof window !== "undefined" && window.console) {
    console = window.console
} else {
    console = {}
}

var functions = [
    [log, "log"],
    [info, "info"],
    [warn, "warn"],
    [error, "error"],
    [time, "time"],
    [timeEnd, "timeEnd"],
    [trace, "trace"],
    [dir, "dir"],
    [consoleAssert, "assert"]
]

for (var i = 0; i < functions.length; i++) {
    var tuple = functions[i]
    var f = tuple[0]
    var name = tuple[1]

    if (!console[name]) {
        console[name] = f
    }
}

module.exports = console

function log() {}

function info() {
    console.log.apply(console, arguments)
}

function warn() {
    console.log.apply(console, arguments)
}

function error() {
    console.warn.apply(console, arguments)
}

function time(label) {
    times[label] = now()
}

function timeEnd(label) {
    var time = times[label]
    if (!time) {
        throw new Error("No such label: " + label)
    }

    delete times[label]
    var duration = now() - time
    console.log(label + ": " + duration + "ms")
}

function trace() {
    var err = new Error()
    err.name = "Trace"
    err.message = util.format.apply(null, arguments)
    console.error(err.stack)
}

function dir(object) {
    console.log(util.inspect(object) + "\n")
}

function consoleAssert(expression) {
    if (!expression) {
        var arr = slice.call(arguments, 1)
        assert.ok(false, util.format.apply(null, arr))
    }
}

},{"util":"../../node_modules/node-libs-browser/node_modules/util/util.js","assert":"../../node_modules/assert/assert.js"}],"../../node_modules/base64-js/index.js":[function(require,module,exports) {
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],"../../node_modules/ieee754/index.js":[function(require,module,exports) {
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],"../../node_modules/node-libs-browser/node_modules/isarray/index.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],"../../node_modules/node-libs-browser/node_modules/buffer/index.js":[function(require,module,exports) {

var global = arguments[3];
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"base64-js":"../../node_modules/base64-js/index.js","ieee754":"../../node_modules/ieee754/index.js","isarray":"../../node_modules/node-libs-browser/node_modules/isarray/index.js","buffer":"../../node_modules/node-libs-browser/node_modules/buffer/index.js"}],"../../node_modules/lodash/lodash.js":[function(require,module,exports) {
var global = arguments[3];
var Buffer = require("buffer").Buffer;
var define;
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('dÃ©jÃ  vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

},{"buffer":"../../node_modules/node-libs-browser/node_modules/buffer/index.js"}],"../../node_modules/moment/moment.js":[function(require,module,exports) {
var define;
var global = arguments[3];
//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            typeof module !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));

},{}],"../../node_modules/mongoose/dist/browser.umd.js":[function(require,module,exports) {
var define;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.mongoose = e() : t.mongoose = e();
}("undefined" != typeof self ? self : this, function () {
  return function (t) {
    var e = {};

    function r(n) {
      if (e[n]) return e[n].exports;
      var i = e[n] = {
        i: n,
        l: !1,
        exports: {}
      };
      return t[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;
    }

    return r.m = t, r.c = e, r.d = function (t, e, n) {
      r.o(t, e) || Object.defineProperty(t, e, {
        enumerable: !0,
        get: n
      });
    }, r.r = function (t) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(t, "__esModule", {
        value: !0
      });
    }, r.t = function (t, e) {
      if (1 & e && (t = r(t)), 8 & e) return t;
      if (4 & e && "object" == _typeof(t) && t && t.__esModule) return t;
      var n = Object.create(null);
      if (r.r(n), Object.defineProperty(n, "default", {
        enumerable: !0,
        value: t
      }), 2 & e && "string" != typeof t) for (var i in t) {
        r.d(n, i, function (e) {
          return t[e];
        }.bind(null, i));
      }
      return n;
    }, r.n = function (t) {
      var e = t && t.__esModule ? function () {
        return t.default;
      } : function () {
        return t;
      };
      return r.d(e, "a", e), e;
    }, r.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }, r.p = "", r(r.s = 184);
  }([function (t, e) {
    "function" == typeof Object.create ? t.exports = function (t, e) {
      e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
        constructor: {
          value: t,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }));
    } : t.exports = function (t, e) {
      if (e) {
        t.super_ = e;

        var r = function r() {};

        r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
      }
    };
  }, function (t, e, r) {
    "use strict";

    e.arrayAtomicsBackupSymbol = Symbol("mongoose#Array#atomicsBackup"), e.arrayAtomicsSymbol = Symbol("mongoose#Array#_atomics"), e.arrayParentSymbol = Symbol("mongoose#Array#_parent"), e.arrayPathSymbol = Symbol("mongoose#Array#_path"), e.arraySchemaSymbol = Symbol("mongoose#Array#_schema"), e.documentArrayParent = Symbol("mongoose:documentArrayParent"), e.documentIsSelected = Symbol("mongoose#Document#isSelected"), e.documentIsModified = Symbol("mongoose#Document#isModified"), e.documentModifiedPaths = Symbol("mongoose#Document#modifiedPaths"), e.documentSchemaSymbol = Symbol("mongoose#Document#schema"), e.getSymbol = Symbol("mongoose#Document#get"), e.modelSymbol = Symbol("mongoose#Model"), e.objectIdSymbol = Symbol("mongoose#ObjectId"), e.populateModelSymbol = Symbol("mongoose.PopulateOptions#Model"), e.schemaTypeSymbol = Symbol("mongoose#schemaType"), e.sessionNewDocuments = Symbol("mongoose:ClientSession#newDocuments"), e.scopeSymbol = Symbol("mongoose#Document#scope"), e.validatorErrorSymbol = Symbol("mongoose:validatorError");
  }, function (t, e, r) {
    var n = r(3),
        i = n.Buffer;

    function o(t, e) {
      for (var r in t) {
        e[r] = t[r];
      }
    }

    function s(t, e, r) {
      return i(t, e, r);
    }

    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = s), o(i, s), s.from = function (t, e, r) {
      if ("number" == typeof t) throw new TypeError("Argument must not be a number");
      return i(t, e, r);
    }, s.alloc = function (t, e, r) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      var n = i(t);
      return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
    }, s.allocUnsafe = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return i(t);
    }, s.allocUnsafeSlow = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return n.SlowBuffer(t);
    };
  }, function (t, e, r) {
    "use strict";

    (function (t) {
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <http://feross.org>
       * @license  MIT
       */
      var n = r(186),
          i = r(187),
          o = r(97);

      function s() {
        return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }

      function a(t, e) {
        if (s() < e) throw new RangeError("Invalid typed array length");
        return u.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e)).__proto__ = u.prototype : (null === t && (t = new u(e)), t.length = e), t;
      }

      function u(t, e, r) {
        if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u)) return new u(t, e, r);

        if ("number" == typeof t) {
          if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string");
          return c(this, t);
        }

        return h(this, t, e, r);
      }

      function h(t, e, r, n) {
        if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
        return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? function (t, e, r, n) {
          if (e.byteLength, r < 0 || e.byteLength < r) throw new RangeError("'offset' is out of bounds");
          if (e.byteLength < r + (n || 0)) throw new RangeError("'length' is out of bounds");
          e = void 0 === r && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, r) : new Uint8Array(e, r, n);
          u.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = u.prototype : t = l(t, e);
          return t;
        }(t, e, r, n) : "string" == typeof e ? function (t, e, r) {
          "string" == typeof r && "" !== r || (r = "utf8");
          if (!u.isEncoding(r)) throw new TypeError('"encoding" must be a valid string encoding');
          var n = 0 | p(e, r),
              i = (t = a(t, n)).write(e, r);
          i !== n && (t = t.slice(0, i));
          return t;
        }(t, e, r) : function (t, e) {
          if (u.isBuffer(e)) {
            var r = 0 | d(e.length);
            return 0 === (t = a(t, r)).length || e.copy(t, 0, 0, r), t;
          }

          if (e) {
            if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || (n = e.length) != n ? a(t, 0) : l(t, e);
            if ("Buffer" === e.type && o(e.data)) return l(t, e.data);
          }

          var n;
          throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
        }(t, e);
      }

      function f(t) {
        if ("number" != typeof t) throw new TypeError('"size" argument must be a number');
        if (t < 0) throw new RangeError('"size" argument must not be negative');
      }

      function c(t, e) {
        if (f(e), t = a(t, e < 0 ? 0 : 0 | d(e)), !u.TYPED_ARRAY_SUPPORT) for (var r = 0; r < e; ++r) {
          t[r] = 0;
        }
        return t;
      }

      function l(t, e) {
        var r = e.length < 0 ? 0 : 0 | d(e.length);
        t = a(t, r);

        for (var n = 0; n < r; n += 1) {
          t[n] = 255 & e[n];
        }

        return t;
      }

      function d(t) {
        if (t >= s()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s().toString(16) + " bytes");
        return 0 | t;
      }

      function p(t, e) {
        if (u.isBuffer(t)) return t.length;
        if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;
        "string" != typeof t && (t = "" + t);
        var r = t.length;
        if (0 === r) return 0;

        for (var n = !1;;) {
          switch (e) {
            case "ascii":
            case "latin1":
            case "binary":
              return r;

            case "utf8":
            case "utf-8":
            case void 0:
              return q(t).length;

            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r;

            case "hex":
              return r >>> 1;

            case "base64":
              return U(t).length;

            default:
              if (n) return q(t).length;
              e = ("" + e).toLowerCase(), n = !0;
          }
        }
      }

      function y(t, e, r) {
        var n = !1;
        if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";
        if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
        if ((r >>>= 0) <= (e >>>= 0)) return "";

        for (t || (t = "utf8");;) {
          switch (t) {
            case "hex":
              return j(this, e, r);

            case "utf8":
            case "utf-8":
              return E(this, e, r);

            case "ascii":
              return x(this, e, r);

            case "latin1":
            case "binary":
              return k(this, e, r);

            case "base64":
              return A(this, e, r);

            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return $(this, e, r);

            default:
              if (n) throw new TypeError("Unknown encoding: " + t);
              t = (t + "").toLowerCase(), n = !0;
          }
        }
      }

      function m(t, e, r) {
        var n = t[e];
        t[e] = t[r], t[r] = n;
      }

      function b(t, e, r, n, i) {
        if (0 === t.length) return -1;

        if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
          if (i) return -1;
          r = t.length - 1;
        } else if (r < 0) {
          if (!i) return -1;
          r = 0;
        }

        if ("string" == typeof e && (e = u.from(e, n)), u.isBuffer(e)) return 0 === e.length ? -1 : v(t, e, r, n, i);
        if ("number" == typeof e) return e &= 255, u.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : v(t, [e], r, n, i);
        throw new TypeError("val must be string, number or Buffer");
      }

      function v(t, e, r, n, i) {
        var o,
            s = 1,
            a = t.length,
            u = e.length;

        if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
          if (t.length < 2 || e.length < 2) return -1;
          s = 2, a /= 2, u /= 2, r /= 2;
        }

        function h(t, e) {
          return 1 === s ? t[e] : t.readUInt16BE(e * s);
        }

        if (i) {
          var f = -1;

          for (o = r; o < a; o++) {
            if (h(t, o) === h(e, -1 === f ? 0 : o - f)) {
              if (-1 === f && (f = o), o - f + 1 === u) return f * s;
            } else -1 !== f && (o -= o - f), f = -1;
          }
        } else for (r + u > a && (r = a - u), o = r; o >= 0; o--) {
          for (var c = !0, l = 0; l < u; l++) {
            if (h(t, o + l) !== h(e, l)) {
              c = !1;
              break;
            }
          }

          if (c) return o;
        }

        return -1;
      }

      function g(t, e, r, n) {
        r = Number(r) || 0;
        var i = t.length - r;
        n ? (n = Number(n)) > i && (n = i) : n = i;
        var o = e.length;
        if (o % 2 != 0) throw new TypeError("Invalid hex string");
        n > o / 2 && (n = o / 2);

        for (var s = 0; s < n; ++s) {
          var a = parseInt(e.substr(2 * s, 2), 16);
          if (isNaN(a)) return s;
          t[r + s] = a;
        }

        return s;
      }

      function w(t, e, r, n) {
        return F(q(e, t.length - r), t, r, n);
      }

      function _(t, e, r, n) {
        return F(function (t) {
          for (var e = [], r = 0; r < t.length; ++r) {
            e.push(255 & t.charCodeAt(r));
          }

          return e;
        }(e), t, r, n);
      }

      function M(t, e, r, n) {
        return _(t, e, r, n);
      }

      function S(t, e, r, n) {
        return F(U(e), t, r, n);
      }

      function O(t, e, r, n) {
        return F(function (t, e) {
          for (var r, n, i, o = [], s = 0; s < t.length && !((e -= 2) < 0); ++s) {
            r = t.charCodeAt(s), n = r >> 8, i = r % 256, o.push(i), o.push(n);
          }

          return o;
        }(e, t.length - r), t, r, n);
      }

      function A(t, e, r) {
        return 0 === e && r === t.length ? n.fromByteArray(t) : n.fromByteArray(t.slice(e, r));
      }

      function E(t, e, r) {
        r = Math.min(t.length, r);

        for (var n = [], i = e; i < r;) {
          var o,
              s,
              a,
              u,
              h = t[i],
              f = null,
              c = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
          if (i + c <= r) switch (c) {
            case 1:
              h < 128 && (f = h);
              break;

            case 2:
              128 == (192 & (o = t[i + 1])) && (u = (31 & h) << 6 | 63 & o) > 127 && (f = u);
              break;

            case 3:
              o = t[i + 1], s = t[i + 2], 128 == (192 & o) && 128 == (192 & s) && (u = (15 & h) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (f = u);
              break;

            case 4:
              o = t[i + 1], s = t[i + 2], a = t[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (u = (15 & h) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && u < 1114112 && (f = u);
          }
          null === f ? (f = 65533, c = 1) : f > 65535 && (f -= 65536, n.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), n.push(f), i += c;
        }

        return function (t) {
          var e = t.length;
          if (e <= 4096) return String.fromCharCode.apply(String, t);
          var r = "",
              n = 0;

          for (; n < e;) {
            r += String.fromCharCode.apply(String, t.slice(n, n += 4096));
          }

          return r;
        }(n);
      }

      e.Buffer = u, e.SlowBuffer = function (t) {
        +t != t && (t = 0);
        return u.alloc(+t);
      }, e.INSPECT_MAX_BYTES = 50, u.TYPED_ARRAY_SUPPORT = void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : function () {
        try {
          var t = new Uint8Array(1);
          return t.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function foo() {
              return 42;
            }
          }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength;
        } catch (t) {
          return !1;
        }
      }(), e.kMaxLength = s(), u.poolSize = 8192, u._augment = function (t) {
        return t.__proto__ = u.prototype, t;
      }, u.from = function (t, e, r) {
        return h(null, t, e, r);
      }, u.TYPED_ARRAY_SUPPORT && (u.prototype.__proto__ = Uint8Array.prototype, u.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && u[Symbol.species] === u && Object.defineProperty(u, Symbol.species, {
        value: null,
        configurable: !0
      })), u.alloc = function (t, e, r) {
        return function (t, e, r, n) {
          return f(e), e <= 0 ? a(t, e) : void 0 !== r ? "string" == typeof n ? a(t, e).fill(r, n) : a(t, e).fill(r) : a(t, e);
        }(null, t, e, r);
      }, u.allocUnsafe = function (t) {
        return c(null, t);
      }, u.allocUnsafeSlow = function (t) {
        return c(null, t);
      }, u.isBuffer = function (t) {
        return !(null == t || !t._isBuffer);
      }, u.compare = function (t, e) {
        if (!u.isBuffer(t) || !u.isBuffer(e)) throw new TypeError("Arguments must be Buffers");
        if (t === e) return 0;

        for (var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i) {
          if (t[i] !== e[i]) {
            r = t[i], n = e[i];
            break;
          }
        }

        return r < n ? -1 : n < r ? 1 : 0;
      }, u.isEncoding = function (t) {
        switch (String(t).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return !0;

          default:
            return !1;
        }
      }, u.concat = function (t, e) {
        if (!o(t)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === t.length) return u.alloc(0);
        var r;
        if (void 0 === e) for (e = 0, r = 0; r < t.length; ++r) {
          e += t[r].length;
        }
        var n = u.allocUnsafe(e),
            i = 0;

        for (r = 0; r < t.length; ++r) {
          var s = t[r];
          if (!u.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
          s.copy(n, i), i += s.length;
        }

        return n;
      }, u.byteLength = p, u.prototype._isBuffer = !0, u.prototype.swap16 = function () {
        var t = this.length;
        if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");

        for (var e = 0; e < t; e += 2) {
          m(this, e, e + 1);
        }

        return this;
      }, u.prototype.swap32 = function () {
        var t = this.length;
        if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");

        for (var e = 0; e < t; e += 4) {
          m(this, e, e + 3), m(this, e + 1, e + 2);
        }

        return this;
      }, u.prototype.swap64 = function () {
        var t = this.length;
        if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");

        for (var e = 0; e < t; e += 8) {
          m(this, e, e + 7), m(this, e + 1, e + 6), m(this, e + 2, e + 5), m(this, e + 3, e + 4);
        }

        return this;
      }, u.prototype.toString = function () {
        var t = 0 | this.length;
        return 0 === t ? "" : 0 === arguments.length ? E(this, 0, t) : y.apply(this, arguments);
      }, u.prototype.equals = function (t) {
        if (!u.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
        return this === t || 0 === u.compare(this, t);
      }, u.prototype.inspect = function () {
        var t = "",
            r = e.INSPECT_MAX_BYTES;
        return this.length > 0 && (t = this.toString("hex", 0, r).match(/.{2}/g).join(" "), this.length > r && (t += " ... ")), "<Buffer " + t + ">";
      }, u.prototype.compare = function (t, e, r, n, i) {
        if (!u.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
        if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), e < 0 || r > t.length || n < 0 || i > this.length) throw new RangeError("out of range index");
        if (n >= i && e >= r) return 0;
        if (n >= i) return -1;
        if (e >= r) return 1;
        if (this === t) return 0;

        for (var o = (i >>>= 0) - (n >>>= 0), s = (r >>>= 0) - (e >>>= 0), a = Math.min(o, s), h = this.slice(n, i), f = t.slice(e, r), c = 0; c < a; ++c) {
          if (h[c] !== f[c]) {
            o = h[c], s = f[c];
            break;
          }
        }

        return o < s ? -1 : s < o ? 1 : 0;
      }, u.prototype.includes = function (t, e, r) {
        return -1 !== this.indexOf(t, e, r);
      }, u.prototype.indexOf = function (t, e, r) {
        return b(this, t, e, r, !0);
      }, u.prototype.lastIndexOf = function (t, e, r) {
        return b(this, t, e, r, !1);
      }, u.prototype.write = function (t, e, r, n) {
        if (void 0 === e) n = "utf8", r = this.length, e = 0;else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;else {
          if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          e |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
        }
        var i = this.length - e;
        if ((void 0 === r || r > i) && (r = i), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
        n || (n = "utf8");

        for (var o = !1;;) {
          switch (n) {
            case "hex":
              return g(this, t, e, r);

            case "utf8":
            case "utf-8":
              return w(this, t, e, r);

            case "ascii":
              return _(this, t, e, r);

            case "latin1":
            case "binary":
              return M(this, t, e, r);

            case "base64":
              return S(this, t, e, r);

            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return O(this, t, e, r);

            default:
              if (o) throw new TypeError("Unknown encoding: " + n);
              n = ("" + n).toLowerCase(), o = !0;
          }
        }
      }, u.prototype.toJSON = function () {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };

      function x(t, e, r) {
        var n = "";
        r = Math.min(t.length, r);

        for (var i = e; i < r; ++i) {
          n += String.fromCharCode(127 & t[i]);
        }

        return n;
      }

      function k(t, e, r) {
        var n = "";
        r = Math.min(t.length, r);

        for (var i = e; i < r; ++i) {
          n += String.fromCharCode(t[i]);
        }

        return n;
      }

      function j(t, e, r) {
        var n = t.length;
        (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);

        for (var i = "", o = e; o < r; ++o) {
          i += L(t[o]);
        }

        return i;
      }

      function $(t, e, r) {
        for (var n = t.slice(e, r), i = "", o = 0; o < n.length; o += 2) {
          i += String.fromCharCode(n[o] + 256 * n[o + 1]);
        }

        return i;
      }

      function P(t, e, r) {
        if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
        if (t + e > r) throw new RangeError("Trying to access beyond buffer length");
      }

      function R(t, e, r, n, i, o) {
        if (!u.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (e > i || e < o) throw new RangeError('"value" argument is out of bounds');
        if (r + n > t.length) throw new RangeError("Index out of range");
      }

      function B(t, e, r, n) {
        e < 0 && (e = 65535 + e + 1);

        for (var i = 0, o = Math.min(t.length - r, 2); i < o; ++i) {
          t[r + i] = (e & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i);
        }
      }

      function T(t, e, r, n) {
        e < 0 && (e = 4294967295 + e + 1);

        for (var i = 0, o = Math.min(t.length - r, 4); i < o; ++i) {
          t[r + i] = e >>> 8 * (n ? i : 3 - i) & 255;
        }
      }

      function I(t, e, r, n, i, o) {
        if (r + n > t.length) throw new RangeError("Index out of range");
        if (r < 0) throw new RangeError("Index out of range");
      }

      function N(t, e, r, n, o) {
        return o || I(t, 0, r, 4), i.write(t, e, r, n, 23, 4), r + 4;
      }

      function D(t, e, r, n, o) {
        return o || I(t, 0, r, 8), i.write(t, e, r, n, 52, 8), r + 8;
      }

      u.prototype.slice = function (t, e) {
        var r,
            n = this.length;
        if ((t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), (e = void 0 === e ? n : ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), e < t && (e = t), u.TYPED_ARRAY_SUPPORT) (r = this.subarray(t, e)).__proto__ = u.prototype;else {
          var i = e - t;
          r = new u(i, void 0);

          for (var o = 0; o < i; ++o) {
            r[o] = this[o + t];
          }
        }
        return r;
      }, u.prototype.readUIntLE = function (t, e, r) {
        t |= 0, e |= 0, r || P(t, e, this.length);

        for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);) {
          n += this[t + o] * i;
        }

        return n;
      }, u.prototype.readUIntBE = function (t, e, r) {
        t |= 0, e |= 0, r || P(t, e, this.length);

        for (var n = this[t + --e], i = 1; e > 0 && (i *= 256);) {
          n += this[t + --e] * i;
        }

        return n;
      }, u.prototype.readUInt8 = function (t, e) {
        return e || P(t, 1, this.length), this[t];
      }, u.prototype.readUInt16LE = function (t, e) {
        return e || P(t, 2, this.length), this[t] | this[t + 1] << 8;
      }, u.prototype.readUInt16BE = function (t, e) {
        return e || P(t, 2, this.length), this[t] << 8 | this[t + 1];
      }, u.prototype.readUInt32LE = function (t, e) {
        return e || P(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];
      }, u.prototype.readUInt32BE = function (t, e) {
        return e || P(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
      }, u.prototype.readIntLE = function (t, e, r) {
        t |= 0, e |= 0, r || P(t, e, this.length);

        for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);) {
          n += this[t + o] * i;
        }

        return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)), n;
      }, u.prototype.readIntBE = function (t, e, r) {
        t |= 0, e |= 0, r || P(t, e, this.length);

        for (var n = e, i = 1, o = this[t + --n]; n > 0 && (i *= 256);) {
          o += this[t + --n] * i;
        }

        return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o;
      }, u.prototype.readInt8 = function (t, e) {
        return e || P(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];
      }, u.prototype.readInt16LE = function (t, e) {
        e || P(t, 2, this.length);
        var r = this[t] | this[t + 1] << 8;
        return 32768 & r ? 4294901760 | r : r;
      }, u.prototype.readInt16BE = function (t, e) {
        e || P(t, 2, this.length);
        var r = this[t + 1] | this[t] << 8;
        return 32768 & r ? 4294901760 | r : r;
      }, u.prototype.readInt32LE = function (t, e) {
        return e || P(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
      }, u.prototype.readInt32BE = function (t, e) {
        return e || P(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
      }, u.prototype.readFloatLE = function (t, e) {
        return e || P(t, 4, this.length), i.read(this, t, !0, 23, 4);
      }, u.prototype.readFloatBE = function (t, e) {
        return e || P(t, 4, this.length), i.read(this, t, !1, 23, 4);
      }, u.prototype.readDoubleLE = function (t, e) {
        return e || P(t, 8, this.length), i.read(this, t, !0, 52, 8);
      }, u.prototype.readDoubleBE = function (t, e) {
        return e || P(t, 8, this.length), i.read(this, t, !1, 52, 8);
      }, u.prototype.writeUIntLE = function (t, e, r, n) {
        (t = +t, e |= 0, r |= 0, n) || R(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
        var i = 1,
            o = 0;

        for (this[e] = 255 & t; ++o < r && (i *= 256);) {
          this[e + o] = t / i & 255;
        }

        return e + r;
      }, u.prototype.writeUIntBE = function (t, e, r, n) {
        (t = +t, e |= 0, r |= 0, n) || R(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
        var i = r - 1,
            o = 1;

        for (this[e + i] = 255 & t; --i >= 0 && (o *= 256);) {
          this[e + i] = t / o & 255;
        }

        return e + r;
      }, u.prototype.writeUInt8 = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 1, 255, 0), u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[e] = 255 & t, e + 1;
      }, u.prototype.writeUInt16LE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : B(this, t, e, !0), e + 2;
      }, u.prototype.writeUInt16BE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : B(this, t, e, !1), e + 2;
      }, u.prototype.writeUInt32LE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t) : T(this, t, e, !0), e + 4;
      }, u.prototype.writeUInt32BE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : T(this, t, e, !1), e + 4;
      }, u.prototype.writeIntLE = function (t, e, r, n) {
        if (t = +t, e |= 0, !n) {
          var i = Math.pow(2, 8 * r - 1);
          R(this, t, e, r, i - 1, -i);
        }

        var o = 0,
            s = 1,
            a = 0;

        for (this[e] = 255 & t; ++o < r && (s *= 256);) {
          t < 0 && 0 === a && 0 !== this[e + o - 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
        }

        return e + r;
      }, u.prototype.writeIntBE = function (t, e, r, n) {
        if (t = +t, e |= 0, !n) {
          var i = Math.pow(2, 8 * r - 1);
          R(this, t, e, r, i - 1, -i);
        }

        var o = r - 1,
            s = 1,
            a = 0;

        for (this[e + o] = 255 & t; --o >= 0 && (s *= 256);) {
          t < 0 && 0 === a && 0 !== this[e + o + 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
        }

        return e + r;
      }, u.prototype.writeInt8 = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 1, 127, -128), u.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;
      }, u.prototype.writeInt16LE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : B(this, t, e, !0), e + 2;
      }, u.prototype.writeInt16BE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : B(this, t, e, !1), e + 2;
      }, u.prototype.writeInt32LE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 4, 2147483647, -2147483648), u.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24) : T(this, t, e, !0), e + 4;
      }, u.prototype.writeInt32BE = function (t, e, r) {
        return t = +t, e |= 0, r || R(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), u.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : T(this, t, e, !1), e + 4;
      }, u.prototype.writeFloatLE = function (t, e, r) {
        return N(this, t, e, !0, r);
      }, u.prototype.writeFloatBE = function (t, e, r) {
        return N(this, t, e, !1, r);
      }, u.prototype.writeDoubleLE = function (t, e, r) {
        return D(this, t, e, !0, r);
      }, u.prototype.writeDoubleBE = function (t, e, r) {
        return D(this, t, e, !1, r);
      }, u.prototype.copy = function (t, e, r, n) {
        if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;
        if (0 === t.length || 0 === this.length) return 0;
        if (e < 0) throw new RangeError("targetStart out of bounds");
        if (r < 0 || r >= this.length) throw new RangeError("sourceStart out of bounds");
        if (n < 0) throw new RangeError("sourceEnd out of bounds");
        n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);
        var i,
            o = n - r;
        if (this === t && r < e && e < n) for (i = o - 1; i >= 0; --i) {
          t[i + e] = this[i + r];
        } else if (o < 1e3 || !u.TYPED_ARRAY_SUPPORT) for (i = 0; i < o; ++i) {
          t[i + e] = this[i + r];
        } else Uint8Array.prototype.set.call(t, this.subarray(r, r + o), e);
        return o;
      }, u.prototype.fill = function (t, e, r, n) {
        if ("string" == typeof t) {
          if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), 1 === t.length) {
            var i = t.charCodeAt(0);
            i < 256 && (t = i);
          }

          if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
          if ("string" == typeof n && !u.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
        } else "number" == typeof t && (t &= 255);

        if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");
        if (r <= e) return this;
        var o;
        if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t) for (o = e; o < r; ++o) {
          this[o] = t;
        } else {
          var s = u.isBuffer(t) ? t : q(new u(t, n).toString()),
              a = s.length;

          for (o = 0; o < r - e; ++o) {
            this[o + e] = s[o % a];
          }
        }
        return this;
      };
      var C = /[^+\/0-9A-Za-z-_]/g;

      function L(t) {
        return t < 16 ? "0" + t.toString(16) : t.toString(16);
      }

      function q(t, e) {
        var r;
        e = e || 1 / 0;

        for (var n = t.length, i = null, o = [], s = 0; s < n; ++s) {
          if ((r = t.charCodeAt(s)) > 55295 && r < 57344) {
            if (!i) {
              if (r > 56319) {
                (e -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }

              if (s + 1 === n) {
                (e -= 3) > -1 && o.push(239, 191, 189);
                continue;
              }

              i = r;
              continue;
            }

            if (r < 56320) {
              (e -= 3) > -1 && o.push(239, 191, 189), i = r;
              continue;
            }

            r = 65536 + (i - 55296 << 10 | r - 56320);
          } else i && (e -= 3) > -1 && o.push(239, 191, 189);

          if (i = null, r < 128) {
            if ((e -= 1) < 0) break;
            o.push(r);
          } else if (r < 2048) {
            if ((e -= 2) < 0) break;
            o.push(r >> 6 | 192, 63 & r | 128);
          } else if (r < 65536) {
            if ((e -= 3) < 0) break;
            o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
          } else {
            if (!(r < 1114112)) throw new Error("Invalid code point");
            if ((e -= 4) < 0) break;
            o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
          }
        }

        return o;
      }

      function U(t) {
        return n.toByteArray(function (t) {
          if ((t = function (t) {
            return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");
          }(t).replace(C, "")).length < 2) return "";

          for (; t.length % 4 != 0;) {
            t += "=";
          }

          return t;
        }(t));
      }

      function F(t, e, r, n) {
        for (var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i) {
          e[i + r] = t[i];
        }

        return i;
      }
    }).call(this, r(7));
  }, function (t, e, r) {
    "use strict";

    (function (t, n) {
      /*!
       * Module dependencies.
       */
      function i(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

        if (!r) {
          if (Array.isArray(t) || (r = function (t, e) {
            if (!t) return;
            if ("string" == typeof t) return o(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === r && t.constructor && (r = t.constructor.name);
            if ("Map" === r || "Set" === r) return Array.from(t);
            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o(t, e);
          }(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);

            var _n = 0,
                i = function i() {};

            return {
              s: i,
              n: function n() {
                return _n >= t.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: t[_n++]
                };
              },
              e: function e(t) {
                throw t;
              },
              f: i
            };
          }

          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }

        var s,
            a = !0,
            u = !1;
        return {
          s: function s() {
            r = r.call(t);
          },
          n: function n() {
            var t = r.next();
            return a = t.done, t;
          },
          e: function e(t) {
            u = !0, s = t;
          },
          f: function f() {
            try {
              a || null == r.return || r.return();
            } finally {
              if (u) throw s;
            }
          }
        };
      }

      function o(t, e) {
        (null == e || e > t.length) && (e = t.length);

        for (var r = 0, n = new Array(e); r < e; r++) {
          n[r] = t[r];
        }

        return n;
      }

      function s(t) {
        return (s = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var a,
          u = r(151),
          h = r(85),
          f = r(152),
          c = r(34),
          l = r(18),
          d = r(297),
          p = r(44),
          y = r(45),
          m = r(35),
          b = r(155),
          v = r(154),
          g = r(53),
          w = r(54),
          _ = r(160),
          M = r(86),
          S = r(156).trustedSymbol;

      function O(t) {
        if (Array.isArray(t.populate)) {
          var r = [];
          t.populate.forEach(function (t) {
            if (/[\s]/.test(t.path)) {
              var n = Object.assign({}, t);
              n.path.split(" ").forEach(function (t) {
                n.path = t, r.push(e.populate(n)[0]);
              });
            } else r.push(e.populate(t)[0]);
          }), t.populate = e.populate(r);
        } else null != t.populate && "object" === s(t.populate) && (t.populate = e.populate(t.populate));

        var n = [],
            o = t.path.split(" ");
        null != t.options && (t.options = e.clone(t.options));
        var a,
            u = i(o);

        try {
          for (u.s(); !(a = u.n()).done;) {
            var h = a.value;
            n.push(new d(Object.assign({}, t, {
              path: h
            })));
          }
        } catch (t) {
          u.e(t);
        } finally {
          u.f();
        }

        return n;
      }
      /*!
       * Return the value of `obj` at the given `path`.
       *
       * @param {String} path
       * @param {Object} obj
       */


      e.specialProperties = M,
      /*!
       * Produces a collection name from model `name`. By default, just returns
       * the model name
       *
       * @param {String} name a model name
       * @param {Function} pluralize function that pluralizes the collection name
       * @return {String} a collection name
       * @api private
       */
      e.toCollectionName = function (t, e) {
        return "system.profile" === t || "system.indexes" === t ? t : "function" == typeof e ? e(t) : t;
      },
      /*!
       * Determines if `a` and `b` are deep equal.
       *
       * Modified from node/lib/assert.js
       *
       * @param {any} a a value to compare to `b`
       * @param {any} b a value to compare to `a`
       * @return {Boolean}
       * @api private
       */
      e.deepEqual = function r(n, i) {
        if (n === i) return !0;
        if ("object" !== s(n) && "object" !== s(i)) return n === i;
        if (n instanceof Date && i instanceof Date) return n.getTime() === i.getTime();
        if (b(n, "ObjectID") && b(i, "ObjectID") || b(n, "Decimal128") && b(i, "Decimal128")) return n.toString() === i.toString();
        if (n instanceof RegExp && i instanceof RegExp) return n.source === i.source && n.ignoreCase === i.ignoreCase && n.multiline === i.multiline && n.global === i.global;
        if (null == n || null == i) return !1;
        if (n.prototype !== i.prototype) return !1;
        if (n instanceof Map && i instanceof Map) return r(Array.from(n.keys()), Array.from(i.keys())) && r(Array.from(n.values()), Array.from(i.values()));
        if (n instanceof Number && i instanceof Number) return n.valueOf() === i.valueOf();
        if (t.isBuffer(n)) return e.buffer.areEqual(n, i);

        if (Array.isArray(n) && Array.isArray(i)) {
          var o = n.length;
          if (o !== i.length) return !1;

          for (var a = 0; a < o; ++a) {
            if (!r(n[a], i[a])) return !1;
          }

          return !0;
        }

        null != n.$__ ? n = n._doc : g(n) && (n = n.toObject()), null != i.$__ ? i = i._doc : g(i) && (i = i.toObject());
        var u = Object.keys(n),
            h = Object.keys(i),
            f = u.length;
        if (f !== h.length) return !1;

        for (var c = f - 1; c >= 0; c--) {
          if (u[c] !== h[c]) return !1;
        }

        for (var l = 0, d = u; l < d.length; l++) {
          var p = d[l];
          if (!r(n[p], i[p])) return !1;
        }

        return !0;
      },
      /*!
       * Get the last element of an array
       */
      e.last = function (t) {
        if (t.length > 0) return t[t.length - 1];
      }, e.clone = p,
      /*!
       * ignore
       */
      e.promiseOrCallback = w,
      /*!
       * ignore
       */
      e.cloneArrays = function (t) {
        return Array.isArray(t) ? t.map(function (t) {
          return e.cloneArrays(t);
        }) : t;
      },
      /*!
       * ignore
       */
      e.omit = function (t, e) {
        if (null == e) return Object.assign({}, t);
        Array.isArray(e) || (e = [e]);
        var r,
            n = Object.assign({}, t),
            o = i(e);

        try {
          for (o.s(); !(r = o.n()).done;) {
            delete n[r.value];
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }

        return n;
      },
      /*!
       * Shallow copies defaults into options.
       *
       * @param {Object} defaults
       * @param {Object} options
       * @return {Object} the merged object
       * @api private
       */
      e.options = function (t, e) {
        var r,
            n = Object.keys(t),
            i = n.length;

        for (e = e || {}; i--;) {
          (r = n[i]) in e || (e[r] = t[r]);
        }

        return e;
      },
      /*!
       * Generates a random string
       *
       * @api private
       */
      e.random = function () {
        return Math.random().toString().substr(3);
      },
      /*!
       * Merges `from` into `to` without overwriting existing properties.
       *
       * @param {Object} to
       * @param {Object} from
       * @api private
       */
      e.merge = function t(r, n, i, o) {
        i = i || {};
        var s,
            a = Object.keys(n),
            u = 0,
            h = a.length;
        n[S] && (r[S] = n[S]), o = o || "";

        for (var f = i.omitNested || {}; u < h;) {
          if (s = a[u++], !(i.omit && i.omit[s] || f[o] || M.has(s))) if (null == r[s]) r[s] = n[s];else if (e.isObject(n[s])) {
            if (e.isObject(r[s]) || (r[s] = {}), null != n[s]) {
              if (i.isDiscriminatorSchemaMerge && n[s].$isSingleNested && r[s].$isMongooseDocumentArray || n[s].$isMongooseDocumentArray && r[s].$isSingleNested) continue;

              if (n[s].instanceOfSchema) {
                r[s].instanceOfSchema ? _(r[s], n[s].clone(), i.isDiscriminatorSchemaMerge) : r[s] = n[s].clone();
                continue;
              }

              if (n[s] instanceof l) {
                r[s] = new l(n[s]);
                continue;
              }
            }

            t(r[s], n[s], i, o ? o + "." + s : s);
          } else i.overwrite && (r[s] = n[s]);
        }
      },
      /*!
       * Applies toObject recursively.
       *
       * @param {Document|Array|Object} obj
       * @return {Object}
       * @api private
       */
      e.toObject = function t(n) {
        var o;
        if (a || (a = r(14)), null == n) return n;
        if (n instanceof a) return n.toObject();

        if (Array.isArray(n)) {
          o = [];
          var s,
              u = i(n);

          try {
            for (u.s(); !(s = u.n()).done;) {
              var h = s.value;
              o.push(t(h));
            }
          } catch (t) {
            u.e(t);
          } finally {
            u.f();
          }

          return o;
        }

        if (e.isPOJO(n)) {
          o = {}, n[S] && (o[S] = n[S]);

          for (var f = 0, c = Object.keys(n); f < c.length; f++) {
            var l = c[f];
            M.has(l) || (o[l] = t(n[l]));
          }

          return o;
        }

        return n;
      }, e.isObject = m,
      /*!
       * Determines if `arg` is a plain old JavaScript object (POJO). Specifically,
       * `arg` must be an object but not an instance of any special class, like String,
       * ObjectId, etc.
       *
       * `Object.getPrototypeOf()` is part of ES5: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf
       *
       * @param {Object|Array|String|Function|RegExp|any} arg
       * @api private
       * @return {Boolean}
       */
      e.isPOJO = function (t) {
        if (null == t || "object" !== s(t)) return !1;
        var e = Object.getPrototypeOf(t);
        return !e || "Object" === e.constructor.name;
      },
      /*!
       * Determines if `arg` is an object that isn't an instance of a built-in value
       * class, like Array, Buffer, ObjectId, etc.
       */
      e.isNonBuiltinObject = function (t) {
        return "object" === s(t) && !e.isNativeObject(t) && !e.isMongooseType(t) && null != t;
      },
      /*!
       * Determines if `obj` is a built-in object like an array, date, boolean,
       * etc.
       */
      e.isNativeObject = function (t) {
        return Array.isArray(t) || t instanceof Date || t instanceof Boolean || t instanceof Number || t instanceof String;
      },
      /*!
       * Determines if `val` is an object that has no own keys
       */
      e.isEmptyObject = function (t) {
        return null != t && "object" === s(t) && 0 === Object.keys(t).length;
      },
      /*!
       * Search if `obj` or any POJOs nested underneath `obj` has a property named
       * `key`
       */
      e.hasKey = function (t, r) {
        for (var n = 0, i = Object.keys(t); n < i.length; n++) {
          var o = i[n];
          if (o === r) return !0;
          if (e.isPOJO(t[o]) && e.hasKey(t[o], r)) return !0;
        }

        return !1;
      },
      /*!
       * A faster Array.prototype.slice.call(arguments) alternative
       * @api private
       */
      e.args = f,
      /*!
       * process.nextTick helper.
       *
       * Wraps `callback` in a try/catch + nextTick.
       *
       * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback.
       *
       * @param {Function} callback
       * @api private
       */
      e.tick = function (t) {
        if ("function" == typeof t) return function () {
          try {
            t.apply(this, arguments);
          } catch (t) {
            y(function () {
              throw t;
            });
          }
        };
      },
      /*!
       * Returns true if `v` is an object that can be serialized as a primitive in
       * MongoDB
       */
      e.isMongooseType = function (e) {
        return e instanceof l || e instanceof c || e instanceof t;
      }, e.isMongooseObject = g,
      /*!
       * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB.
       *
       * @param {Object} object
       * @api private
       */
      e.expires = function (t) {
        var e;
        t && "Object" === t.constructor.name && "expires" in t && (e = "string" != typeof t.expires ? t.expires : Math.round(u(t.expires) / 1e3), t.expireAfterSeconds = e, delete t.expires);
      },
      /*!
       * populate helper
       */
      e.populate = function (t, r, n, i, o, a, u, h) {
        var f = null;

        if (1 === arguments.length) {
          if (t instanceof d) return [t];

          if (Array.isArray(t)) {
            var c = l(t);
            return c.map(function (t) {
              return e.populate(t)[0];
            });
          }

          f = e.isObject(t) ? Object.assign({}, t) : {
            path: t
          };
        } else f = "object" === s(n) ? {
          path: t,
          select: r,
          match: n,
          options: i
        } : {
          path: t,
          select: r,
          model: n,
          match: i,
          options: o,
          populate: a,
          justOne: u,
          count: h
        };

        if ("string" != typeof f.path) throw new TypeError("utils.populate: invalid path. Expected string. Got typeof `" + s(t) + "`");
        return O(f);

        function l(t) {
          var e = [];
          return t.forEach(function (t) {
            /[\s]/.test(t.path) ? t.path.split(" ").forEach(function (r) {
              var n = Object.assign({}, t);
              n.path = r, e.push(n);
            }) : e.push(t);
          }), e;
        }
      }, e.getValue = function (t, e, r) {
        return h.get(t, e, "_doc", r);
      },
      /*!
       * Sets the value of `obj` at the given `path`.
       *
       * @param {String} path
       * @param {Anything} val
       * @param {Object} obj
       */
      e.setValue = function (t, e, r, n, i) {
        h.set(t, e, r, "_doc", n, i);
      },
      /*!
       * Returns an array of values from object `o`.
       *
       * @param {Object} o
       * @return {Array}
       * @private
       */
      e.object = {}, e.object.vals = function (t) {
        for (var e = Object.keys(t), r = e.length, n = []; r--;) {
          n.push(t[e[r]]);
        }

        return n;
      },
      /*!
       * @see exports.options
       */
      e.object.shallowCopy = e.options;
      /*!
       * Safer helper for hasOwnProperty checks
       *
       * @param {Object} obj
       * @param {String} prop
       */

      var A = Object.prototype.hasOwnProperty;
      e.object.hasOwnProperty = function (t, e) {
        return A.call(t, e);
      },
      /*!
       * Determine if `val` is null or undefined
       *
       * @return {Boolean}
       */
      e.isNullOrUndefined = function (t) {
        return null == t;
      },
      /*!
       * ignore
       */
      e.array = {},
      /*!
       * Flattens an array.
       *
       * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]
       *
       * @param {Array} arr
       * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsy value, the item will not be included in the results.
       * @return {Array}
       * @private
       */
      e.array.flatten = function t(e, r, n) {
        return n || (n = []), e.forEach(function (e) {
          Array.isArray(e) ? t(e, r, n) : r && !r(e) || n.push(e);
        }), n;
      };
      /*!
       * ignore
       */

      var E = Object.prototype.hasOwnProperty;

      e.hasUserDefinedProperty = function (t, r) {
        if (null == t) return !1;

        if (Array.isArray(r)) {
          var n,
              o = i(r);

          try {
            for (o.s(); !(n = o.n()).done;) {
              var a = n.value;
              if (e.hasUserDefinedProperty(t, a)) return !0;
            }
          } catch (t) {
            o.e(t);
          } finally {
            o.f();
          }

          return !1;
        }

        if (E.call(t, r)) return !0;

        if ("object" === s(t) && r in t) {
          var u = t[r];
          return u !== Object.prototype[r] && u !== Array.prototype[r];
        }

        return !1;
      };
      /*!
       * ignore
       */


      var x = Math.pow(2, 32) - 1;
      e.isArrayIndex = function (t) {
        return "number" == typeof t ? t >= 0 && t <= x : "string" == typeof t && !!/^\d+$/.test(t) && (t = +t) >= 0 && t <= x;
      },
      /*!
       * Removes duplicate values from an array
       *
       * [1, 2, 3, 3, 5] => [1, 2, 3, 5]
       * [ ObjectId("550988ba0c19d57f697dc45e"), ObjectId("550988ba0c19d57f697dc45e") ]
       *    => [ObjectId("550988ba0c19d57f697dc45e")]
       *
       * @param {Array} arr
       * @return {Array}
       * @private
       */
      e.array.unique = function (t) {
        var e,
            r = new Set(),
            n = new Set(),
            o = [],
            s = i(t);

        try {
          for (s.s(); !(e = s.n()).done;) {
            var a = e.value;

            if ("number" == typeof a || "string" == typeof a || null == a) {
              if (r.has(a)) continue;
              o.push(a), r.add(a);
            } else if (a instanceof l) {
              if (n.has(a.toString())) continue;
              o.push(a), n.add(a.toString());
            } else o.push(a);
          }
        } catch (t) {
          s.e(t);
        } finally {
          s.f();
        }

        return o;
      },
      /*!
       * Determines if two buffers are equal.
       *
       * @param {Buffer} a
       * @param {Object} b
       */
      e.buffer = {}, e.buffer.areEqual = function (e, r) {
        if (!t.isBuffer(e)) return !1;
        if (!t.isBuffer(r)) return !1;
        if (e.length !== r.length) return !1;

        for (var n = 0, i = e.length; n < i; ++n) {
          if (e[n] !== r[n]) return !1;
        }

        return !0;
      }, e.getFunctionName = v,
      /*!
       * Decorate buffers
       */
      e.decorate = function (t, e) {
        for (var r in e) {
          M.has(r) || (t[r] = e[r]);
        }
      }, e.mergeClone = function (r, n) {
        g(n) && (n = n.toObject({
          transform: !1,
          virtuals: !1,
          depopulate: !0,
          getters: !1,
          flattenDecimals: !1
        }));

        for (var i, o = Object.keys(n), s = o.length, a = 0; a < s;) {
          if (i = o[a++], !M.has(i)) if (void 0 === r[i]) r[i] = e.clone(n[i], {
            transform: !1,
            virtuals: !1,
            depopulate: !0,
            getters: !1,
            flattenDecimals: !1
          });else {
            var u = n[i];

            if (null == u || !u.valueOf || u instanceof Date || (u = u.valueOf()), e.isObject(u)) {
              var h = u;
              g(u) && !u.isMongooseBuffer && (h = h.toObject({
                transform: !1,
                virtuals: !1,
                depopulate: !0,
                getters: !1,
                flattenDecimals: !1
              })), u.isMongooseBuffer && (h = t.from(h)), e.mergeClone(r[i], h);
            } else r[i] = e.clone(u, {
              flattenDecimals: !1
            });
          }
        }
      }, e.each = function (t, e) {
        var r,
            n = i(t);

        try {
          for (n.s(); !(r = n.n()).done;) {
            e(r.value);
          }
        } catch (t) {
          n.e(t);
        } finally {
          n.f();
        }
      },
      /*!
       * ignore
       */
      e.getOption = function (t) {
        var e,
            r = Array.prototype.slice.call(arguments, 1),
            n = i(r);

        try {
          for (n.s(); !(e = n.n()).done;) {
            var o = e.value;
            if (null != o[t]) return o[t];
          }
        } catch (t) {
          n.e(t);
        } finally {
          n.f();
        }

        return null;
      },
      /*!
       * ignore
       */
      e.noop = function () {}, e.errorToPOJO = function (t) {
        if (!(t instanceof Error)) throw new Error("`error` must be `instanceof Error`.");
        var e,
            r = {},
            n = i(Object.getOwnPropertyNames(t));

        try {
          for (n.s(); !(e = n.n()).done;) {
            var o = e.value;
            r[o] = t[o];
          }
        } catch (t) {
          n.e(t);
        } finally {
          n.f();
        }

        return r;
      },
      /*!
       * ignore
       */
      e.warn = function (t) {
        return n.emitWarning(t, {
          code: "MONGOOSE"
        });
      };
    }).call(this, r(3).Buffer, r(5));
  }, function (t, e) {
    var r,
        n,
        i = t.exports = {};

    function o() {
      throw new Error("setTimeout has not been defined");
    }

    function s() {
      throw new Error("clearTimeout has not been defined");
    }

    function a(t) {
      if (r === setTimeout) return setTimeout(t, 0);
      if ((r === o || !r) && setTimeout) return r = setTimeout, setTimeout(t, 0);

      try {
        return r(t, 0);
      } catch (e) {
        try {
          return r.call(null, t, 0);
        } catch (e) {
          return r.call(this, t, 0);
        }
      }
    }

    !function () {
      try {
        r = "function" == typeof setTimeout ? setTimeout : o;
      } catch (t) {
        r = o;
      }

      try {
        n = "function" == typeof clearTimeout ? clearTimeout : s;
      } catch (t) {
        n = s;
      }
    }();
    var u,
        h = [],
        f = !1,
        c = -1;

    function l() {
      f && u && (f = !1, u.length ? h = u.concat(h) : c = -1, h.length && d());
    }

    function d() {
      if (!f) {
        var t = a(l);
        f = !0;

        for (var e = h.length; e;) {
          for (u = h, h = []; ++c < e;) {
            u && u[c].run();
          }

          c = -1, e = h.length;
        }

        u = null, f = !1, function (t) {
          if (n === clearTimeout) return clearTimeout(t);
          if ((n === s || !n) && clearTimeout) return n = clearTimeout, clearTimeout(t);

          try {
            n(t);
          } catch (e) {
            try {
              return n.call(null, t);
            } catch (e) {
              return n.call(this, t);
            }
          }
        }(t);
      }
    }

    function p(t, e) {
      this.fun = t, this.array = e;
    }

    function y() {}

    i.nextTick = function (t) {
      var e = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) {
        e[r - 1] = arguments[r];
      }
      h.push(new p(t, e)), 1 !== h.length || f || a(d);
    }, p.prototype.run = function () {
      this.fun.apply(null, this.array);
    }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = y, i.addListener = y, i.once = y, i.off = y, i.removeListener = y, i.removeAllListeners = y, i.emit = y, i.prependListener = y, i.prependOnceListener = y, i.listeners = function (t) {
      return [];
    }, i.binding = function (t) {
      throw new Error("process.binding is not supported");
    }, i.cwd = function () {
      return "/";
    }, i.chdir = function (t) {
      throw new Error("process.chdir is not supported");
    }, i.umask = function () {
      return 0;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Simplified lodash.get to work around the annoying null quirk. See:
     * https://github.com/lodash/lodash/issues/3659
     */

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n2 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n2 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n2++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    function o(t, e) {
      return null == t ? t : t instanceof Map ? t.get(e) : t[e];
    }

    t.exports = function (t, e, r) {
      var i,
          s = !1;

      if ("string" == typeof e) {
        if (-1 === e.indexOf(".")) {
          var a = o(t, e);
          return null == a ? r : a;
        }

        i = e.split(".");
      } else if (s = !0, 1 === (i = e).length) {
        var u = o(t, i[0]);
        return null == u ? r : u;
      }

      var h,
          f = e,
          c = t,
          l = n(i);

      try {
        for (l.s(); !(h = l.n()).done;) {
          var d = h.value;
          if (null == c) return r;
          if (!s && null != c[f]) return c[f];
          c = o(c, d), s || (f = f.substr(d.length + 1));
        }
      } catch (t) {
        l.e(t);
      } finally {
        l.f();
      }

      return null == c ? r : c;
    };
  }, function (t, e) {
    function r(t) {
      return (r = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var n;

    n = function () {
      return this;
    }();

    try {
      n = n || new Function("return this")();
    } catch (t) {
      "object" === ("undefined" == typeof window ? "undefined" : r(window)) && (n = window);
    }

    t.exports = n;
  }, function (t, e, r) {
    "use strict";

    var n = r(20);
    /*!
     * Module exports.
     */

    t.exports = n, n.messages = r(307), n.Messages = n.messages, n.DocumentNotFoundError = r(308), n.CastError = r(21), n.ValidationError = r(161), n.ValidatorError = r(162), n.VersionError = r(309), n.ParallelSaveError = r(310), n.OverwriteModelError = r(311), n.MissingSchemaError = r(312), n.DivergentArrayError = r(313), n.StrictModeError = r(56);
  }, function (t, e, r) {
    (function (t) {
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var i = Object.getOwnPropertyDescriptors || function (t) {
        for (var e = Object.keys(t), r = {}, n = 0; n < e.length; n++) {
          r[e[n]] = Object.getOwnPropertyDescriptor(t, e[n]);
        }

        return r;
      },
          o = /%[sdj%]/g;

      e.format = function (t) {
        if (!v(t)) {
          for (var e = [], r = 0; r < arguments.length; r++) {
            e.push(u(arguments[r]));
          }

          return e.join(" ");
        }

        r = 1;

        for (var n = arguments, i = n.length, s = String(t).replace(o, function (t) {
          if ("%%" === t) return "%";
          if (r >= i) return t;

          switch (t) {
            case "%s":
              return String(n[r++]);

            case "%d":
              return Number(n[r++]);

            case "%j":
              try {
                return JSON.stringify(n[r++]);
              } catch (t) {
                return "[Circular]";
              }

            default:
              return t;
          }
        }), a = n[r]; r < i; a = n[++r]) {
          m(a) || !_(a) ? s += " " + a : s += " " + u(a);
        }

        return s;
      }, e.deprecate = function (r, n) {
        if (void 0 !== t && !0 === t.noDeprecation) return r;
        if (void 0 === t) return function () {
          return e.deprecate(r, n).apply(this, arguments);
        };
        var i = !1;
        return function () {
          if (!i) {
            if (t.throwDeprecation) throw new Error(n);
            t.traceDeprecation ? console.trace(n) : console.error(n), i = !0;
          }

          return r.apply(this, arguments);
        };
      };
      var s,
          a = {};

      function u(t, r) {
        var n = {
          seen: [],
          stylize: f
        };
        return arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), y(r) ? n.showHidden = r : r && e._extend(n, r), g(n.showHidden) && (n.showHidden = !1), g(n.depth) && (n.depth = 2), g(n.colors) && (n.colors = !1), g(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = h), c(n, t, n.depth);
      }

      function h(t, e) {
        var r = u.styles[e];
        return r ? "[" + u.colors[r][0] + "m" + t + "[" + u.colors[r][1] + "m" : t;
      }

      function f(t, e) {
        return t;
      }

      function c(t, r, n) {
        if (t.customInspect && r && O(r.inspect) && r.inspect !== e.inspect && (!r.constructor || r.constructor.prototype !== r)) {
          var i = r.inspect(n, t);
          return v(i) || (i = c(t, i, n)), i;
        }

        var o = function (t, e) {
          if (g(e)) return t.stylize("undefined", "undefined");

          if (v(e)) {
            var r = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
            return t.stylize(r, "string");
          }

          if (b(e)) return t.stylize("" + e, "number");
          if (y(e)) return t.stylize("" + e, "boolean");
          if (m(e)) return t.stylize("null", "null");
        }(t, r);

        if (o) return o;

        var s = Object.keys(r),
            a = function (t) {
          var e = {};
          return t.forEach(function (t, r) {
            e[t] = !0;
          }), e;
        }(s);

        if (t.showHidden && (s = Object.getOwnPropertyNames(r)), S(r) && (s.indexOf("message") >= 0 || s.indexOf("description") >= 0)) return l(r);

        if (0 === s.length) {
          if (O(r)) {
            var u = r.name ? ": " + r.name : "";
            return t.stylize("[Function" + u + "]", "special");
          }

          if (w(r)) return t.stylize(RegExp.prototype.toString.call(r), "regexp");
          if (M(r)) return t.stylize(Date.prototype.toString.call(r), "date");
          if (S(r)) return l(r);
        }

        var h,
            f = "",
            _ = !1,
            A = ["{", "}"];

        (p(r) && (_ = !0, A = ["[", "]"]), O(r)) && (f = " [Function" + (r.name ? ": " + r.name : "") + "]");
        return w(r) && (f = " " + RegExp.prototype.toString.call(r)), M(r) && (f = " " + Date.prototype.toUTCString.call(r)), S(r) && (f = " " + l(r)), 0 !== s.length || _ && 0 != r.length ? n < 0 ? w(r) ? t.stylize(RegExp.prototype.toString.call(r), "regexp") : t.stylize("[Object]", "special") : (t.seen.push(r), h = _ ? function (t, e, r, n, i) {
          for (var o = [], s = 0, a = e.length; s < a; ++s) {
            j(e, String(s)) ? o.push(d(t, e, r, n, String(s), !0)) : o.push("");
          }

          return i.forEach(function (i) {
            i.match(/^\d+$/) || o.push(d(t, e, r, n, i, !0));
          }), o;
        }(t, r, n, a, s) : s.map(function (e) {
          return d(t, r, n, a, e, _);
        }), t.seen.pop(), function (t, e, r) {
          if (t.reduce(function (t, e) {
            return e.indexOf("\n") >= 0 && 0, t + e.replace(/\u001b\[\d\d?m/g, "").length + 1;
          }, 0) > 60) return r[0] + ("" === e ? "" : e + "\n ") + " " + t.join(",\n  ") + " " + r[1];
          return r[0] + e + " " + t.join(", ") + " " + r[1];
        }(h, f, A)) : A[0] + f + A[1];
      }

      function l(t) {
        return "[" + Error.prototype.toString.call(t) + "]";
      }

      function d(t, e, r, n, i, o) {
        var s, a, u;

        if ((u = Object.getOwnPropertyDescriptor(e, i) || {
          value: e[i]
        }).get ? a = u.set ? t.stylize("[Getter/Setter]", "special") : t.stylize("[Getter]", "special") : u.set && (a = t.stylize("[Setter]", "special")), j(n, i) || (s = "[" + i + "]"), a || (t.seen.indexOf(u.value) < 0 ? (a = m(r) ? c(t, u.value, null) : c(t, u.value, r - 1)).indexOf("\n") > -1 && (a = o ? a.split("\n").map(function (t) {
          return "  " + t;
        }).join("\n").substr(2) : "\n" + a.split("\n").map(function (t) {
          return "   " + t;
        }).join("\n")) : a = t.stylize("[Circular]", "special")), g(s)) {
          if (o && i.match(/^\d+$/)) return a;
          (s = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (s = s.substr(1, s.length - 2), s = t.stylize(s, "name")) : (s = s.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), s = t.stylize(s, "string"));
        }

        return s + ": " + a;
      }

      function p(t) {
        return Array.isArray(t);
      }

      function y(t) {
        return "boolean" == typeof t;
      }

      function m(t) {
        return null === t;
      }

      function b(t) {
        return "number" == typeof t;
      }

      function v(t) {
        return "string" == typeof t;
      }

      function g(t) {
        return void 0 === t;
      }

      function w(t) {
        return _(t) && "[object RegExp]" === A(t);
      }

      function _(t) {
        return "object" === n(t) && null !== t;
      }

      function M(t) {
        return _(t) && "[object Date]" === A(t);
      }

      function S(t) {
        return _(t) && ("[object Error]" === A(t) || t instanceof Error);
      }

      function O(t) {
        return "function" == typeof t;
      }

      function A(t) {
        return Object.prototype.toString.call(t);
      }

      function E(t) {
        return t < 10 ? "0" + t.toString(10) : t.toString(10);
      }

      e.debuglog = function (r) {
        if (g(s) && (s = t.env.NODE_DEBUG || ""), r = r.toUpperCase(), !a[r]) if (new RegExp("\\b" + r + "\\b", "i").test(s)) {
          var n = t.pid;

          a[r] = function () {
            var t = e.format.apply(e, arguments);
            console.error("%s %d: %s", r, n, t);
          };
        } else a[r] = function () {};
        return a[r];
      }, e.inspect = u, u.colors = {
        bold: [1, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        white: [37, 39],
        grey: [90, 39],
        black: [30, 39],
        blue: [34, 39],
        cyan: [36, 39],
        green: [32, 39],
        magenta: [35, 39],
        red: [31, 39],
        yellow: [33, 39]
      }, u.styles = {
        special: "cyan",
        number: "yellow",
        boolean: "yellow",
        undefined: "grey",
        null: "bold",
        string: "green",
        date: "magenta",
        regexp: "red"
      }, e.isArray = p, e.isBoolean = y, e.isNull = m, e.isNullOrUndefined = function (t) {
        return null == t;
      }, e.isNumber = b, e.isString = v, e.isSymbol = function (t) {
        return "symbol" === n(t);
      }, e.isUndefined = g, e.isRegExp = w, e.isObject = _, e.isDate = M, e.isError = S, e.isFunction = O, e.isPrimitive = function (t) {
        return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" === n(t) || void 0 === t;
      }, e.isBuffer = r(299);
      var x = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

      function k() {
        var t = new Date(),
            e = [E(t.getHours()), E(t.getMinutes()), E(t.getSeconds())].join(":");
        return [t.getDate(), x[t.getMonth()], e].join(" ");
      }

      function j(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }

      e.log = function () {
        console.log("%s - %s", k(), e.format.apply(e, arguments));
      }, e.inherits = r(300), e._extend = function (t, e) {
        if (!e || !_(e)) return t;

        for (var r = Object.keys(e), n = r.length; n--;) {
          t[r[n]] = e[r[n]];
        }

        return t;
      };
      var $ = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;

      function P(t, e) {
        if (!t) {
          var r = new Error("Promise was rejected with a falsy value");
          r.reason = t, t = r;
        }

        return e(t);
      }

      e.promisify = function (t) {
        if ("function" != typeof t) throw new TypeError('The "original" argument must be of type Function');

        if ($ && t[$]) {
          var e;
          if ("function" != typeof (e = t[$])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
          return Object.defineProperty(e, $, {
            value: e,
            enumerable: !1,
            writable: !1,
            configurable: !0
          }), e;
        }

        function e() {
          for (var e, r, n = new Promise(function (t, n) {
            e = t, r = n;
          }), i = [], o = 0; o < arguments.length; o++) {
            i.push(arguments[o]);
          }

          i.push(function (t, n) {
            t ? r(t) : e(n);
          });

          try {
            t.apply(this, i);
          } catch (t) {
            r(t);
          }

          return n;
        }

        return Object.setPrototypeOf(e, Object.getPrototypeOf(t)), $ && Object.defineProperty(e, $, {
          value: e,
          enumerable: !1,
          writable: !1,
          configurable: !0
        }), Object.defineProperties(e, i(t));
      }, e.promisify.custom = $, e.callbackify = function (e) {
        if ("function" != typeof e) throw new TypeError('The "original" argument must be of type Function');

        function r() {
          for (var r = [], n = 0; n < arguments.length; n++) {
            r.push(arguments[n]);
          }

          var i = r.pop();
          if ("function" != typeof i) throw new TypeError("The last argument must be of type Function");

          var o = this,
              s = function s() {
            return i.apply(o, arguments);
          };

          e.apply(this, r).then(function (e) {
            t.nextTick(s, null, e);
          }, function (e) {
            t.nextTick(P, e, s);
          });
        }

        return Object.setPrototypeOf(r, Object.getPrototypeOf(e)), Object.defineProperties(r, i(e)), r;
      };
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";

    (function (n) {
      /*!
       * Module dependencies.
       */
      function i(t) {
        return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var o = r(8),
          s = r(15),
          a = r(87),
          u = r(163),
          h = r(6),
          f = r(314),
          c = r(315),
          l = r(45),
          d = r(1).schemaTypeSymbol,
          p = r(4),
          y = r(1).validatorErrorSymbol,
          m = r(1).documentIsModified,
          b = r(1).populateModelSymbol,
          v = o.CastError,
          g = o.ValidatorError;

      function w(t, e, r) {
        this[d] = !0, this.path = t, this.instance = r, this.validators = [], this.getters = this.constructor.hasOwnProperty("getters") ? this.constructor.getters.slice() : [], this.setters = [], this.splitPath(), e = e || {};

        for (var n = this.constructor.defaultOptions || {}, o = 0, a = Object.keys(n); o < a.length; o++) {
          var u = a[o];
          n.hasOwnProperty(u) && !e.hasOwnProperty(u) && (e[u] = n[u]);
        }

        null == e.select && delete e.select;
        var h = this.OptionsConstructor || s;
        this.options = new h(e), this._index = null, p.hasUserDefinedProperty(this.options, "immutable") && (this.$immutable = this.options.immutable, f(this));

        for (var c = 0, l = Object.keys(this.options); c < l.length; c++) {
          var y = l[c];

          if ("cast" !== y) {
            if (p.hasUserDefinedProperty(this.options, y) && "function" == typeof this[y]) {
              if ("index" === y && this._index) {
                if (!1 === e.index) {
                  var m = this._index;

                  if ("object" === i(m) && null != m) {
                    if (m.unique) throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                    if (m.sparse) throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                  }

                  this._index = !1;
                }

                continue;
              }

              var b = e[y];

              if ("default" === y) {
                this.default(b);
                continue;
              }

              var v = Array.isArray(b) ? b : [b];
              this[y].apply(this, v);
            }
          } else this.castFunction(this.options[y]);
        }

        Object.defineProperty(this, "$$context", {
          enumerable: !1,
          configurable: !1,
          writable: !0,
          value: null
        });
      }
      /*!
       * The class that Mongoose uses internally to instantiate this SchemaType's `options` property.
       */

      /*!
       * ignore
       */


      function _(t) {
        return this.castForQuery(t);
      }
      /*!
       * ignore
       */

      /*!
       * Just like handleArray, except also allows `[]` because surprisingly
       * `$in: [1, []]` works fine
       */


      function M(t) {
        var e = this;
        return Array.isArray(t) ? t.map(function (t) {
          return Array.isArray(t) && 0 === t.length ? t : e.castForQuery(t);
        }) : [this.castForQuery(t)];
      }
      /*!
       * ignore
       */


      w.prototype.OptionsConstructor = s,
      /*!
       * ignore
       */
      w.prototype.splitPath = function () {
        return null != this._presplitPath ? this._presplitPath : null != this.path ? (this._presplitPath = -1 === this.path.indexOf(".") ? [this.path] : this.path.split("."), this._presplitPath) : void 0;
      }, w.cast = function (t) {
        return 0 === arguments.length || (!1 === t && (t = function t(_t2) {
          return _t2;
        }), this._cast = t), this._cast;
      }, w.prototype.castFunction = function (t) {
        return 0 === arguments.length || (!1 === t && (t = this.constructor._defaultCaster || function (t) {
          return t;
        }), this._castFunction = t), this._castFunction;
      }, w.prototype.cast = function () {
        throw new Error("Base SchemaType class does not implement a `cast()` function");
      }, w.set = function (t, e) {
        this.hasOwnProperty("defaultOptions") || (this.defaultOptions = Object.assign({}, this.defaultOptions)), this.defaultOptions[t] = e;
      }, w.get = function (t) {
        this.getters = this.hasOwnProperty("getters") ? this.getters : [], this.getters.push(t);
      }, w.prototype.default = function (t) {
        if (1 === arguments.length) {
          if (void 0 === t) return void (this.defaultValue = void 0);
          if (null != t && t.instanceOfSchema) throw new o("Cannot set default value of path `" + this.path + "` to a mongoose Schema instance.");
          return this.defaultValue = t, this.defaultValue;
        }

        return arguments.length > 1 && (this.defaultValue = p.args(arguments)), this.defaultValue;
      }, w.prototype.index = function (t) {
        return this._index = t, p.expires(this._index), this;
      }, w.prototype.unique = function (t) {
        if (!1 === this._index) {
          if (!t) return;
          throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
        }

        return this.options.hasOwnProperty("index") || !1 !== t ? (null == this._index || !0 === this._index ? this._index = {} : "string" == typeof this._index && (this._index = {
          type: this._index
        }), this._index.unique = t, this) : this;
      }, w.prototype.text = function (t) {
        if (!1 === this._index) {
          if (!t) return;
          throw new Error('Path "' + this.path + '" may not have `index` set to false and `text` set to true');
        }

        return this.options.hasOwnProperty("index") || !1 !== t ? (null === this._index || void 0 === this._index || "boolean" == typeof this._index ? this._index = {} : "string" == typeof this._index && (this._index = {
          type: this._index
        }), this._index.text = t, this) : this;
      }, w.prototype.sparse = function (t) {
        if (!1 === this._index) {
          if (!t) return;
          throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
        }

        return this.options.hasOwnProperty("index") || !1 !== t ? (null == this._index || "boolean" == typeof this._index ? this._index = {} : "string" == typeof this._index && (this._index = {
          type: this._index
        }), this._index.sparse = t, this) : this;
      }, w.prototype.immutable = function (t) {
        return this.$immutable = t, f(this), this;
      }, w.prototype.transform = function (t) {
        return this.options.transform = t, this;
      }, w.prototype.set = function (t) {
        if ("function" != typeof t) throw new TypeError("A setter must be a function.");
        return this.setters.push(t), this;
      }, w.prototype.get = function (t) {
        if ("function" != typeof t) throw new TypeError("A getter must be a function.");
        return this.getters.push(t), this;
      }, w.prototype.validate = function (t, e, r) {
        var n, s, a, u;
        if ("function" == typeof t || t && "RegExp" === p.getFunctionName(t.constructor)) return "function" == typeof e ? (n = {
          validator: t,
          message: e
        }).type = r || "user defined" : e instanceof Object && !r ? ((n = p.clone(e)).message || (n.message = n.msg), n.validator = t, n.type = n.type || "user defined") : (null == e && (e = o.messages.general.default), r || (r = "user defined"), n = {
          message: e,
          type: r,
          validator: t
        }), this.validators.push(n), this;

        for (s = 0, a = arguments.length; s < a; s++) {
          if (u = arguments[s], !p.isPOJO(u)) {
            var h = "Invalid validator. Received (" + i(u) + ") " + u + ". See http://mongoosejs.com/docs/api.html#schematype_SchemaType-validate";
            throw new Error(h);
          }

          this.validate(u.validator, u);
        }

        return this;
      }, w.prototype.required = function (t, e) {
        var r = {};
        if (arguments.length > 0 && null == t) return this.validators = this.validators.filter(function (t) {
          return t.validator !== this.requiredValidator;
        }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
        if ("object" === i(t) && (e = (r = t).message || e, t = t.isRequired), !1 === t) return this.validators = this.validators.filter(function (t) {
          return t.validator !== this.requiredValidator;
        }, this), this.isRequired = !1, delete this.originalRequiredValue, this;
        var n = this;
        this.isRequired = !0, this.requiredValidator = function (e) {
          var r = h(this, "$__.cachedRequired");
          if (null != r && !this.$__isSelected(n.path) && !this[m](n.path)) return !0;

          if (null != r && n.path in r) {
            var i = !r[n.path] || n.checkRequired(e, this);
            return delete r[n.path], i;
          }

          return "function" == typeof t && !t.apply(this) || n.checkRequired(e, this);
        }, this.originalRequiredValue = t, "string" == typeof t && (e = t, t = void 0);
        var s = e || o.messages.general.required;
        return this.validators.unshift(Object.assign({}, r, {
          validator: this.requiredValidator,
          message: s,
          type: "required"
        })), this;
      }, w.prototype.ref = function (t) {
        return this.options.ref = t, this;
      }, w.prototype.getDefault = function (t, e) {
        var r;

        if (null != (r = "function" == typeof this.defaultValue ? this.defaultValue === Date.now || this.defaultValue === Array || "objectid" === this.defaultValue.name.toLowerCase() ? this.defaultValue.call(t) : this.defaultValue.call(t, t) : this.defaultValue)) {
          "object" !== i(r) || this.options && this.options.shared || (r = p.clone(r));
          var n = this.applySetters(r, t, e);
          return n && n.$isSingleNested && (n.$__parent = t), n;
        }

        return r;
      },
      /*!
       * Applies setters without casting
       *
       * @api private
       */
      w.prototype._applySetters = function (t, e, r, n) {
        var i = t;
        if (r) return i;

        for (var o = this.setters, s = o.length - 1; s >= 0; s--) {
          i = o[s].call(e, i, n, this);
        }

        return i;
      },
      /*!
       * ignore
       */
      w.prototype._castNullish = function (t) {
        return t;
      }, w.prototype.applySetters = function (t, e, r, n, i) {
        var o = this._applySetters(t, e, r, n, i);

        return null == o ? this._castNullish(o) : o = this.cast(o, e, r, n, i);
      }, w.prototype.applyGetters = function (t, e) {
        var r = t,
            n = this.getters,
            i = n.length;
        if (0 === i) return r;

        for (var o = 0; o < i; ++o) {
          r = n[o].call(e, r, this);
        }

        return r;
      }, w.prototype.select = function (t) {
        return this.selected = !!t, this;
      }, w.prototype.doValidate = function (t, e, r, n) {
        var o = !1,
            s = this.path,
            a = this.validators.filter(function (t) {
          return null != t && "object" === i(t);
        }),
            u = a.length;
        if (!u) return e(null);
        var h = this;

        function f(t, r) {
          if (!o) if (void 0 === t || t) --u <= 0 && l(function () {
            e(null);
          });else {
            var n = r.ErrorConstructor || g;
            (o = new n(r))[y] = !0, l(function () {
              e(o);
            });
          }
        }

        a.forEach(function (e) {
          if (!o) {
            var i,
                a = e.validator,
                u = p.clone(e);
            if (u.path = n && n.path ? n.path : s, u.value = t, a instanceof RegExp) f(a.test(t), u);else if ("function" == typeof a) if (void 0 !== t || a === h.requiredValidator) {
              try {
                i = u.propsParameter ? a.call(r, t, u) : a.call(r, t);
              } catch (t) {
                i = !1, u.reason = t, t.message && (u.message = t.message);
              }

              null != i && "function" == typeof i.then ? i.then(function (t) {
                f(t, u);
              }, function (t) {
                u.reason = t, u.message = t.message, f(i = !1, u);
              }) : f(i, u);
            } else f(!0, u);
          }
        });
      }, w.prototype.doValidateSync = function (t, e, r) {
        var n = this.path;
        if (!this.validators.length) return null;
        var o = this.validators;

        if (void 0 === t) {
          if (!(this.validators.length > 0 && "required" === this.validators[0].type)) return null;
          o = [this.validators[0]];
        }

        var s = null;
        return o.forEach(function (o) {
          if (!s && null != o && "object" === i(o)) {
            var u,
                h = o.validator,
                f = p.clone(o);
            if (f.path = r && r.path ? r.path : n, f.value = t, !c(h)) if (h instanceof RegExp) a(h.test(t), f);else if ("function" == typeof h) {
              try {
                u = f.propsParameter ? h.call(e, t, f) : h.call(e, t);
              } catch (t) {
                u = !1, f.reason = t;
              }

              null != u && "function" == typeof u.then || a(u, f);
            }
          }
        }), s;

        function a(t, e) {
          if (!s && void 0 !== t && !t) {
            var r = e.ErrorConstructor || g;
            (s = new r(e))[y] = !0;
          }
        }
      }, w._isRef = function (t, e, r, i) {
        var o = i && t.options && (t.options.ref || t.options.refPath);

        if (!o && r && null != r.$__) {
          var s = r.$__fullPath(t.path, !0),
              a = r.ownerDocument();
          o = null != s && a.$populated(s) || r.$populated(t.path);
        }

        return !!o && (null == e || !(n.isBuffer(e) || "Binary" === e._bsontype || !p.isObject(e)) || i);
      },
      /*!
       * ignore
       */
      w.prototype._castRef = function (t, e, r) {
        if (null == t) return t;
        if (null != t.$__) return t.$__.wasPopulated = !0, t;

        if (n.isBuffer(t) || !p.isObject(t)) {
          if (r) return t;
          throw new v(this.instance, t, this.path, null, this);
        }

        var i = e.$__fullPath(this.path, !0),
            o = e.ownerDocument().$populated(i, !0),
            s = t;
        return e.$__.populated && e.$__.populated[i] && e.$__.populated[i].options && e.$__.populated[i].options.options && e.$__.populated[i].options.options.lean || ((s = new o.options[b](t)).$__.wasPopulated = !0), s;
      }, w.prototype.$conditionalHandlers = {
        $all: function $all(t) {
          var e = this;
          return Array.isArray(t) ? t.map(function (t) {
            return e.castForQuery(t);
          }) : [this.castForQuery(t)];
        },
        $eq: _,
        $in: M,
        $ne: _,
        $nin: M,
        $exists: a,
        $type: u
      },
      /*!
       * Wraps `castForQuery` to handle context
       */
      w.prototype.castForQueryWrapper = function (t) {
        if (this.$$context = t.context, "$conditional" in t) {
          var e = this.castForQuery(t.$conditional, t.val);
          return this.$$context = null, e;
        }

        if (t.$skipQueryCastForUpdate || t.$applySetters) {
          var r = this._castForQuery(t.val);

          return this.$$context = null, r;
        }

        var n = this.castForQuery(t.val);
        return this.$$context = null, n;
      }, w.prototype.castForQuery = function (t, e) {
        var r;

        if (2 === arguments.length) {
          if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t);
          return r.call(this, e);
        }

        return e = t, this._castForQuery(e);
      },
      /*!
       * Internal switch for runSetters
       *
       * @api private
       */
      w.prototype._castForQuery = function (t) {
        return this.applySetters(t, this.$$context);
      }, w.checkRequired = function (t) {
        return arguments.length > 0 && (this._checkRequired = t), this._checkRequired;
      }, w.prototype.checkRequired = function (t) {
        return null != t;
      },
      /*!
       * ignore
       */
      w.prototype.clone = function () {
        var t = Object.assign({}, this.options),
            e = new this.constructor(this.path, t, this.instance);
        return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), void 0 !== this.defaultValue && (e.defaultValue = this.defaultValue), void 0 !== this.$immutable && void 0 === this.options.immutable && (e.$immutable = this.$immutable, f(e)), void 0 !== this._index && (e._index = this._index), void 0 !== this.selected && (e.selected = this.selected), void 0 !== this.isRequired && (e.isRequired = this.isRequired), void 0 !== this.originalRequiredValue && (e.originalRequiredValue = this.originalRequiredValue), e.getters = this.getters.slice(), e.setters = this.setters.slice(), e;
      },
      /*!
       * Module exports.
       */
      t.exports = e = w, e.CastError = v, e.ValidatorError = g;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i,
        o = "object" === ("undefined" == typeof Reflect ? "undefined" : n(Reflect)) ? Reflect : null,
        s = o && "function" == typeof o.apply ? o.apply : function (t, e, r) {
      return Function.prototype.apply.call(t, e, r);
    };
    i = o && "function" == typeof o.ownKeys ? o.ownKeys : Object.getOwnPropertySymbols ? function (t) {
      return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
    } : function (t) {
      return Object.getOwnPropertyNames(t);
    };

    var a = Number.isNaN || function (t) {
      return t != t;
    };

    function u() {
      u.init.call(this);
    }

    t.exports = u, t.exports.once = function (t, e) {
      return new Promise(function (r, n) {
        function i(r) {
          t.removeListener(e, o), n(r);
        }

        function o() {
          "function" == typeof t.removeListener && t.removeListener("error", i), r([].slice.call(arguments));
        }

        v(t, e, o, {
          once: !0
        }), "error" !== e && function (t, e, r) {
          "function" == typeof t.on && v(t, "error", e, r);
        }(t, i, {
          once: !0
        });
      });
    }, u.EventEmitter = u, u.prototype._events = void 0, u.prototype._eventsCount = 0, u.prototype._maxListeners = void 0;
    var h = 10;

    function f(t) {
      if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + n(t));
    }

    function c(t) {
      return void 0 === t._maxListeners ? u.defaultMaxListeners : t._maxListeners;
    }

    function l(t, e, r, n) {
      var i, o, s, a;
      if (f(r), void 0 === (o = t._events) ? (o = t._events = Object.create(null), t._eventsCount = 0) : (void 0 !== o.newListener && (t.emit("newListener", e, r.listener ? r.listener : r), o = t._events), s = o[e]), void 0 === s) s = o[e] = r, ++t._eventsCount;else if ("function" == typeof s ? s = o[e] = n ? [r, s] : [s, r] : n ? s.unshift(r) : s.push(r), (i = c(t)) > 0 && s.length > i && !s.warned) {
        s.warned = !0;
        var u = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        u.name = "MaxListenersExceededWarning", u.emitter = t, u.type = e, u.count = s.length, a = u, console && console.warn && console.warn(a);
      }
      return t;
    }

    function d() {
      if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }

    function p(t, e, r) {
      var n = {
        fired: !1,
        wrapFn: void 0,
        target: t,
        type: e,
        listener: r
      },
          i = d.bind(n);
      return i.listener = r, n.wrapFn = i, i;
    }

    function y(t, e, r) {
      var n = t._events;
      if (void 0 === n) return [];
      var i = n[e];
      return void 0 === i ? [] : "function" == typeof i ? r ? [i.listener || i] : [i] : r ? function (t) {
        for (var e = new Array(t.length), r = 0; r < e.length; ++r) {
          e[r] = t[r].listener || t[r];
        }

        return e;
      }(i) : b(i, i.length);
    }

    function m(t) {
      var e = this._events;

      if (void 0 !== e) {
        var r = e[t];
        if ("function" == typeof r) return 1;
        if (void 0 !== r) return r.length;
      }

      return 0;
    }

    function b(t, e) {
      for (var r = new Array(e), n = 0; n < e; ++n) {
        r[n] = t[n];
      }

      return r;
    }

    function v(t, e, r, i) {
      if ("function" == typeof t.on) i.once ? t.once(e, r) : t.on(e, r);else {
        if ("function" != typeof t.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + n(t));
        t.addEventListener(e, function n(o) {
          i.once && t.removeEventListener(e, n), r(o);
        });
      }
    }

    Object.defineProperty(u, "defaultMaxListeners", {
      enumerable: !0,
      get: function get() {
        return h;
      },
      set: function set(t) {
        if ("number" != typeof t || t < 0 || a(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
        h = t;
      }
    }), u.init = function () {
      void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
    }, u.prototype.setMaxListeners = function (t) {
      if ("number" != typeof t || t < 0 || a(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
      return this._maxListeners = t, this;
    }, u.prototype.getMaxListeners = function () {
      return c(this);
    }, u.prototype.emit = function (t) {
      for (var e = [], r = 1; r < arguments.length; r++) {
        e.push(arguments[r]);
      }

      var n = "error" === t,
          i = this._events;
      if (void 0 !== i) n = n && void 0 === i.error;else if (!n) return !1;

      if (n) {
        var o;
        if (e.length > 0 && (o = e[0]), o instanceof Error) throw o;
        var a = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
        throw a.context = o, a;
      }

      var u = i[t];
      if (void 0 === u) return !1;
      if ("function" == typeof u) s(u, this, e);else {
        var h = u.length,
            f = b(u, h);

        for (r = 0; r < h; ++r) {
          s(f[r], this, e);
        }
      }
      return !0;
    }, u.prototype.addListener = function (t, e) {
      return l(this, t, e, !1);
    }, u.prototype.on = u.prototype.addListener, u.prototype.prependListener = function (t, e) {
      return l(this, t, e, !0);
    }, u.prototype.once = function (t, e) {
      return f(e), this.on(t, p(this, t, e)), this;
    }, u.prototype.prependOnceListener = function (t, e) {
      return f(e), this.prependListener(t, p(this, t, e)), this;
    }, u.prototype.removeListener = function (t, e) {
      var r, n, i, o, s;
      if (f(e), void 0 === (n = this._events)) return this;
      if (void 0 === (r = n[t])) return this;
      if (r === e || r.listener === e) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[t], n.removeListener && this.emit("removeListener", t, r.listener || e));else if ("function" != typeof r) {
        for (i = -1, o = r.length - 1; o >= 0; o--) {
          if (r[o] === e || r[o].listener === e) {
            s = r[o].listener, i = o;
            break;
          }
        }

        if (i < 0) return this;
        0 === i ? r.shift() : function (t, e) {
          for (; e + 1 < t.length; e++) {
            t[e] = t[e + 1];
          }

          t.pop();
        }(r, i), 1 === r.length && (n[t] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", t, s || e);
      }
      return this;
    }, u.prototype.off = u.prototype.removeListener, u.prototype.removeAllListeners = function (t) {
      var e, r, n;
      if (void 0 === (r = this._events)) return this;
      if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[t] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[t]), this;

      if (0 === arguments.length) {
        var i,
            o = Object.keys(r);

        for (n = 0; n < o.length; ++n) {
          "removeListener" !== (i = o[n]) && this.removeAllListeners(i);
        }

        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
      }

      if ("function" == typeof (e = r[t])) this.removeListener(t, e);else if (void 0 !== e) for (n = e.length - 1; n >= 0; n--) {
        this.removeListener(t, e[n]);
      }
      return this;
    }, u.prototype.listeners = function (t) {
      return y(this, t, !0);
    }, u.prototype.rawListeners = function (t) {
      return y(this, t, !1);
    }, u.listenerCount = function (t, e) {
      return "function" == typeof t.listenerCount ? t.listenerCount(e) : m.call(t, e);
    }, u.prototype.listenerCount = m, u.prototype.eventNames = function () {
      return this._eventsCount > 0 ? i(this._events) : [];
    };
  }, function (t, e) {
    function r(t, e) {
      if (!t) throw new Error(e || "Assertion failed");
    }

    t.exports = r, r.equal = function (t, e, r) {
      if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e);
    };
  }, function (t, e, r) {
    "use strict";

    var n = e,
        i = r(19),
        o = r(12),
        s = r(136);
    n.assert = o, n.toArray = s.toArray, n.zero2 = s.zero2, n.toHex = s.toHex, n.encode = s.encode, n.getNAF = function (t, e, r) {
      var n = new Array(Math.max(t.bitLength(), r) + 1);
      n.fill(0);

      for (var i = 1 << e + 1, o = t.clone(), s = 0; s < n.length; s++) {
        var a,
            u = o.andln(i - 1);
        o.isOdd() ? (a = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(a)) : a = 0, n[s] = a, o.iushrn(1);
      }

      return n;
    }, n.getJSF = function (t, e) {
      var r = [[], []];
      t = t.clone(), e = e.clone();

      for (var n, i = 0, o = 0; t.cmpn(-i) > 0 || e.cmpn(-o) > 0;) {
        var s,
            a,
            u = t.andln(3) + i & 3,
            h = e.andln(3) + o & 3;
        3 === u && (u = -1), 3 === h && (h = -1), s = 0 == (1 & u) ? 0 : 3 !== (n = t.andln(7) + i & 7) && 5 !== n || 2 !== h ? u : -u, r[0].push(s), a = 0 == (1 & h) ? 0 : 3 !== (n = e.andln(7) + o & 7) && 5 !== n || 2 !== u ? h : -h, r[1].push(a), 2 * i === s + 1 && (i = 1 - i), 2 * o === a + 1 && (o = 1 - o), t.iushrn(1), e.iushrn(1);
      }

      return r;
    }, n.cachedProperty = function (t, e, r) {
      var n = "_" + e;

      t.prototype[e] = function () {
        return void 0 !== this[n] ? this[n] : this[n] = r.call(this);
      };
    }, n.parseBytes = function (t) {
      return "string" == typeof t ? n.toArray(t, "hex") : t;
    }, n.intFromLE = function (t) {
      return new i(t, "hex", "le");
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t, e, r) {
      return e in t ? Object.defineProperty(t, e, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = r, t;
    }

    function i(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return o(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n3 = 0,
              i = function i() {};

          return {
            s: i,
            n: function n() {
              return _n3 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n3++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: i
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function o(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    function s(t) {
      return (s = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var a,
        u,
        h,
        f = r(11).EventEmitter,
        c = r(293),
        l = r(8),
        d = r(46),
        p = r(164),
        y = r(316),
        m = r(317),
        b = r(89),
        v = r(56),
        g = r(161),
        w = r(162),
        _ = r(90),
        M = r(54),
        S = r(176),
        O = r(95).compile,
        A = r(95).defineKey,
        E = r(354).flatten,
        x = r(355),
        k = r(6),
        j = r(357),
        $ = r(358),
        P = r(180),
        R = r(45),
        B = r(96),
        T = r(359),
        I = r(9).inspect,
        N = r(38).internalToObjectOptions,
        D = r(360),
        C = r(85),
        L = r(361),
        q = r(4),
        U = r(363),
        F = q.clone,
        z = q.deepEqual,
        V = q.isMongooseObject,
        K = r(1).arrayAtomicsBackupSymbol,
        H = r(1).arrayAtomicsSymbol,
        W = r(1).documentArrayParent,
        Z = r(1).documentIsModified,
        J = r(1).documentModifiedPaths,
        Y = r(1).documentSchemaSymbol,
        G = r(1).getSymbol,
        Q = r(1).populateModelSymbol,
        X = r(1).scopeSymbol,
        tt = r(57).schemaMixedSymbol,
        et = r(364),
        rt = q.specialProperties;

    function nt(t, e, r, n) {
      var o = this;

      if ("object" === s(r) && null != r && (r = (n = r).skipId), n = Object.assign({}, n), null == this.$__schema) {
        var a = q.isObject(e) && !e.instanceOfSchema ? new b(e) : e;
        this.$__setSchema(a), e = r, r = n, n = arguments[4] || {};
      }

      if (this.$__ = new c(), this.$__.emitter = new f(), this.$isNew = !("isNew" in n) || n.isNew, "priorDoc" in n && (this.$__.priorDoc = n.priorDoc), null != t && "object" !== s(t)) throw new y(t, "obj", "Document");
      var u = !0;
      void 0 !== n.defaults && (this.$__.defaults = n.defaults, u = n.defaults);
      var h = this.$__schema;
      "boolean" == typeof e || "throw" === e ? (this.$__.strictMode = e, e = void 0) : (this.$__.strictMode = h.options.strict, void 0 !== e && (this.$__.selected = e));
      var l,
          d = h.requiredPaths(!0),
          p = i(d);

      try {
        for (p.s(); !(l = p.n()).done;) {
          var m = l.value;

          this.$__.activePaths.require(m);
        }
      } catch (t) {
        p.e(t);
      } finally {
        p.f();
      }

      this.$__.emitter.setMaxListeners(0);
      var v = null;
      q.isPOJO(e) && (v = T(e));
      var g = !1 === v && e ? ot(e) : {};

      if (null == this._doc && (this.$__buildDoc(t, e, r, v, g, !1), u && st(this, e, r, v, g, !0, {
        isNew: this.$isNew
      })), t && (this.$__original_set ? this.$__original_set(t, void 0, !0) : this.$set(t, void 0, !0), t instanceof nt && (this.$isNew = t.$isNew)), n.willInit && u ? f.prototype.once.call(this, "init", function () {
        st(o, e, r, v, g, !1, n.skipDefaults, o.$isNew);
      }) : u && st(this, e, r, v, g, !1, n.skipDefaults, this.$isNew), this.$__._id = this._id, !this.$__.strictMode && t) {
        var w = this,
            _ = Object.keys(this._doc);

        _.forEach(function (t) {
          t in h.tree || t in h.methods || t in h.virtuals || t.startsWith("$") || A({
            prop: t,
            subprops: null,
            prototype: w
          });
        });
      }

      lt(this);
    }

    for (var it in Object.defineProperty(nt.prototype, "isNew", {
      get: function get() {
        return this.$isNew;
      },
      set: function set(t) {
        this.$isNew = t;
      }
    }), Object.defineProperty(nt.prototype, "errors", {
      get: function get() {
        return this.$errors;
      },
      set: function set(t) {
        this.$errors = t;
      }
    }),
    /*!
     * Document exposes the NodeJS event emitter API, so you can use
     * `on`, `once`, etc.
     */
    q.each(["on", "once", "emit", "listeners", "removeListener", "setMaxListeners", "removeAllListeners", "addListener"], function (t) {
      nt.prototype[t] = function () {
        return this.$__.emitter[t].apply(this.$__.emitter, arguments);
      }, nt.prototype["$".concat(t)] = nt.prototype[t];
    }), nt.prototype.constructor = nt, f.prototype) {
      nt[it] = f.prototype[it];
    }
    /*!
     * ignore
     */


    function ot(t) {
      for (var e = {}, r = 0, n = Object.keys(t); r < n.length; r++) {
        var o,
            s = [],
            a = i(n[r].split("."));

        try {
          for (a.s(); !(o = a.n()).done;) {
            var u = o.value;
            s.push(u), e[s.join(".")] = 1;
          }
        } catch (t) {
          a.e(t);
        } finally {
          a.f();
        }
      }

      return e;
    }
    /*!
     * ignore
     */


    function st(t, e, r, n, i, o, s) {
      for (var a = Object.keys(t.$__schema.paths), u = a.length, h = 0; h < u; ++h) {
        var f = void 0,
            c = "",
            l = a[h];
        if ("_id" !== l || !r) for (var d = t.$__schema.paths[l], p = d.splitPath(), y = p.length, m = !1, b = t._doc, v = 0; v < y && null != b; ++v) {
          var g = p[v];

          if (c += (c.length ? "." : "") + g, !0 === n) {
            if (c in e) break;
          } else if (!1 === n && e && !m) if (c in e) m = !0;else if (!i[c]) break;

          if (v === y - 1) {
            if (void 0 !== b[g]) break;

            if ("function" == typeof d.defaultValue) {
              if (!d.defaultValue.$runBeforeSetters && o) break;
              if (d.defaultValue.$runBeforeSetters && !o) break;
            } else if (!o) continue;

            if (s && s[c]) break;

            if (e && null !== n) {
              if (!0 === n) {
                if (l in e) continue;

                try {
                  f = d.getDefault(t, !1);
                } catch (e) {
                  t.invalidate(l, e);
                  break;
                }

                void 0 !== f && (b[g] = f, t.$__.activePaths.default(l));
              } else if (m) {
                try {
                  f = d.getDefault(t, !1);
                } catch (e) {
                  t.invalidate(l, e);
                  break;
                }

                void 0 !== f && (b[g] = f, t.$__.activePaths.default(l));
              }
            } else {
              try {
                f = d.getDefault(t, !1);
              } catch (e) {
                t.invalidate(l, e);
                break;
              }

              void 0 !== f && (b[g] = f, t.$__.activePaths.default(l));
            }
          } else b = b[g];
        }
      }
    }
    /*!
     * ignore
     */


    function at(t, e, r) {
      if (null != t) {
        x(t);

        for (var n = Object.keys(r.$__schema.paths), i = n.length, o = -1 === e.indexOf(".") ? [e] : e.split("."), s = 0; s < i; ++s) {
          var a = "",
              u = n[s];

          if (u.startsWith(e + ".")) {
            var h = r.$__schema.paths[u],
                f = h.splitPath().slice(o.length),
                c = f.length;
            if (void 0 !== h.defaultValue) for (var l = t, d = 0; d < c && null != l; ++d) {
              var p = f[d];

              if (d === c - 1) {
                if (void 0 !== l[p]) break;

                try {
                  var y = h.getDefault(r, !1);
                  void 0 !== y && (l[p] = y);
                } catch (t) {
                  r.invalidate(e + "." + a, t);
                  break;
                }

                break;
              }

              a += (a.length ? "." : "") + p, l[p] = l[p] || {}, l = l[p];
            }
          }
        }
      }
    }

    function ut(t) {
      if (null == t) return !0;
      if ("object" !== s(t) || Array.isArray(t)) return !1;

      for (var e = 0, r = Object.keys(t); e < r.length; e++) {
        if (!ut(t[r[e]])) return !1;
      }

      return !0;
    }
    /*!
     * ignore
     */


    function ht(t) {
      var e = {};
      !
      /*!
       * ignore
       */
      function (t) {
        Object.keys(t.$__.activePaths.states.require).forEach(function (e) {
          var r = t.$__schema.path(e);

          if (null != r && "function" == typeof r.originalRequiredValue) {
            t.$__.cachedRequired = t.$__.cachedRequired || {};

            try {
              t.$__.cachedRequired[e] = r.originalRequiredValue.call(t, t);
            } catch (r) {
              t.invalidate(e, r);
            }
          }
        });
      }(t);
      var r = new Set(Object.keys(t.$__.activePaths.states.require).filter(function (e) {
        return !(!t.$__isSelected(e) && !t.$isModified(e)) && (null == t.$__.cachedRequired || !(e in t.$__.cachedRequired) || t.$__.cachedRequired[e]);
      }));

      function n(t) {
        r.add(t);
      }

      Object.keys(t.$__.activePaths.states.init).forEach(n), Object.keys(t.$__.activePaths.states.modify).forEach(n), Object.keys(t.$__.activePaths.states.default).forEach(n);
      var o,
          s = t.$getAllSubdocs(),
          a = t.modifiedPaths(),
          u = i(s);

      try {
        for (u.s(); !(o = u.n()).done;) {
          var h = o.value;

          if (h.$basePath) {
            var f,
                c = i(r);

            try {
              for (c.s(); !(f = c.n()).done;) {
                var l = f.value;
                (null === l || l.startsWith(h.$basePath + ".")) && r.delete(l);
              }
            } catch (t) {
              c.e(t);
            } finally {
              c.f();
            }

            !t.$isModified(h.$basePath, a) || t.isDirectModified(h.$basePath) || t.$isDefault(h.$basePath) || (r.add(h.$basePath), e[h.$basePath] = !0);
          }
        }
      } catch (t) {
        u.e(t);
      } finally {
        u.f();
      }

      var d,
          p = i(r);

      try {
        for (p.s(); !(d = p.n()).done;) {
          var y = d.value,
              m = t.$__schema.path(y);
          if (m && m.$isMongooseArray && (!m.$isMongooseDocumentArray || k(m, "schemaOptions.required"))) b(t.$__getValue(y), r, y);
        }
      } catch (t) {
        p.e(t);
      } finally {
        p.f();
      }

      function b(t, e, r) {
        if (null != t) for (var n = t.length, i = 0; i < n; ++i) {
          Array.isArray(t[i]) ? b(t[i], e, r + "." + i) : e.add(r + "." + i);
        }
      }

      var v,
          g = {
        skipArrays: !0
      },
          w = i(r);

      try {
        for (w.s(); !(v = w.n()).done;) {
          var _ = v.value;

          if (t.$__schema.nested[_]) {
            var M = t.$__getValue(_);
            V(M) && (M = M.toObject({
              transform: !1
            }));
            var S = E(M, _, g, t.$__schema);
            Object.keys(S).forEach(n);
          }
        }
      } catch (t) {
        w.e(t);
      } finally {
        w.f();
      }

      var O,
          A = i(r);

      try {
        for (A.s(); !(O = A.n()).done;) {
          var x = O.value;
          if (t.$__schema.singleNestedPaths.hasOwnProperty(x)) r.delete(x);else {
            var j = t.$__schema.path(x);

            if (j && j.$isSchemaMap) {
              var $ = t.$__getValue(x);

              if (null != $) {
                var P,
                    R = i($.keys());

                try {
                  for (R.s(); !(P = R.n()).done;) {
                    var B = P.value;
                    r.add(x + "." + B);
                  }
                } catch (t) {
                  R.e(t);
                } finally {
                  R.f();
                }
              }
            }
          }
        }
      } catch (t) {
        A.e(t);
      } finally {
        A.f();
      }

      return [r = Array.from(r), e];
    }
    /*!
     * ignore
     */

    /*!
     * ignore
     */


    function ft(t, e) {
      var r,
          n = new Set(e),
          o = new Map([]),
          s = i(e);

      try {
        for (s.s(); !(r = s.n()).done;) {
          var a = r.value;
          if (-1 !== a.indexOf(".")) for (var u = a.split("."), h = u[0], f = 1; f < u.length; ++f) {
            o.set(h, a), h = h + "." + u[f];
          }
        }
      } catch (t) {
        s.e(t);
      } finally {
        s.f();
      }

      var c,
          l = [],
          d = i(t);

      try {
        for (d.s(); !(c = d.n()).done;) {
          var p = c.value;
          n.has(p) ? l.push(p) : o.has(p) && l.push(o.get(p));
        }
      } catch (t) {
        d.e(t);
      } finally {
        d.f();
      }

      return l;
    }
    /*!
     * ignore
     */


    function ct(t, e) {
      return e = new Set(e), t = t.filter(function (t) {
        return !e.has(t);
      });
    }
    /*!
     * Runs queued functions
     */


    function lt(t) {
      var e = t.$__schema && t.$__schema.callQueue;

      if (e.length) {
        var r,
            n = i(e);

        try {
          for (n.s(); !(r = n.n()).done;) {
            var o = r.value;
            "pre" !== o[0] && "post" !== o[0] && "on" !== o[0] && t[o[0]].apply(t, o[1]);
          }
        } catch (t) {
          n.e(t);
        } finally {
          n.f();
        }
      }
    }
    /*!
     * ignore
     */

    /*!
     * Applies virtuals properties to `json`.
     */


    function dt(t, e, r, n) {
      var i,
          o,
          s,
          a = t.$__schema,
          u = Object.keys(a.virtuals),
          h = u.length,
          f = h,
          c = t._doc,
          l = k(n, "aliases", !0),
          d = null;
      if (Array.isArray(r.virtuals)) d = new Set(r.virtuals);else if (r.virtuals && r.virtuals.pathsToSkip) {
        d = new Set(u);

        for (var p = 0; p < r.virtuals.pathsToSkip.length; p++) {
          d.has(r.virtuals.pathsToSkip[p]) && d.delete(r.virtuals.pathsToSkip[p]);
        }
      }
      if (!c) return e;

      for (r = r || {}, h = 0; h < f; ++h) {
        if (i = u[h], (null == d || d.has(i)) && (l || !a.aliases.hasOwnProperty(i))) {
          if (o = i, null != r.path) {
            if (!i.startsWith(r.path + ".")) continue;
            o = i.substr(r.path.length + 1);
          }

          var y = o.split(".");

          if (void 0 !== (s = F(t.get(i), r))) {
            var m = y.length;
            c = e;

            for (var b = 0; b < m - 1; ++b) {
              c[y[b]] = c[y[b]] || {}, c = c[y[b]];
            }

            c[y[m - 1]] = s;
          }
        }
      }

      return e;
    }
    /*!
     * Applies virtuals properties to `json`.
     *
     * @param {Document} self
     * @param {Object} json
     * @return {Object} `json`
     */


    function pt(t, e) {
      if (U(e)) throw new Error("`transform` function must be synchronous, but the transform on path `" + t + "` returned a promise.");
    }
    /*!
     * ignore
     */


    nt.prototype.$__schema, nt.prototype.schema, Object.defineProperty(nt.prototype, "$locals", {
      configurable: !1,
      enumerable: !1,
      get: function get() {
        return null == this.$__.locals && (this.$__.locals = {}), this.$__.locals;
      },
      set: function set(t) {
        this.$__.locals = t;
      }
    }), nt.prototype.$isNew, nt.prototype.isNew, Object.defineProperty(nt.prototype, "$where", {
      configurable: !1,
      enumerable: !1,
      writable: !0
    }), nt.prototype.id, nt.prototype.$errors, nt.prototype.errors, Object.defineProperty(nt.prototype, "$op", {
      get: function get() {
        return this.$__.op || null;
      },
      set: function set(t) {
        this.$__.op = t;
      }
    }), nt.prototype.$__buildDoc = function (t, e, r, n, i) {
      for (var o = {}, s = Object.keys(this.$__schema.paths).filter(function (t) {
        return !t.includes("$*");
      }), a = s.length, u = 0; u < a; ++u) {
        var h = s[u];

        if ("_id" === h) {
          if (r) continue;
          if (t && "_id" in t) continue;
        }

        for (var f = this.$__schema.paths[h].splitPath(), c = f.length, l = c - 1, d = "", p = o, y = !1, m = 0; m < c; ++m) {
          var b = f[m];

          if (d += (d.length ? "." : "") + b, !0 === n) {
            if (d in e) break;
          } else if (!1 === n && e && !y) if (d in e) y = !0;else if (!i[d]) break;

          m < l && (p = p[b] || (p[b] = {}));
        }
      }

      this._doc = o;
    },
    /*!
     * Converts to POJO when you use the document for querying
     */
    nt.prototype.toBSON = function () {
      return this.toObject(N);
    }, nt.prototype.init = function (t, e, r) {
      return "function" == typeof e && (r = e, e = null), this.$__init(t, e), r && r(null, this), this;
    }, nt.prototype.$init = function () {
      return this.constructor.prototype.init.apply(this, arguments);
    },
    /*!
     * ignore
     */
    nt.prototype.$__init = function (t, e) {
      if (this.$isNew = !1, e = e || {}, null != t._id && e.populated && e.populated.length) {
        var r,
            n = String(t._id),
            o = i(e.populated);

        try {
          for (o.s(); !(r = o.n()).done;) {
            var s = r.value;

            if (s.isVirtual ? this.$populated(s.path, q.getValue(s.path, t), s) : this.$populated(s.path, s._docs[n], s), null != s._childDocs) {
              var a,
                  u = i(s._childDocs);

              try {
                for (u.s(); !(a = u.n()).done;) {
                  var h = a.value;
                  null != h && null != h.$__ && (h.$__.parent = this);
                }
              } catch (t) {
                u.e(t);
              } finally {
                u.f();
              }

              s._childDocs = [];
            }
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }
      }
      /*!
       * Init helper.
       *
       * @param {Object} self document instance
       * @param {Object} obj raw mongodb doc
       * @param {Object} doc object we are initializing
       * @api private
       */


      return function t(e, r, n, i, o) {
        o = o || "";
        var s,
            a,
            u,
            h = Object.keys(r),
            f = h.length,
            c = 0,
            l = e.$__.strictMode;

        for (; c < f;) {
          d(c++);
        }

        function d(f) {
          if (u = h[f], a = o + u, s = e.$__schema.path(a), !e.$__schema.$isRootDiscriminator || e.$__isSelected(a)) if (!s && q.isPOJO(r[u])) n[u] || (n[u] = {}), t(e, r[u], n[u], i, a + ".");else if (s) {
            if (n.hasOwnProperty(u) && void 0 !== r[u] && delete n[u], null === r[u]) n[u] = s._castNullish(null);else if (void 0 !== r[u]) {
              var c = (r[u].$__ || {}).wasPopulated || null;
              if (s && !c) try {
                n[u] = s.cast(r[u], e, !0);
              } catch (t) {
                e.invalidate(t.path, new w({
                  path: t.path,
                  message: t.message,
                  type: "cast",
                  value: t.value,
                  reason: t
                }));
              } else n[u] = r[u];
            }
            e.$isModified(a) || e.$__.activePaths.init(a);
          } else n[u] = r[u], l || o || (e[u] = r[u]);
        }
      }(this, t, this._doc, e), D(this, e.populated), this.$emit("init", this), this.constructor.emit("init", this), this.$__._id = this._id, this;
    }, nt.prototype.update = function () {
      var t = q.args(arguments);
      t.unshift({
        _id: this._id
      });
      var e = this.constructor.update.apply(this.constructor, t);
      return null != this.$session() && ("session" in e.options || (e.options.session = this.$session())), e;
    }, nt.prototype.updateOne = function (t, e, r) {
      var n = this,
          i = this.constructor.updateOne({
        _id: this._id
      }, t, e);
      return i.pre(function (t) {
        n.constructor._middleware.execPre("updateOne", n, [n], t);
      }), i.post(function (t) {
        n.constructor._middleware.execPost("updateOne", n, [n], {}, t);
      }), null != this.$session() && ("session" in i.options || (i.options.session = this.$session())), null != r ? i.exec(r) : i;
    }, nt.prototype.replaceOne = function () {
      var t = q.args(arguments);
      return t.unshift({
        _id: this._id
      }), this.constructor.replaceOne.apply(this.constructor, t);
    }, nt.prototype.$session = function (t) {
      if (0 === arguments.length) return null != this.$__.session && this.$__.session.hasEnded ? (this.$__.session = null, null) : this.$__.session;
      if (null != t && t.hasEnded) throw new l("Cannot set a document's session to a session that has ended. Make sure you haven't called `endSession()` on the session you are passing to `$session()`.");

      if (null != t || null != this.$__.session) {
        if (this.$__.session = t, !this.$isSubdocument) {
          var e,
              r = this.$getAllSubdocs(),
              n = i(r);

          try {
            for (n.s(); !(e = n.n()).done;) {
              var o = e.value;
              o.$session(t);
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }
        }

        return t;
      }
    }, nt.prototype.overwrite = function (t) {
      for (var e = 0, r = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(t)))); e < r.length; e++) {
        var n = r[e];
        "_id" !== n && (this.$__schema.options.versionKey && n === this.$__schema.options.versionKey || this.$__schema.options.discriminatorKey && n === this.$__schema.options.discriminatorKey || this.$set(n, t[n]));
      }

      return this;
    }, nt.prototype.$set = function (t, e, r, o) {
      var a = this;
      q.isPOJO(r) && (o = r, r = void 0);

      var u,
          h,
          f,
          c,
          y = (o = o || {}).merge,
          m = r && !0 !== r,
          b = !0 === r,
          g = this.$__schema.options.typeKey,
          w = 0,
          _ = "strict" in o ? o.strict : this.$__.strictMode;

      if (m && ((this.$__.adhocPaths || (this.$__.adhocPaths = {}))[t] = this.$__schema.interpretAsType(t, r, this.$__schema.options)), null == t) {
        var M = [e, t];
        t = M[0], e = M[1];
      } else if ("string" != typeof t) {
        if (t instanceof nt && (t = t.$__isNested ? t.toObject() : t._doc), null == t) {
          var O = [e, t];
          t = O[0], e = O[1];
        }

        c = e ? e + "." : "";
        var A = (u = $(this.$__schema, t)).length,
            E = k(o, "_skipMinimizeTopLevel", !1);
        if (0 === A && E) return delete o._skipMinimizeTopLevel, e && this.$set(e, {}), this;

        for (var x = 0; x < A; ++x) {
          var R = c + (f = u[x]);
          h = this.$__schema.pathType(R);
          var B = t[f];
          if (!0 !== r || c || null == t[f] || "nested" !== h || null == this._doc[f] ? o = Object.assign({}, o, {
            _skipMinimizeTopLevel: !1
          }) : (delete this._doc[f], o = Object.assign({}, o, {
            _skipMinimizeTopLevel: !0
          })), q.isNonBuiltinObject(B) && "nested" === h) at(t[f], c + f, this), this.$set(c + f, t[f], b, Object.assign({}, o, {
            _skipMarkModified: !0
          }));else if (_) {
            if (b && void 0 === t[f] && void 0 !== this.$get(R)) continue;

            if ("adhocOrUndefined" === h && (h = j(this, R, {
              typeOnly: !0
            })), "real" === h || "virtual" === h) {
              var T = t[f];
              this.$set(c + f, T, b, o);
            } else if ("nested" === h && t[f] instanceof nt) this.$set(c + f, t[f].toObject({
              transform: !1
            }), b, o);else if ("throw" === _) throw "nested" === h ? new p(f, t[f]) : new v(f);
          } else void 0 !== t[f] && this.$set(c + f, t[f], b, o);
        }

        for (var I = 0, D = Object.keys(this.$__schema.tree); I < D.length; I++) {
          var L = D[I];

          if (this._doc.hasOwnProperty(L)) {
            var U = this._doc[L];
            delete this._doc[L], this._doc[L] = U;
          }
        }

        return this;
      }

      var F = this.$__schema.pathType(t);
      "adhocOrUndefined" === F && (F = j(this, t, {
        typeOnly: !0
      })), e = P(e);
      var z,
          V = null != a.$__.priorDoc ? a.$__.priorDoc.$__getValue(t) : b ? void 0 : a.$__getValue(t);

      if ("nested" === F && e) {
        if ("object" === s(e) && null != e) {
          if (null != e.$__ && (e = e.toObject(N)), null == e) return this.invalidate(t, new l.CastError("Object", e, t)), this;
          var K = null != this.$__.savedState && this.$__.savedState.hasOwnProperty(t);

          if (null != this.$__.savedState && !this.$isNew && !this.$__.savedState.hasOwnProperty(t)) {
            var H = this.$__getValue(t);
            this.$__.savedState[t] = H;

            for (var W = 0, Z = Object.keys(H || {}); W < Z.length; W++) {
              var J = Z[W];
              this.$__.savedState[t + "." + J] = H[J];
            }
          }

          if (y) return this.$set(e, t, b);
          this.$__setValue(t, null), S(this, t);
          var Y = $(this.$__schema, e, t);
          this.$__setValue(t, {});
          var G,
              X = i(Y);

          try {
            for (X.s(); !(G = X.n()).done;) {
              var tt = G.value;
              this.$set(t + "." + tt, e[tt], b, o);
            }
          } catch (t) {
            X.e(t);
          } finally {
            X.f();
          }

          return null != V && q.deepEqual(K ? this.$__.savedState[t] : V, e) ? this.unmarkModified(t) : this.markModified(t), S(this, t, {
            skipDocArrays: !0
          }), this;
        }

        return this.invalidate(t, new l.CastError("Object", e, t)), this;
      }

      var et = -1 === t.indexOf(".") ? [t] : t.split(".");

      if ("string" == typeof this.$__schema.aliases[et[0]] && (et[0] = this.$__schema.aliases[et[0]]), "adhocOrUndefined" === F && _) {
        var rt;

        for (w = 0; w < et.length; ++w) {
          var it = et.slice(0, w + 1).join(".");
          if (w + 1 < et.length && "virtual" === this.$__schema.pathType(it)) return C.set(t, e, this), this;

          if (null != (z = this.$__schema.path(it)) && z instanceof d) {
            rt = !0;
            break;
          }
        }

        if (null == z && (z = j(this, t)), !rt && !z) {
          if ("throw" === _) throw new v(t);
          return this;
        }
      } else {
        if ("virtual" === F) return (z = this.$__schema.virtualpath(t)).applySetters(e, this), this;
        z = this.$__path(t);
      }

      var ot,
          st = this._doc,
          ut = "";

      for (w = 0; w < et.length - 1; ++w) {
        st = st[et[w]], ut += (ut.length > 0 ? "." : "") + et[w], st || (this.$set(ut, {}), this.$__isSelected(ut) || this.unmarkModified(ut), st = this.$__getValue(ut));
      }

      if (et.length <= 1) ot = t;else {
        for (w = 0; w < et.length; ++w) {
          var ht = et.slice(0, w + 1).join(".");

          if (null === this.$get(ht, null, {
            getters: !1
          })) {
            ot = ht;
            break;
          }
        }

        ot || (ot = t);
      }
      if (!z) return this.$__set(ot, t, o, b, et, z, e, V), this;

      if ((z.$isSingleNested || z.$isMongooseArray) &&
      /*!
       * ignore
       */
      function (t, e) {
        if (!t.$__.validationError) return;

        for (var r = Object.keys(t.$__.validationError.errors), n = 0, i = r; n < i.length; n++) {
          var o = i[n];
          o.startsWith(e + ".") && delete t.$__.validationError.errors[o];
        }

        0 === Object.keys(t.$__.validationError.errors).length && (t.$__.validationError = null);
      }
      /*!
       * ignore
       */
      (this, t), z.$isSingleNested && null != e && y) {
        e instanceof nt && (e = e.toObject({
          virtuals: !1,
          transform: !1
        }));

        for (var ft = 0, ct = Object.keys(e); ft < ct.length; ft++) {
          var lt = ct[ft];
          this.$set(t + "." + lt, e[lt], b, o);
        }

        return this;
      }

      var dt = !0;

      try {
        var pt,
            yt = function () {
          if (null == z.options) return !1;
          if (!(e instanceof nt)) return !1;
          var t = e.constructor,
              r = z.options.ref;
          if (null != r && (r === t.modelName || r === t.baseModelName)) return !0;
          var n = z.options.refPath;
          if (null == n) return !1;
          var i = e.get(n);
          return i === t.modelName || i === t.baseModelName;
        }(),
            mt = !1;

        if (yt && e instanceof nt && (this.$populated(t, e._id, n({}, Q, e.constructor)), e.$__.wasPopulated = !0, mt = !0), z.options && Array.isArray(z.options[g]) && z.options[g].length && z.options[g][0].ref &&
        /*!
         * ignore
         */
        function (t, e) {
          if (!Array.isArray(t)) return !1;
          if (0 === t.length) return !1;
          var r,
              n = i(t);

          try {
            for (n.s(); !(r = n.n()).done;) {
              var o = r.value;
              if (!(o instanceof nt)) return !1;
              if (null == o.constructor.modelName) return !1;
              if (o.constructor.modelName != e && o.constructor.baseModelName != e) return !1;
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }

          return !0;
        }(e, z.options[g][0].ref)) {
          pt = n({}, Q, e[0].constructor), this.$populated(t, e.map(function (t) {
            return t._id;
          }), pt);
          var bt,
              vt = i(e);

          try {
            for (vt.s(); !(bt = vt.n()).done;) {
              bt.value.$__.wasPopulated = !0;
            }
          } catch (t) {
            vt.e(t);
          } finally {
            vt.f();
          }

          mt = !0;
        }

        if (null != this.$__schema.singleNestedPaths[t] || yt && z.$isSingleNested && e.$__ || (e = z.applySetters(e, this, !1, V)), z.$isMongooseDocumentArray && Array.isArray(e) && e.length > 0 && null != e[0] && null != e[0].$__ && null != e[0].$__.populated) {
          for (var gt = Object.keys(e[0].$__.populated), wt = function wt() {
            var r = Mt[_t];
            a.$populated(t + "." + r, e.map(function (t) {
              return t.$populated(r);
            }), e[0].$__.populated[r].options);
          }, _t = 0, Mt = gt; _t < Mt.length; _t++) {
            wt();
          }

          mt = !0;
        }

        if (!mt && this.$__.populated) {
          if (Array.isArray(e) && this.$__.populated[t]) for (var St = 0; St < e.length; ++St) {
            e[St] instanceof nt && e.set(St, e[St]._id, !0);
          }
          delete this.$__.populated[t];
        }

        z.$isSingleNested && null != e && function (t, e, r) {
          var n = e.schema;
          if (null == n) return;

          for (var i = 0, o = Object.keys(n.paths); i < o.length; i++) {
            var s = o[i],
                a = n.paths[s];

            if (null != a.$immutableSetter) {
              var u = null == r ? void 0 : r.$__getValue(s);
              a.$immutableSetter.call(t, u);
            }
          }
        }(e, z, V), this.$markValid(t);
      } catch (r) {
        r instanceof l.StrictModeError && r.isImmutableError ? this.invalidate(t, r) : r instanceof l.CastError ? (this.invalidate(r.path, r), r.$originalErrorPath && this.invalidate(t, new l.CastError(z.instance, e, t, r.$originalErrorPath))) : this.invalidate(t, new l.CastError(z.instance, e, t, r)), dt = !1;
      }

      if (dt) {
        var Ot = this.$isSubdocument ? this.ownerDocument() : this,
            At = Ot.$__.savedState,
            Et = this.$isSubdocument ? this.$__.fullPath + "." + t : t;

        if (null != At) {
          var xt = Et.indexOf("."),
              kt = -1 === xt ? Et : Et.slice(0, xt);
          At.hasOwnProperty(kt) || (At[kt] = q.clone(Ot.$__getValue(kt)));
        }

        this.$__set(ot, t, o, b, et, z, e, V), null != At && At.hasOwnProperty(Et) && q.deepEqual(e, At[Et]) && this.unmarkModified(t);
      }

      return z.$isSingleNested && (this.isDirectModified(t) || null == e) && S(this, t), this;
    }, nt.prototype.set = nt.prototype.$set, nt.prototype.$__shouldModify = function (t, e, r, n, i, o, s, a) {
      return !r._skipMarkModified && (!!this.$isNew || null == this.$__schema.singleNestedPaths[e] && (void 0 === s && !this.$__isSelected(e) || (void 0 !== s || !(e in this.$__.activePaths.states.default)) && !(this.$populated(e) && s instanceof nt && z(s._id, a)) && (!z(s, a || q.getValue(e, this)) || !(n || null == s || !(e in this.$__.activePaths.states.default) || !z(s, o.getDefault(this, n))))));
    }, nt.prototype.$__set = function (t, e, n, i, o, s, a, f) {
      h = h || r(47);
      var c = this.$__shouldModify(t, e, n, i, o, s, a, f),
          l = this;
      c ? (this.markModified(t), u || (u = r(175)), a && a.isMongooseArray && (a._registerAtomic("$set", a), a.isMongooseDocumentArray && a.forEach(function (t) {
        t && t.__parentArray && (t.__parentArray = a);
      }), this.$__.activePaths.forEach(function (t) {
        t.startsWith(e + ".") && l.$__.activePaths.ignore(t);
      }))) : Array.isArray(a) && a.isMongooseArray && Array.isArray(f) && f.isMongooseArray && (a[H] = f[H], a[K] = f[K]);

      for (var d = this._doc, p = 0, y = o.length, m = ""; p < y; p++) {
        var b = p + 1 === y;
        if (m += m ? "." + o[p] : o[p], rt.has(o[p])) return;
        b ? d instanceof Map ? d.set(o[p], a) : d[o[p]] = a : (q.isPOJO(d[o[p]]) || d[o[p]] && d[o[p]] instanceof h || d[o[p]] && d[o[p]].$isSingleNested || d[o[p]] && Array.isArray(d[o[p]]) || (d[o[p]] = d[o[p]] || {}), d = d[o[p]]);
      }
    }, nt.prototype.$__getValue = function (t) {
      return q.getValue(t, this._doc);
    }, nt.prototype.$__setValue = function (t, e) {
      return q.setValue(t, e, this._doc), this;
    }, nt.prototype.get = function (t, e, r) {
      var n;
      r = r || {}, e && (n = this.$__schema.interpretAsType(t, e, this.$__schema.options));
      var i = this.$__path(t);

      if (null == i && (i = this.$__schema.virtualpath(t)), i instanceof d) {
        var o = this.$__schema.virtualpath(t);
        null != o && (i = o);
      }

      var s = -1 === t.indexOf(".") ? [t] : t.split("."),
          a = this._doc;
      if (i instanceof _) return i.applyGetters(void 0, this);
      "string" == typeof this.$__schema.aliases[s[0]] && (s[0] = this.$__schema.aliases[s[0]]);

      for (var u = 0, h = s.length; u < h; u++) {
        a && a._doc && (a = a._doc), a = null == a ? void 0 : a instanceof Map ? a.get(s[u], {
          getters: !1
        }) : u === h - 1 ? q.getValue(s[u], a) : a[s[u]];
      }

      if (n && (a = n.cast(a)), null != i && !1 !== r.getters) a = i.applyGetters(a, this);else if (this.$__schema.nested[t] && r.virtuals) return dt(this, q.clone(a) || {}, {
        path: t
      });
      return a;
    },
    /*!
     * ignore
     */
    nt.prototype[G] = nt.prototype.get, nt.prototype.$get = nt.prototype.get, nt.prototype.$__path = function (t) {
      var e = this.$__.adhocPaths,
          r = e && e.hasOwnProperty(t) ? e[t] : null;
      return r || this.$__schema.path(t);
    }, nt.prototype.markModified = function (t, e) {
      this.$__.activePaths.modify(t), null == e || this.$isSubdocument || (this.$__.pathsToScopes = this.$__pathsToScopes || {}, this.$__.pathsToScopes[t] = e);
    }, nt.prototype.unmarkModified = function (t) {
      this.$__.activePaths.init(t), null != this.$__.pathsToScopes && delete this.$__.pathsToScopes[t];
    }, nt.prototype.$ignore = function (t) {
      this.$__.activePaths.ignore(t);
    }, nt.prototype.directModifiedPaths = function () {
      return Object.keys(this.$__.activePaths.states.modify);
    }, nt.prototype.$isEmpty = function (t) {
      var e = {
        minimize: !0,
        virtuals: !1,
        getters: !1,
        transform: !1
      };

      if (arguments.length > 0) {
        var r = this.$get(t);
        return null == r || "object" === s(r) && (q.isPOJO(r) ? ut(r) : 0 === Object.keys(r.toObject(e)).length);
      }

      return 0 === Object.keys(this.toObject(e)).length;
    }, nt.prototype.modifiedPaths = function (t) {
      t = t || {};
      var e = Object.keys(this.$__.activePaths.states.modify),
          r = this;
      return e.reduce(function (e, n) {
        var o = n.split(".");
        if (e = e.concat(o.reduce(function (t, e, r) {
          return t.concat(o.slice(0, r).concat(e).join("."));
        }, []).filter(function (t) {
          return -1 === e.indexOf(t);
        })), !t.includeChildren) return e;
        var a = r.$get(n);
        if (null != a && "object" === s(a)) if (a._doc && (a = a._doc), Array.isArray(a)) {
          for (var u = a.length, h = 0; h < u; ++h) {
            if (-1 === e.indexOf(n + "." + h) && (e.push(n + "." + h), null != a[h] && a[h].$__)) {
              var f,
                  c = i(a[h].modifiedPaths());

              try {
                for (c.s(); !(f = c.n()).done;) {
                  var l = f.value;
                  e.push(n + "." + h + "." + l);
                }
              } catch (t) {
                c.e(t);
              } finally {
                c.f();
              }
            }
          }
        } else Object.keys(a).filter(function (t) {
          return -1 === e.indexOf(n + "." + t);
        }).forEach(function (t) {
          e.push(n + "." + t);
        });
        return e;
      }, []);
    }, nt.prototype[J] = nt.prototype.modifiedPaths, nt.prototype.isModified = function (t, e) {
      if (t) {
        Array.isArray(t) || (t = t.split(" "));
        var r = e || this[J](),
            n = Object.keys(this.$__.activePaths.states.modify);
        return t.some(function (t) {
          return !!~r.indexOf(t);
        }) || t.some(function (t) {
          return n.some(function (e) {
            return e === t || t.startsWith(e + ".");
          });
        });
      }

      return this.$__.activePaths.some("modify");
    }, nt.prototype.$isModified = nt.prototype.isModified, nt.prototype[Z] = nt.prototype.isModified, nt.prototype.$isDefault = function (t) {
      var e = this;
      if (null == t) return this.$__.activePaths.some("default");
      if ("string" == typeof t && -1 === t.indexOf(" ")) return this.$__.activePaths.states.default.hasOwnProperty(t);
      var r = t;
      return Array.isArray(r) || (r = r.split(" ")), r.some(function (t) {
        return e.$__.activePaths.states.default.hasOwnProperty(t);
      });
    }, nt.prototype.$isDeleted = function (t) {
      return 0 === arguments.length ? !!this.$__.isDeleted : (this.$__.isDeleted = !!t, this);
    }, nt.prototype.isDirectModified = function (t) {
      var e = this;
      if (null == t) return this.$__.activePaths.some("modify");
      if ("string" == typeof t && -1 === t.indexOf(" ")) return this.$__.activePaths.states.modify.hasOwnProperty(t);
      var r = t;
      return Array.isArray(r) || (r = r.split(" ")), r.some(function (t) {
        return e.$__.activePaths.states.modify.hasOwnProperty(t);
      });
    }, nt.prototype.isInit = function (t) {
      var e = this;
      if (null == t) return this.$__.activePaths.some("init");
      if ("string" == typeof t && -1 === t.indexOf(" ")) return this.$__.activePaths.states.init.hasOwnProperty(t);
      var r = t;
      return Array.isArray(r) || (r = r.split(" ")), r.some(function (t) {
        return e.$__.activePaths.states.init.hasOwnProperty(t);
      });
    }, nt.prototype.isSelected = function (t) {
      var e = this;
      if (null == this.$__.selected) return !0;
      if ("_id" === t) return 0 !== this.$__.selected._id;
      if (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t)) return t.some(function (t) {
        return e.$__isSelected(t);
      });
      var r = Object.keys(this.$__.selected),
          n = null;
      if (1 === r.length && "_id" === r[0]) return 0 === this.$__.selected._id;

      for (var i = 0, o = r; i < o.length; i++) {
        var s = o[i];

        if ("_id" !== s && B(this.$__.selected[s])) {
          n = !!this.$__.selected[s];
          break;
        }
      }

      if (null === n) return !0;
      if (t in this.$__.selected) return n;

      for (var a = t + ".", u = 0, h = r; u < h.length; u++) {
        var f = h[u];

        if ("_id" !== f) {
          if (f.startsWith(a)) return n || f !== a;
          if (a.startsWith(f + ".")) return n;
        }
      }

      return !n;
    }, nt.prototype.$__isSelected = nt.prototype.isSelected, nt.prototype.isDirectSelected = function (t) {
      var e = this;
      if (null == this.$__.selected) return !0;
      if ("_id" === t) return 0 !== this.$__.selected._id;
      if (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t)) return t.some(function (t) {
        return e.isDirectSelected(t);
      });
      var r = Object.keys(this.$__.selected),
          n = null;
      if (1 === r.length && "_id" === r[0]) return 0 === this.$__.selected._id;

      for (var i = 0, o = r; i < o.length; i++) {
        var s = o[i];

        if ("_id" !== s && B(this.$__.selected[s])) {
          n = !!this.$__.selected[s];
          break;
        }
      }

      return null === n || (this.$__.selected.hasOwnProperty(t) ? n : !n);
    }, nt.prototype.validate = function (t, e, r) {
      var n,
          i = this;

      if (this.$op = "validate", null != this.$isSubdocument || (this.$__.validating ? n = new m(this, {
        parentStack: e && e.parentStack,
        conflictStack: this.$__.validating.stack
      }) : this.$__.validating = new m(this, {
        parentStack: e && e.parentStack
      })), 1 === arguments.length ? "object" !== s(arguments[0]) || Array.isArray(arguments[0]) ? "function" == typeof arguments[0] && (r = arguments[0], e = null, t = null) : (e = arguments[0], r = null, t = null) : "function" == typeof t ? (r = t, e = null, t = null) : "function" == typeof e && (r = e, e = t, t = null), e && "string" == typeof e.pathsToSkip) {
        var o = -1 === e.pathsToSkip.indexOf(" ");
        e.pathsToSkip = o ? [e.pathsToSkip] : e.pathsToSkip.split(" ");
      }

      return M(r, function (r) {
        if (null != n) return r(n);
        i.$__validate(t, e, function (t) {
          i.$op = null, r(t);
        });
      }, this.constructor.events);
    }, nt.prototype.$validate = nt.prototype.validate, nt.prototype.$__validate = function (t, e, r) {
      var n = this;
      "function" == typeof t ? (r = t, e = null, t = null) : "function" == typeof e && (r = e, e = null);
      var o,
          a = e && "object" === s(e) && "validateModifiedOnly" in e,
          u = k(e, "pathsToSkip", null);
      o = a ? !!e.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;

      var h = this,
          f = function f() {
        var t = n.$__.validationError;

        if (n.$__.validationError = void 0, o && null != t) {
          for (var e = 0, r = Object.keys(t.errors); e < r.length; e++) {
            var i = r[e];
            n.$isModified(i) || delete t.errors[i];
          }

          0 === Object.keys(t.errors).length && (t = void 0);
        }

        if (n.$__.cachedRequired = {}, n.$emit("validate", h), n.constructor.emit("validate", h), t) {
          for (var s in t.errors) {
            !n[W] && t.errors[s] instanceof l.CastError && n.invalidate(s, t.errors[s]);
          }

          return t;
        }
      },
          c = ht(this),
          d = o ? c[0].filter(function (t) {
        return n.$isModified(t);
      }) : c[0],
          p = c[1];

      if ("string" == typeof t && (t = t.split(" ")), Array.isArray(t) ? d = ft(d, t) : u && (d = ct(d, u)), 0 === d.length) return R(function () {
        var t = f();
        if (t) return h.$__schema.s.hooks.execPost("validate:error", h, [h], {
          error: t
        }, function (t) {
          r(t);
        });
        r(null, h);
      });
      var y,
          m = {},
          b = 0,
          v = i(d);

      try {
        for (v.s(); !(y = v.n()).done;) {
          w(y.value);
        }
      } catch (t) {
        v.e(t);
      } finally {
        v.f();
      }

      function w(t) {
        null == t || m[t] || (m[t] = !0, b++, R(function () {
          var e = h.$__schema.path(t);
          if (!e) return --b || _();

          if (h.$isValid(t)) {
            if (null != e[tt] && t !== e.path) return --b || _();
            var r,
                n = h.$__getValue(t);
            (r = h.$populated(t)) ? n = r : null != n && null != n.$__ && n.$__.wasPopulated && (n = n._id);
            var i = null != h.$__.pathsToScopes && t in h.$__.pathsToScopes ? h.$__.pathsToScopes[t] : h,
                s = {
              skipSchemaValidators: p[t],
              path: t,
              validateModifiedOnly: o
            };
            e.doValidate(n, function (r) {
              if (r) {
                if ((e.$isSingleNested || e.$isArraySubdocument || e.$isMongooseDocumentArray) && r instanceof g) return --b || _();
                h.invalidate(t, r, void 0, !0);
              }

              --b || _();
            }, i, s);
          } else --b || _();
        }));
      }

      function _() {
        var t = f();
        if (t) return h.$__schema.s.hooks.execPost("validate:error", h, [h], {
          error: t
        }, function (t) {
          r(t);
        });
        r(null, h);
      }
    }, nt.prototype.validateSync = function (t, e) {
      var r = this,
          n = this;
      1 !== arguments.length || "object" !== s(arguments[0]) || Array.isArray(arguments[0]) || (e = arguments[0], t = null);
      var i,
          o = e && "object" === s(e) && "validateModifiedOnly" in e;
      i = o ? !!e.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
      var a = e && e.pathsToSkip;

      if ("string" == typeof t) {
        var u = -1 === t.indexOf(" ");
        t = u ? [t] : t.split(" ");
      } else "string" == typeof a && -1 !== a.indexOf(" ") && (a = a.split(" "));

      var h = ht(this),
          f = i ? h[0].filter(function (t) {
        return r.$isModified(t);
      }) : h[0],
          c = h[1];
      Array.isArray(t) ? f = ft(f, t) : Array.isArray(a) && (f = ct(f, a));
      var d = {};
      f.forEach(function (t) {
        if (!d[t]) {
          d[t] = !0;
          var e = n.$__schema.path(t);

          if (e && n.$isValid(t)) {
            var r = n.$__getValue(t),
                o = e.doValidateSync(r, n, {
              skipSchemaValidators: c[t],
              path: t,
              validateModifiedOnly: i
            });

            if (o) {
              if ((e.$isSingleNested || e.$isArraySubdocument || e.$isMongooseDocumentArray) && o instanceof g) return;
              n.invalidate(t, o, void 0, !0);
            }
          }
        }
      });
      var p = n.$__.validationError;
      if (n.$__.validationError = void 0, n.$emit("validate", n), n.constructor.emit("validate", n), p) for (var y in p.errors) {
        p.errors[y] instanceof l.CastError && n.invalidate(y, p.errors[y]);
      }
      return p;
    }, nt.prototype.invalidate = function (t, e, r, n) {
      if (this.$__.validationError || (this.$__.validationError = new g(this)), !this.$__.validationError.errors[t]) return e && "string" != typeof e || (e = new w({
        path: t,
        message: e,
        type: n || "user defined",
        value: r
      })), this.$__.validationError === e || this.$__.validationError.addError(t, e), this.$__.validationError;
    }, nt.prototype.$markValid = function (t) {
      this.$__.validationError && this.$__.validationError.errors[t] && (delete this.$__.validationError.errors[t], 0 === Object.keys(this.$__.validationError.errors).length && (this.$__.validationError = null));
    }, nt.prototype.$isValid = function (t) {
      var e = this;
      return null == this.$__.validationError || 0 === Object.keys(this.$__.validationError.errors).length || null != t && (-1 !== t.indexOf(" ") && (t = t.split(" ")), Array.isArray(t) ? t.some(function (t) {
        return null == e.$__.validationError.errors[t];
      }) : null == this.$__.validationError.errors[t]);
    }, nt.prototype.$__reset = function () {
      var t = this;
      return a || (a = r(27)), this.$__.activePaths.map("init", "modify", function (e) {
        return t.$__getValue(e);
      }).filter(function (t) {
        return t && t instanceof Array && t.isMongooseDocumentArray && t.length;
      }).forEach(function (e) {
        for (var r = e.length; r--;) {
          var n = e[r];
          n && n.$__reset();
        }

        t.$__.activePaths.init(e.$path()), e[K] = e[H], e[H] = {};
      }), this.$__.activePaths.map("init", "modify", function (e) {
        return t.$__getValue(e);
      }).filter(function (t) {
        return t && t.$isSingleNested;
      }).forEach(function (e) {
        e.$__reset(), e.$parent() === t ? t.$__.activePaths.init(e.$basePath) : null != e.$parent() && e.$parent().$isSubdocument && e.$parent().$__reset();
      }), this.$__dirty().forEach(function (t) {
        var e = t.value;
        e && e[H] && (e[K] = e[H], e[H] = {});
      }), this.$__.backup = {}, this.$__.backup.activePaths = {
        modify: Object.assign({}, this.$__.activePaths.states.modify),
        default: Object.assign({}, this.$__.activePaths.states.default)
      }, this.$__.backup.validationError = this.$__.validationError, this.$__.backup.errors = this.$errors, this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("default"), this.$__.validationError = void 0, this.$errors = void 0, t = this, this.$__schema.requiredPaths().forEach(function (e) {
        t.$__.activePaths.require(e);
      }), this;
    },
    /*!
     * ignore
     */
    nt.prototype.$__undoReset = function () {
      if (null != this.$__.backup && null != this.$__.backup.activePaths) {
        this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify, this.$__.activePaths.states.default = this.$__.backup.activePaths.default, this.$__.validationError = this.$__.backup.validationError, this.$errors = this.$__.backup.errors;
        var t,
            e = i(this.$__dirty());

        try {
          for (e.s(); !(t = e.n()).done;) {
            var r = t.value.value;
            r && r[H] && r[K] && (r[H] = r[K]);
          }
        } catch (t) {
          e.e(t);
        } finally {
          e.f();
        }

        var n,
            o = i(this.$getAllSubdocs());

        try {
          for (o.s(); !(n = o.n()).done;) {
            n.value.$__undoReset();
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }
      }
    }, nt.prototype.$__dirty = function () {
      var t = this,
          e = this.$__.activePaths.map("modify", function (e) {
        return {
          path: e,
          value: t.$__getValue(e),
          schema: t.$__path(e)
        };
      });
      e = e.concat(this.$__.activePaths.map("default", function (e) {
        if ("_id" !== e && null != t.$__getValue(e)) return {
          path: e,
          value: t.$__getValue(e),
          schema: t.$__path(e)
        };
      }));
      var r = new Map(e.filter(function (t) {
        return null != t;
      }).map(function (t) {
        return [t.path, t.value];
      })),
          n = [];
      return e.forEach(function (t) {
        if (t) {
          for (var e = null, i = et(t.path), o = 0; o < i.length - 1; o++) {
            if (r.has(i[o])) {
              e = r.get(i[o]);
              break;
            }
          }

          null == e ? n.push(t) : null != e && null != e[H] && e.hasAtomics() && (e[H] = {}, e[H].$set = e);
        }
      }), n;
    }, nt.prototype.$__setSchema = function (t) {
      O(t.tree, this, void 0, t.options);

      for (var e = 0, r = Object.keys(t.virtuals); e < r.length; e++) {
        var n = r[e];

        t.virtuals[n]._applyDefaultGetters();
      }

      null == t.path("schema") && (this.schema = t), this.$__schema = t, this[Y] = t;
    }, nt.prototype.$__getArrayPathsToValidate = function () {
      return a || (a = r(27)), this.$__.activePaths.map("init", "modify", function (t) {
        return this.$__getValue(t);
      }.bind(this)).filter(function (t) {
        return t && t instanceof Array && t.isMongooseDocumentArray && t.length;
      }).reduce(function (t, e) {
        return t.concat(e);
      }, []).filter(function (t) {
        return t;
      });
    }, nt.prototype.$getAllSubdocs = function () {
      function t(e, r, n) {
        var i = e,
            o = !1;
        if (n && (e instanceof nt && e[Y].paths[n] ? i = e._doc[n] : e instanceof nt && e[Y].nested[n] ? (i = e._doc[n], o = !0) : i = e[n]), i instanceof h) r.push(i);else if (i instanceof Map) r = Array.from(i.keys()).reduce(function (e, r) {
          return t(i.get(r), e, null);
        }, r);else if (i && i.$isSingleNested) (r = Object.keys(i._doc).reduce(function (e, r) {
          return t(i._doc, e, r);
        }, r)).push(i);else if (i && i.isMongooseDocumentArray) i.forEach(function (e) {
          e && e._doc && (r = Object.keys(e._doc).reduce(function (r, n) {
            return t(e._doc, r, n);
          }, r), e instanceof h && r.push(e));
        });else if (o && null != i) for (var s = 0, a = Object.keys(i); s < a.length; s++) {
          var u = a[s];
          t(i, r, u);
        }
        return r;
      }

      a || (a = r(27)), h = h || r(47);

      for (var e = [], n = 0, i = Object.keys(this._doc); n < i.length; n++) {
        t(this, e, i[n]);
      }

      return e;
    }, nt.prototype.$__handleReject = function (t) {
      this.$listeners("error").length ? this.$emit("error", t) : this.constructor.listeners && this.constructor.listeners("error").length && this.constructor.emit("error", t);
    }, nt.prototype.$toObject = function (t, e) {
      var r,
          n,
          i = {
        transform: !0,
        flattenDecimals: !0
      },
          o = e ? "toJSON" : "toObject",
          s = k(this, "constructor.base.options." + o, {}),
          a = k(this, "$__schema.options", {});
      i = q.options(i, F(s)), i = q.options(i, F(a[o] || {})), (t = q.isPOJO(t) ? F(t) : {})._calledWithOptions = t._calledWithOptions || F(t), r = null != t._calledWithOptions.minimize ? t.minimize : null != i.minimize ? i.minimize : a.minimize, n = null != t._calledWithOptions.flattenMaps ? t.flattenMaps : null != i.flattenMaps ? i.flattenMaps : a.flattenMaps;
      var u = Object.assign(q.clone(t), {
        _isNested: !0,
        json: e,
        minimize: r,
        flattenMaps: n
      });
      if (q.hasUserDefinedProperty(t, "getters") && (u.getters = t.getters), q.hasUserDefinedProperty(t, "virtuals") && (u.virtuals = t.virtuals), (t.depopulate || k(t, "_parentOptions.depopulate", !1)) && t._isNested && this.$__.wasPopulated) return F(this._id, u);
      (t = q.options(i, t))._isNested = !0, t.json = e, t.minimize = r, u._parentOptions = t, u._skipSingleNestedGetters = !0;
      var h = Object.assign({}, u);
      h._skipSingleNestedGetters = !1;
      var f = t.transform,
          c = F(this._doc, u) || {};
      t.getters && (!function (t, e, r) {
        var n,
            i,
            o = t.$__schema,
            s = Object.keys(o.paths),
            a = s.length,
            u = t._doc;
        if (!u) return e;

        for (; a--;) {
          var h = (n = s[a]).split("."),
              f = h.length,
              c = f - 1,
              l = e,
              d = void 0;
          if (u = t._doc, t.$__isSelected(n)) for (var p = 0; p < f; ++p) {
            if (d = h[p], i = u[d], p === c) {
              var y = t.$get(n);
              l[d] = F(y, r);
            } else {
              if (null == i) {
                d in u && (l[d] = i);
                break;
              }

              l = l[d] || (l[d] = {});
            }

            u = i;
          }
        }
      }
      /*!
       * Applies schema type transforms to `json`.
       *
       * @param {Document} self
       * @param {Object} json
       * @return {Object} `json`
       */
      (this, c, h), t.minimize && (c =
      /*!
       * Minimizes an object, removing undefined values and empty objects
       *
       * @param {Object} object to minimize
       * @return {Object}
       */
      function t(e) {
        var r,
            n,
            i,
            o = Object.keys(e),
            s = o.length;

        for (; s--;) {
          n = o[s], i = e[n], q.isPOJO(i) && (e[n] = t(i)), void 0 !== e[n] ? r = !0 : delete e[n];
        }

        return r ? e : void 0;
      }(c) || {})), (t.virtuals || t.getters && !1 !== t.virtuals) && dt(this, c, h, t), !1 === t.versionKey && this.$__schema.options.versionKey && delete c[this.$__schema.options.versionKey];
      var l = t.transform;

      if (l && function (t, e) {
        var r = t.$__schema,
            n = Object.keys(r.paths || {});
        if (!t._doc) return e;

        for (var i = 0, o = n; i < o.length; i++) {
          var s = o[i],
              a = r.paths[s];

          if ("function" == typeof a.options.transform) {
            var u = t.$get(s),
                h = a.options.transform.call(t, u);
            pt(s, h), q.setValue(s, h, e);
          } else if (null != a.$embeddedSchemaType && "function" == typeof a.$embeddedSchemaType.options.transform) {
            for (var f = [].concat(t.$get(s)), c = a.$embeddedSchemaType.options.transform, l = 0; l < f.length; ++l) {
              var d = c.call(t, f[l]);
              f[l] = d, pt(s, d);
            }

            e[s] = f;
          }
        }
      }(this, c), t.useProjection && function (t, e) {
        var r = t.$__schema,
            n = Object.keys(r.paths || {});
        if (!t._doc) return e;
        var i = t.$__.selected;
        void 0 === i && (i = {}, L.applyPaths(i, r));
        if (null == i || 0 === Object.keys(i).length) return e;

        for (var o = 0, s = n; o < s.length; o++) {
          var a = s[o];
          null == i[a] || i[a] || delete e[a];
        }
      }(this, c), !0 === l || a.toObject && l) {
        var d = t.json ? a.toJSON : a.toObject;
        d && (l = "function" == typeof t.transform ? t.transform : d.transform);
      } else t.transform = f;

      if ("function" == typeof l) {
        var p = l(this, c, t);
        void 0 !== p && (c = p);
      }

      return c;
    }, nt.prototype.toObject = function (t) {
      return this.$toObject(t);
    }, nt.prototype.toJSON = function (t) {
      return this.$toObject(t, !0);
    }, nt.prototype.ownerDocument = function () {
      return this;
    }, nt.prototype.parent = function () {
      return this.$isSubdocument || this.$__.wasPopulated ? this.$__.parent : this;
    }, nt.prototype.$parent = nt.prototype.parent, nt.prototype.inspect = function (t) {
      var e;
      q.isPOJO(t) && ((e = t).minimize = !1);
      var r = this.toObject(e);
      return null == r ? "MongooseDocument { " + r + " }" : r;
    }, I.custom && (
    /*!
      * Avoid Node deprecation warning DEP0079
      */
    nt.prototype[I.custom] = nt.prototype.inspect), nt.prototype.toString = function () {
      var t = this.inspect();
      return "string" == typeof t ? t : I(t);
    }, nt.prototype.equals = function (t) {
      if (!t) return !1;
      var e = this.$__getValue("_id"),
          r = null != t.$__ ? t.$__getValue("_id") : t;
      return e || r ? e && e.equals ? e.equals(r) : e === r : z(this, t);
    }, nt.prototype.populate = function () {
      var t,
          e = {},
          r = q.args(arguments);

      if (r.length > 0) {
        "function" == typeof r[r.length - 1] && (t = r.pop());
        var n,
            o = q.populate.apply(null, r),
            s = i(o);

        try {
          for (s.s(); !(n = s.n()).done;) {
            var a = n.value;
            e[a.path] = a;
          }
        } catch (t) {
          s.e(t);
        } finally {
          s.f();
        }
      }

      var u = q.object.vals(e),
          h = this.constructor;

      if (this.$__isNested) {
        h = this.$__[X].constructor;
        var f = this.$__.nestedPath;
        u.forEach(function (t) {
          t.path = f + "." + t.path;
        });
      }

      if (null != this.$session()) {
        var c = this.$session();
        u.forEach(function (t) {
          null != t.options ? "session" in t.options || (t.options.session = c) : t.options = {
            session: c
          };
        });
      }

      return u.forEach(function (t) {
        t._localModel = h;
      }), h.populate(this, u, t);
    }, nt.prototype.$getPopulatedDocs = function () {
      var t = [];
      null != this.$__.populated && (t = t.concat(Object.keys(this.$__.populated)));
      var e,
          r = [],
          n = i(t);

      try {
        for (n.s(); !(e = n.n()).done;) {
          var o = e.value,
              s = this.$get(o);
          Array.isArray(s) ? r = r.concat(s) : s instanceof nt && r.push(s);
        }
      } catch (t) {
        n.e(t);
      } finally {
        n.f();
      }

      return r;
    }, nt.prototype.populated = function (t, e, r) {
      if (null == e || !0 === e) {
        if (!this.$__.populated) return;
        if ("string" != typeof t) return;
        var n = t.endsWith(".$*") ? t.replace(/\.\$\*$/, "") : t,
            i = this.$__.populated[n];
        return i ? !0 === e ? i : i.value : void 0;
      }

      this.$__.populated || (this.$__.populated = {}), this.$__.populated[t] = {
        value: e,
        options: r
      };

      for (var o = t.split("."), s = 0; s < o.length - 1; ++s) {
        var a = o.slice(0, s + 1).join("."),
            u = this.$get(a);

        if (null != u && null != u.$__ && this.$populated(a)) {
          var h = o.slice(s + 1).join(".");
          u.$populated(h, e, r);
          break;
        }
      }

      return e;
    }, nt.prototype.$populated = nt.prototype.populated, nt.prototype.depopulate = function (t) {
      var e;
      "string" == typeof t && (t = -1 === t.indexOf(" ") ? [t] : t.split(" "));
      var r = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [],
          n = k(this, "$__.populated", {});

      if (0 === arguments.length) {
        var o,
            s = i(r);

        try {
          for (s.s(); !(o = s.n()).done;) {
            var a = o.value;
            delete this.$$populatedVirtuals[a], delete this._doc[a], delete n[a];
          }
        } catch (t) {
          s.e(t);
        } finally {
          s.f();
        }

        for (var u = Object.keys(n), h = 0, f = u; h < f.length; h++) {
          var c = f[h];
          (e = this.$populated(c)) && (delete n[c], q.setValue(c, e, this._doc));
        }

        return this;
      }

      var l,
          d = i(t);

      try {
        for (d.s(); !(l = d.n()).done;) {
          var p = l.value;
          e = this.$populated(p), delete n[p], -1 !== r.indexOf(p) ? (delete this.$$populatedVirtuals[p], delete this._doc[p]) : e && q.setValue(p, e, this._doc);
        }
      } catch (t) {
        d.e(t);
      } finally {
        d.f();
      }

      return this;
    }, nt.prototype.$__fullPath = function (t) {
      return t || "";
    }, nt.prototype.getChanges = function () {
      var t = this.$__delta();
      return t ? t[1] : {};
    },
    /*!
     * Module exports.
     */
    nt.ValidationError = g, t.exports = nt;
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function i(t, e, r) {
      return e && n(t.prototype, e), r && n(t, r), Object.defineProperty(t, "prototype", {
        writable: !1
      }), t;
    }

    var o = r(44),
        s = i(function t(e) {
      if (function (t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
      }(this, t), null == e) return this;
      Object.assign(this, o(e));
    }),
        a = r(16);
    Object.defineProperty(s.prototype, "type", a), Object.defineProperty(s.prototype, "validate", a), Object.defineProperty(s.prototype, "cast", a), Object.defineProperty(s.prototype, "required", a), Object.defineProperty(s.prototype, "default", a), Object.defineProperty(s.prototype, "ref", a), Object.defineProperty(s.prototype, "select", a), Object.defineProperty(s.prototype, "index", a), Object.defineProperty(s.prototype, "unique", a), Object.defineProperty(s.prototype, "immutable", a), Object.defineProperty(s.prototype, "sparse", a), Object.defineProperty(s.prototype, "text", a), Object.defineProperty(s.prototype, "transform", a), t.exports = s;
  }, function (t, e, r) {
    "use strict";

    t.exports = Object.freeze({
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    });
  }, function (t, e, r) {
    "use strict";

    var n = r(12),
        i = r(0);

    function o(t, e) {
      return 55296 == (64512 & t.charCodeAt(e)) && !(e < 0 || e + 1 >= t.length) && 56320 == (64512 & t.charCodeAt(e + 1));
    }

    function s(t) {
      return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0;
    }

    function a(t) {
      return 1 === t.length ? "0" + t : t;
    }

    function u(t) {
      return 7 === t.length ? "0" + t : 6 === t.length ? "00" + t : 5 === t.length ? "000" + t : 4 === t.length ? "0000" + t : 3 === t.length ? "00000" + t : 2 === t.length ? "000000" + t : 1 === t.length ? "0000000" + t : t;
    }

    e.inherits = i, e.toArray = function (t, e) {
      if (Array.isArray(t)) return t.slice();
      if (!t) return [];
      var r = [];
      if ("string" == typeof t) {
        if (e) {
          if ("hex" === e) for ((t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t), i = 0; i < t.length; i += 2) {
            r.push(parseInt(t[i] + t[i + 1], 16));
          }
        } else for (var n = 0, i = 0; i < t.length; i++) {
          var s = t.charCodeAt(i);
          s < 128 ? r[n++] = s : s < 2048 ? (r[n++] = s >> 6 | 192, r[n++] = 63 & s | 128) : o(t, i) ? (s = 65536 + ((1023 & s) << 10) + (1023 & t.charCodeAt(++i)), r[n++] = s >> 18 | 240, r[n++] = s >> 12 & 63 | 128, r[n++] = s >> 6 & 63 | 128, r[n++] = 63 & s | 128) : (r[n++] = s >> 12 | 224, r[n++] = s >> 6 & 63 | 128, r[n++] = 63 & s | 128);
        }
      } else for (i = 0; i < t.length; i++) {
        r[i] = 0 | t[i];
      }
      return r;
    }, e.toHex = function (t) {
      for (var e = "", r = 0; r < t.length; r++) {
        e += a(t[r].toString(16));
      }

      return e;
    }, e.htonl = s, e.toHex32 = function (t, e) {
      for (var r = "", n = 0; n < t.length; n++) {
        var i = t[n];
        "little" === e && (i = s(i)), r += u(i.toString(16));
      }

      return r;
    }, e.zero2 = a, e.zero8 = u, e.join32 = function (t, e, r, i) {
      var o = r - e;
      n(o % 4 == 0);

      for (var s = new Array(o / 4), a = 0, u = e; a < s.length; a++, u += 4) {
        var h;
        h = "big" === i ? t[u] << 24 | t[u + 1] << 16 | t[u + 2] << 8 | t[u + 3] : t[u + 3] << 24 | t[u + 2] << 16 | t[u + 1] << 8 | t[u], s[a] = h >>> 0;
      }

      return s;
    }, e.split32 = function (t, e) {
      for (var r = new Array(4 * t.length), n = 0, i = 0; n < t.length; n++, i += 4) {
        var o = t[n];
        "big" === e ? (r[i] = o >>> 24, r[i + 1] = o >>> 16 & 255, r[i + 2] = o >>> 8 & 255, r[i + 3] = 255 & o) : (r[i + 3] = o >>> 24, r[i + 2] = o >>> 16 & 255, r[i + 1] = o >>> 8 & 255, r[i] = 255 & o);
      }

      return r;
    }, e.rotr32 = function (t, e) {
      return t >>> e | t << 32 - e;
    }, e.rotl32 = function (t, e) {
      return t << e | t >>> 32 - e;
    }, e.sum32 = function (t, e) {
      return t + e >>> 0;
    }, e.sum32_3 = function (t, e, r) {
      return t + e + r >>> 0;
    }, e.sum32_4 = function (t, e, r, n) {
      return t + e + r + n >>> 0;
    }, e.sum32_5 = function (t, e, r, n, i) {
      return t + e + r + n + i >>> 0;
    }, e.sum64 = function (t, e, r, n) {
      var i = t[e],
          o = n + t[e + 1] >>> 0,
          s = (o < n ? 1 : 0) + r + i;
      t[e] = s >>> 0, t[e + 1] = o;
    }, e.sum64_hi = function (t, e, r, n) {
      return (e + n >>> 0 < e ? 1 : 0) + t + r >>> 0;
    }, e.sum64_lo = function (t, e, r, n) {
      return e + n >>> 0;
    }, e.sum64_4_hi = function (t, e, r, n, i, o, s, a) {
      var u = 0,
          h = e;
      return u += (h = h + n >>> 0) < e ? 1 : 0, u += (h = h + o >>> 0) < o ? 1 : 0, t + r + i + s + (u += (h = h + a >>> 0) < a ? 1 : 0) >>> 0;
    }, e.sum64_4_lo = function (t, e, r, n, i, o, s, a) {
      return e + n + o + a >>> 0;
    }, e.sum64_5_hi = function (t, e, r, n, i, o, s, a, u, h) {
      var f = 0,
          c = e;
      return f += (c = c + n >>> 0) < e ? 1 : 0, f += (c = c + o >>> 0) < o ? 1 : 0, f += (c = c + a >>> 0) < a ? 1 : 0, t + r + i + s + u + (f += (c = c + h >>> 0) < h ? 1 : 0) >>> 0;
    }, e.sum64_5_lo = function (t, e, r, n, i, o, s, a, u, h) {
      return e + n + o + a + h >>> 0;
    }, e.rotr64_hi = function (t, e, r) {
      return (e << 32 - r | t >>> r) >>> 0;
    }, e.rotr64_lo = function (t, e, r) {
      return (t << 32 - r | e >>> r) >>> 0;
    }, e.shr64_hi = function (t, e, r) {
      return t >>> r;
    }, e.shr64_lo = function (t, e, r) {
      return (t << 32 - r | e >>> r) >>> 0;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(24).get().ObjectId,
        i = r(1).objectIdSymbol;
    /*!
     * Getter for convenience with populate, see gh-6115
     */

    Object.defineProperty(n.prototype, "_id", {
      enumerable: !1,
      configurable: !0,
      get: function get() {
        return this;
      }
    }),
    /*!
     * Convenience `valueOf()` to allow comparing ObjectIds using double equals re: gh-7299
     */
    n.prototype.hasOwnProperty("valueOf") || (n.prototype.valueOf = function () {
      return this.toString();
    }), n.prototype[i] = !0, t.exports = n;
  }, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(252).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
            var a = t.charCodeAt(s) - 48;
            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
          }

          return i;
        }

        s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this.strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }
          this.strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this.strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype.strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, s.prototype.inspect = function () {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var c = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

        function p(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
        }

        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = l[t],
                f = d[t];
            r = "";
            var p = this.clone();

            for (p.negative = 0; !p.isZero();) {
              var y = p.modn(f).toString(t);
              r = (p = p.idivn(f)).isZero() ? y + r : c[h - y.length] + y + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16);
        }, s.prototype.toBuffer = function (t, e) {
          return i(void 0 !== a), this.toArrayLike(a, t, e);
        }, s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        }, s.prototype.toArrayLike = function (t, e, r) {
          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0"), this.strip();
          var s,
              a,
              u = "le" === e,
              h = new t(o),
              f = this.clone();

          if (u) {
            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[a] = s;
            }

            for (; a < o; a++) {
              h[a] = 0;
            }
          } else {
            for (a = 0; a < o - n; a++) {
              h[a] = 0;
            }

            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
            }
          }

          return h;
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this.strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this.strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this.strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var y = function y(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function m(t, e, r) {
          return new b().mulp(t, e, r);
        }

        function b(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (y = p), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? y(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? function (t, e, r) {
            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

            for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
              var s = i;
              i = 0;

              for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                var f = o - h,
                    c = (0 | t.words[f]) * (0 | e.words[h]),
                    l = 67108863 & c;
                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
              }

              r.words[o] = a, n = s, s = i;
            }

            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
          }(this, t, e) : m(this, t, e);
        }, b.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, b.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, b.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, b.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, b.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, b.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, b.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, b.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, b.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, b.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), m(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          i("number" == typeof t), i(t < 67108864);

          for (var e = 0, r = 0; r < this.length; r++) {
            var n = (0 | this.words[r]) * t,
                o = (67108863 & n) + (67108863 & e);
            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
          }

          return 0 !== e && (this.words[r] = e, this.length++), this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = (t.words[n] & 1 << i) >>> i;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this.strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this.strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this.strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this.strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this.strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modn = function (t) {
          i(t <= 67108863);

          for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) {
            r = (e * r + (0 | this.words[n])) % t;
          }

          return r;
        }, s.prototype.idivn = function (t) {
          i(t <= 67108863);

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = (0 | this.words[r]) + 67108864 * e;
            this.words[r] = n / t | 0, e = n % t;
          }

          return this.strip();
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this.strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new O(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var v = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function g(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function w() {
          g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function _() {
          g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function M() {
          g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function S() {
          g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function O(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function A(t) {
          O.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        g.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, g.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, g.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, g.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(w, g), w.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, w.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(_, g), o(M, g), o(S, g), S.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (v[t]) return v[t];
          var e;
          if ("k256" === t) e = new w();else if ("p224" === t) e = new _();else if ("p192" === t) e = new M();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new S();
          }
          return v[t] = e, e;
        }, O.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, O.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, O.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
        }, O.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, O.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, O.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, O.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, O.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, O.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, O.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, O.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, O.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, O.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, O.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, O.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, O.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, O.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, O.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new A(t);
        }, o(A, O), A.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, A.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, A.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function a(t) {
      var e = "function" == typeof Map ? new Map() : void 0;
      return (a = function a(t) {
        if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t;
        var r;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");

        if (void 0 !== e) {
          if (e.has(t)) return e.get(t);
          e.set(t, n);
        }

        function n() {
          return u(t, arguments, c(this).constructor);
        }

        return n.prototype = Object.create(t.prototype, {
          constructor: {
            value: n,
            enumerable: !1,
            writable: !0,
            configurable: !0
          }
        }), f(n, t);
      })(t);
    }

    function u(t, e, r) {
      return (u = h() ? Reflect.construct : function (t, e, r) {
        var n = [null];
        n.push.apply(n, e);
        var i = new (Function.bind.apply(t, n))();
        return r && f(i, r.prototype), i;
      }).apply(null, arguments);
    }

    function h() {
      if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ("function" == typeof Proxy) return !0;

      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }

    function f(t, e) {
      return (f = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function c(t) {
      return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var l = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && f(t, e);
      }(d, t);
      var e,
          r,
          n,
          a,
          u,
          l = (e = d, r = h(), function () {
        var t,
            n = c(e);

        if (r) {
          var i = c(this).constructor;
          t = Reflect.construct(n, arguments, i);
        } else t = n.apply(this, arguments);

        return s(this, t);
      });

      function d() {
        return o(this, d), l.apply(this, arguments);
      }

      return n = d, a && i(n.prototype, a), u && i(n, u), Object.defineProperty(n, "prototype", {
        writable: !1
      }), n;
    }(a(Error));

    Object.defineProperty(l.prototype, "name", {
      value: "MongooseError"
    }), t.exports = l;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function o(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = r(20),
        c = r(6),
        l = r(9),
        d = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(f, t);
      var e,
          r,
          n,
          h = a(f);

      function f(t, e, r, n, o) {
        var s;

        if (i(this, f), arguments.length > 0) {
          var a = p(e),
              c = y(e),
              l = m(o),
              d = b(null, t, a, r, l, c);
          (s = h.call(this, d)).init(t, e, r, n, o);
        } else s = h.call(this, b());

        return u(s);
      }

      return e = f, (r = [{
        key: "toJSON",
        value: function value() {
          return {
            stringValue: this.stringValue,
            valueType: this.valueType,
            kind: this.kind,
            value: this.value,
            path: this.path,
            reason: this.reason,
            name: this.name,
            message: this.message
          };
        }
        /*!
             * ignore
             */

      }, {
        key: "init",
        value: function value(t, e, r, n, i) {
          this.stringValue = p(e), this.messageFormat = m(i), this.kind = t, this.value = e, this.path = r, this.reason = n, this.valueType = y(e);
        }
        /*!
             * ignore
             * @param {Readonly<CastError>} other
             */

      }, {
        key: "copy",
        value: function value(t) {
          this.messageFormat = t.messageFormat, this.stringValue = t.stringValue, this.kind = t.kind, this.value = t.value, this.path = t.path, this.reason = t.reason, this.message = t.message, this.valueType = t.valueType;
        }
        /*!
             * ignore
             */

      }, {
        key: "setModel",
        value: function value(t) {
          this.model = t, this.message = b(t, this.kind, this.stringValue, this.path, this.messageFormat, this.valueType);
        }
      }]) && o(e.prototype, r), n && o(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), f;
    }(f);

    function p(t) {
      var e = l.inspect(t);
      return (e = e.replace(/^'|'$/g, '"')).startsWith('"') || (e = '"' + e + '"'), e;
    }

    function y(t) {
      if (null == t) return "" + t;
      var e = n(t);
      return "object" !== e || "function" != typeof t.constructor ? e : t.constructor.name;
    }

    function m(t) {
      var e = c(t, "options.cast", null);
      if ("string" == typeof e) return e;
    }
    /*!
     * ignore
     */


    function b(t, e, r, n, i, o) {
      if (null != i) {
        var s = i.replace("{KIND}", e).replace("{VALUE}", r).replace("{PATH}", n);
        return null != t && (s = s.replace("{MODEL}", t.modelName)), s;
      }

      var a = "Cast to " + e + " failed for value " + r + (o ? " (type " + o + ")" : "") + ' at path "' + n + '"';
      return null != t && (a += ' for model "' + t.modelName + '"'), a;
    }
    /*!
     * exports
     */


    Object.defineProperty(d.prototype, "name", {
      value: "CastError"
    }), t.exports = d;
  }, function (t, e, r) {
    var n = r(2).Buffer,
        i = r(205).Transform,
        o = r(25).StringDecoder;

    function s(t) {
      i.call(this), this.hashMode = "string" == typeof t, this.hashMode ? this[t] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
    }

    r(0)(s, i), s.prototype.update = function (t, e, r) {
      "string" == typeof t && (t = n.from(t, e));

      var i = this._update(t);

      return this.hashMode ? this : (r && (i = this._toString(i, r)), i);
    }, s.prototype.setAutoPadding = function () {}, s.prototype.getAuthTag = function () {
      throw new Error("trying to get auth tag in unsupported state");
    }, s.prototype.setAuthTag = function () {
      throw new Error("trying to set auth tag in unsupported state");
    }, s.prototype.setAAD = function () {
      throw new Error("trying to set aad in unsupported state");
    }, s.prototype._transform = function (t, e, r) {
      var n;

      try {
        this.hashMode ? this._update(t) : this.push(this._update(t));
      } catch (t) {
        n = t;
      } finally {
        r(n);
      }
    }, s.prototype._flush = function (t) {
      var e;

      try {
        this.push(this.__final());
      } catch (t) {
        e = t;
      }

      t(e);
    }, s.prototype._finalOrDigest = function (t) {
      var e = this.__final() || n.alloc(0);
      return t && (e = this._toString(e, t, !0)), e;
    }, s.prototype._toString = function (t, e, r) {
      if (this._decoder || (this._decoder = new o(e), this._encoding = e), this._encoding !== e) throw new Error("can't switch encodings");

      var n = this._decoder.write(t);

      return r && (n += this._decoder.end()), n;
    }, t.exports = s;
  }, function (t, e) {
    t.exports = function (t) {
      return t.webpackPolyfill || (t.deprecate = function () {}, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, "loaded", {
        enumerable: !0,
        get: function get() {
          return t.l;
        }
      }), Object.defineProperty(t, "id", {
        enumerable: !0,
        get: function get() {
          return t.i;
        }
      }), t.webpackPolyfill = 1), t;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    var n = null;
    t.exports.get = function () {
      return n;
    }, t.exports.set = function (t) {
      n = t;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(196).Buffer,
        i = n.isEncoding || function (t) {
      switch ((t = "" + t) && t.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return !0;

        default:
          return !1;
      }
    };

    function o(t) {
      var e;

      switch (this.encoding = function (t) {
        var e = function (t) {
          if (!t) return "utf8";

          for (var e;;) {
            switch (t) {
              case "utf8":
              case "utf-8":
                return "utf8";

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return "utf16le";

              case "latin1":
              case "binary":
                return "latin1";

              case "base64":
              case "ascii":
              case "hex":
                return t;

              default:
                if (e) return;
                t = ("" + t).toLowerCase(), e = !0;
            }
          }
        }(t);

        if ("string" != typeof e && (n.isEncoding === i || !i(t))) throw new Error("Unknown encoding: " + t);
        return e || t;
      }(t), this.encoding) {
        case "utf16le":
          this.text = u, this.end = h, e = 4;
          break;

        case "utf8":
          this.fillLast = a, e = 4;
          break;

        case "base64":
          this.text = f, this.end = c, e = 3;
          break;

        default:
          return this.write = l, void (this.end = d);
      }

      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(e);
    }

    function s(t) {
      return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : t >> 6 == 2 ? -1 : -2;
    }

    function a(t) {
      var e = this.lastTotal - this.lastNeed,
          r = function (t, e, r) {
        if (128 != (192 & e[0])) return t.lastNeed = 0, "ï¿½";

        if (t.lastNeed > 1 && e.length > 1) {
          if (128 != (192 & e[1])) return t.lastNeed = 1, "ï¿½";
          if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2])) return t.lastNeed = 2, "ï¿½";
        }
      }(this, t);

      return void 0 !== r ? r : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), void (this.lastNeed -= t.length));
    }

    function u(t, e) {
      if ((t.length - e) % 2 == 0) {
        var r = t.toString("utf16le", e);

        if (r) {
          var n = r.charCodeAt(r.length - 1);
          if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], r.slice(0, -1);
        }

        return r;
      }

      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1);
    }

    function h(t) {
      var e = t && t.length ? this.write(t) : "";

      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed;
        return e + this.lastChar.toString("utf16le", 0, r);
      }

      return e;
    }

    function f(t, e) {
      var r = (t.length - e) % 3;
      return 0 === r ? t.toString("base64", e) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - r));
    }

    function c(t) {
      var e = t && t.length ? this.write(t) : "";
      return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e;
    }

    function l(t) {
      return t.toString(this.encoding);
    }

    function d(t) {
      return t && t.length ? this.write(t) : "";
    }

    e.StringDecoder = o, o.prototype.write = function (t) {
      if (0 === t.length) return "";
      var e, r;

      if (this.lastNeed) {
        if (void 0 === (e = this.fillLast(t))) return "";
        r = this.lastNeed, this.lastNeed = 0;
      } else r = 0;

      return r < t.length ? e ? e + this.text(t, r) : this.text(t, r) : e || "";
    }, o.prototype.end = function (t) {
      var e = t && t.length ? this.write(t) : "";
      return this.lastNeed ? e + "ï¿½" : e;
    }, o.prototype.text = function (t, e) {
      var r = function (t, e, r) {
        var n = e.length - 1;
        if (n < r) return 0;
        var i = s(e[n]);
        if (i >= 0) return i > 0 && (t.lastNeed = i - 1), i;
        if (--n < r || -2 === i) return 0;
        if ((i = s(e[n])) >= 0) return i > 0 && (t.lastNeed = i - 2), i;
        if (--n < r || -2 === i) return 0;
        if ((i = s(e[n])) >= 0) return i > 0 && (2 === i ? i = 0 : t.lastNeed = i - 3), i;
        return 0;
      }(this, t, e);

      if (!this.lastNeed) return t.toString("utf8", e);
      this.lastTotal = r;
      var n = t.length - (r - this.lastNeed);
      return t.copy(this.lastChar, 0, n), t.toString("utf8", e, n);
    }, o.prototype.fillLast = function (t) {
      if (this.lastNeed <= t.length) return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(48),
        i = Object.keys || function (t) {
      var e = [];

      for (var r in t) {
        e.push(r);
      }

      return e;
    };

    t.exports = c;
    var o = Object.create(r(40));
    o.inherits = r(0);
    var s = r(107),
        a = r(68);
    o.inherits(c, s);

    for (var u = i(a.prototype), h = 0; h < u.length; h++) {
      var f = u[h];
      c.prototype[f] || (c.prototype[f] = a.prototype[f]);
    }

    function c(t) {
      if (!(this instanceof c)) return new c(t);
      s.call(this, t), a.call(this, t), t && !1 === t.readable && (this.readable = !1), t && !1 === t.writable && (this.writable = !1), this.allowHalfOpen = !0, t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1), this.once("end", l);
    }

    function l() {
      this.allowHalfOpen || this._writableState.ended || n.nextTick(d, this);
    }

    function d(t) {
      t.end();
    }

    Object.defineProperty(c.prototype, "writableHighWaterMark", {
      enumerable: !1,
      get: function get() {
        return this._writableState.highWaterMark;
      }
    }), Object.defineProperty(c.prototype, "destroyed", {
      get: function get() {
        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
      },
      set: function set(t) {
        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
      }
    }), c.prototype._destroy = function (t, e) {
      this.push(null), this.end(), n.nextTick(e, t);
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t, e, r) {
      return e in t ? Object.defineProperty(t, e, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = r, t;
    }

    var i = r(93),
        o = r(339),
        s = r(14),
        a = r(1).arrayAtomicsSymbol,
        u = r(1).arrayAtomicsBackupSymbol,
        h = r(1).arrayParentSymbol,
        f = r(1).arrayPathSymbol,
        c = r(1).arraySchemaSymbol,
        l = Array.prototype.push;

    function d(t, e, r) {
      var n = this.__array;
      if (r) return n[t] = e, n;

      var i = o._cast.call(this, e, t);

      return n[t] = i, o._markModified.call(this, t), n;
    }
    /*!
     * Module exports.
     */


    t.exports = function (t, e, r) {
      var p,
          y = [],
          m = (n(p = {}, a, {}), n(p, u, void 0), n(p, f, e), n(p, c, void 0), n(p, h, void 0), p);
      if (Array.isArray(t) && (t[f] === e && t[h] === r && (m[a] = Object.assign({}, t[a])), t.forEach(function (t) {
        l.call(y, t);
      })), m[f] = e, r && r instanceof s) for (m[h] = r, m[c] = r.schema.path(e); null != m[c] && m[c].$isMongooseArray && !m[c].$isMongooseDocumentArray;) {
        m[c] = m[c].casterConstructor;
      }
      var b = new Proxy(y, {
        get: function get(t, e) {
          return "isMongooseArray" === e || "isMongooseArrayProxy" === e || "isMongooseDocumentArray" === e || "isMongooseDocumentArrayProxy" === e || ("__array" === e ? y : "set" === e ? d : m.hasOwnProperty(e) ? m[e] : o.hasOwnProperty(e) ? o[e] : i.hasOwnProperty(e) ? i[e] : y[e]);
        },
        set: function set(t, e, r) {
          return "string" == typeof e && /^\d+$/.test(e) ? d.call(b, e, r) : m.hasOwnProperty(e) ? m[e] = r : y[e] = r, !0;
        }
      });
      return b;
    };
  }, function (t, e, r) {
    "use strict";

    (function (e, n) {
      var i = r(2).Buffer,
          o = e.crypto || e.msCrypto;
      o && o.getRandomValues ? t.exports = function (t, e) {
        if (t > 4294967295) throw new RangeError("requested too many random bytes");
        var r = i.allocUnsafe(t);
        if (t > 0) if (t > 65536) for (var s = 0; s < t; s += 65536) {
          o.getRandomValues(r.slice(s, s + 65536));
        } else o.getRandomValues(r);
        if ("function" == typeof e) return n.nextTick(function () {
          e(null, r);
        });
        return r;
      } : t.exports = function () {
        throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
      };
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = {};

    function o(t, e, r) {
      r || (r = Error);

      var n = function (t) {
        var r, n;

        function i(r, n, i) {
          return t.call(this, function (t, r, n) {
            return "string" == typeof e ? e : e(t, r, n);
          }(r, n, i)) || this;
        }

        return n = t, (r = i).prototype = Object.create(n.prototype), r.prototype.constructor = r, r.__proto__ = n, i;
      }(r);

      n.prototype.name = r.name, n.prototype.code = t, i[t] = n;
    }

    function s(t, e) {
      if (Array.isArray(t)) {
        var r = t.length;
        return t = t.map(function (t) {
          return String(t);
        }), r > 2 ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : 2 === r ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
      }

      return "of ".concat(e, " ").concat(String(t));
    }

    o("ERR_INVALID_OPT_VALUE", function (t, e) {
      return 'The value "' + e + '" is invalid for option "' + t + '"';
    }, TypeError), o("ERR_INVALID_ARG_TYPE", function (t, e, r) {
      var i, o, a, u;
      if ("string" == typeof e && (o = "not ", e.substr(!a || a < 0 ? 0 : +a, o.length) === o) ? (i = "must not be", e = e.replace(/^not /, "")) : i = "must be", function (t, e, r) {
        return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e;
      }(t, " argument")) u = "The ".concat(t, " ").concat(i, " ").concat(s(e, "type"));else {
        var h = function (t, e, r) {
          return "number" != typeof r && (r = 0), !(r + e.length > t.length) && -1 !== t.indexOf(e, r);
        }(t, ".") ? "property" : "argument";
        u = 'The "'.concat(t, '" ').concat(h, " ").concat(i, " ").concat(s(e, "type"));
      }
      return u += ". Received type ".concat(n(r));
    }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function (t) {
      return "The " + t + " method is not implemented";
    }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function (t) {
      return "Cannot call " + t + " after a stream was destroyed";
    }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function (t) {
      return "Unknown encoding: " + t;
    }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t.exports.codes = i;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      var n = Object.keys || function (t) {
        var e = [];

        for (var r in t) {
          e.push(r);
        }

        return e;
      };

      t.exports = h;
      var i = r(99),
          o = r(103);
      r(0)(h, i);

      for (var s = n(o.prototype), a = 0; a < s.length; a++) {
        var u = s[a];
        h.prototype[u] || (h.prototype[u] = o.prototype[u]);
      }

      function h(t) {
        if (!(this instanceof h)) return new h(t);
        i.call(this, t), o.call(this, t), this.allowHalfOpen = !0, t && (!1 === t.readable && (this.readable = !1), !1 === t.writable && (this.writable = !1), !1 === t.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", f)));
      }

      function f() {
        this._writableState.ended || e.nextTick(c, this);
      }

      function c(t) {
        t.end();
      }

      Object.defineProperty(h.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      }), Object.defineProperty(h.prototype, "writableBuffer", {
        enumerable: !1,
        get: function get() {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(h.prototype, "writableLength", {
        enumerable: !1,
        get: function get() {
          return this._writableState.length;
        }
      }), Object.defineProperty(h.prototype, "destroyed", {
        enumerable: !1,
        get: function get() {
          return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
        },
        set: function set(t) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
        }
      });
    }).call(this, r(5));
  }, function (t, e, r) {
    var n = r(2).Buffer;

    function i(t, e) {
      this._block = n.alloc(t), this._finalSize = e, this._blockSize = t, this._len = 0;
    }

    i.prototype.update = function (t, e) {
      "string" == typeof t && (e = e || "utf8", t = n.from(t, e));

      for (var r = this._block, i = this._blockSize, o = t.length, s = this._len, a = 0; a < o;) {
        for (var u = s % i, h = Math.min(o - a, i - u), f = 0; f < h; f++) {
          r[u + f] = t[a + f];
        }

        a += h, (s += h) % i == 0 && this._update(r);
      }

      return this._len += o, this;
    }, i.prototype.digest = function (t) {
      var e = this._len % this._blockSize;
      this._block[e] = 128, this._block.fill(0, e + 1), e >= this._finalSize && (this._update(this._block), this._block.fill(0));
      var r = 8 * this._len;
      if (r <= 4294967295) this._block.writeUInt32BE(r, this._blockSize - 4);else {
        var n = (4294967295 & r) >>> 0,
            i = (r - n) / 4294967296;
        this._block.writeUInt32BE(i, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4);
      }

      this._update(this._block);

      var o = this._hash();

      return t ? o.toString(t) : o;
    }, i.prototype._update = function () {
      throw new Error("_update must be implemented by subclass");
    }, t.exports = i;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = {};

    function o(t, e, r) {
      r || (r = Error);

      var n = function (t) {
        var r, n;

        function i(r, n, i) {
          return t.call(this, function (t, r, n) {
            return "string" == typeof e ? e : e(t, r, n);
          }(r, n, i)) || this;
        }

        return n = t, (r = i).prototype = Object.create(n.prototype), r.prototype.constructor = r, r.__proto__ = n, i;
      }(r);

      n.prototype.name = r.name, n.prototype.code = t, i[t] = n;
    }

    function s(t, e) {
      if (Array.isArray(t)) {
        var r = t.length;
        return t = t.map(function (t) {
          return String(t);
        }), r > 2 ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : 2 === r ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
      }

      return "of ".concat(e, " ").concat(String(t));
    }

    o("ERR_INVALID_OPT_VALUE", function (t, e) {
      return 'The value "' + e + '" is invalid for option "' + t + '"';
    }, TypeError), o("ERR_INVALID_ARG_TYPE", function (t, e, r) {
      var i, o, a, u;
      if ("string" == typeof e && (o = "not ", e.substr(!a || a < 0 ? 0 : +a, o.length) === o) ? (i = "must not be", e = e.replace(/^not /, "")) : i = "must be", function (t, e, r) {
        return (void 0 === r || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e;
      }(t, " argument")) u = "The ".concat(t, " ").concat(i, " ").concat(s(e, "type"));else {
        var h = function (t, e, r) {
          return "number" != typeof r && (r = 0), !(r + e.length > t.length) && -1 !== t.indexOf(e, r);
        }(t, ".") ? "property" : "argument";
        u = 'The "'.concat(t, '" ').concat(h, " ").concat(i, " ").concat(s(e, "type"));
      }
      return u += ". Received type ".concat(n(r));
    }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function (t) {
      return "The " + t + " method is not implemented";
    }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function (t) {
      return "Cannot call " + t + " after a stream was destroyed";
    }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function (t) {
      return "Unknown encoding: " + t;
    }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t.exports.codes = i;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      var n = Object.keys || function (t) {
        var e = [];

        for (var r in t) {
          e.push(r);
        }

        return e;
      };

      t.exports = h;
      var i = r(130),
          o = r(134);
      r(0)(h, i);

      for (var s = n(o.prototype), a = 0; a < s.length; a++) {
        var u = s[a];
        h.prototype[u] || (h.prototype[u] = o.prototype[u]);
      }

      function h(t) {
        if (!(this instanceof h)) return new h(t);
        i.call(this, t), o.call(this, t), this.allowHalfOpen = !0, t && (!1 === t.readable && (this.readable = !1), !1 === t.writable && (this.writable = !1), !1 === t.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", f)));
      }

      function f() {
        this._writableState.ended || e.nextTick(c, this);
      }

      function c(t) {
        t.end();
      }

      Object.defineProperty(h.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      }), Object.defineProperty(h.prototype, "writableBuffer", {
        enumerable: !1,
        get: function get() {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(h.prototype, "writableLength", {
        enumerable: !1,
        get: function get() {
          return this._writableState.length;
        }
      }), Object.defineProperty(h.prototype, "destroyed", {
        enumerable: !1,
        get: function get() {
          return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
        },
        set: function set(t) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
        }
      });
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";

    t.exports = r(24).get().Decimal128;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * Determines if `arg` is an object.
       *
       * @param {Object|Array|String|Function|RegExp|any} arg
       * @api private
       * @return {Boolean}
       */
      t.exports = function (t) {
        return !!e.isBuffer(t) || "[object Object]" === Object.prototype.toString.call(t);
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var i = r(298);
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
       * @license  MIT
       */

      function o(t, e) {
        if (t === e) return 0;

        for (var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i) {
          if (t[i] !== e[i]) {
            r = t[i], n = e[i];
            break;
          }
        }

        return r < n ? -1 : n < r ? 1 : 0;
      }

      function s(t) {
        return e.Buffer && "function" == typeof e.Buffer.isBuffer ? e.Buffer.isBuffer(t) : !(null == t || !t._isBuffer);
      }

      var a = r(9),
          u = Object.prototype.hasOwnProperty,
          h = Array.prototype.slice,
          f = "foo" === function () {}.name;

      function c(t) {
        return Object.prototype.toString.call(t);
      }

      function l(t) {
        return !s(t) && "function" == typeof e.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : !!t && (t instanceof DataView || !!(t.buffer && t.buffer instanceof ArrayBuffer)));
      }

      var d = t.exports = g,
          p = /\s*function\s+([^\(\s]*)\s*/;

      function y(t) {
        if (a.isFunction(t)) {
          if (f) return t.name;
          var e = t.toString().match(p);
          return e && e[1];
        }
      }

      function m(t, e) {
        return "string" == typeof t ? t.length < e ? t : t.slice(0, e) : t;
      }

      function b(t) {
        if (f || !a.isFunction(t)) return a.inspect(t);
        var e = y(t);
        return "[Function" + (e ? ": " + e : "") + "]";
      }

      function v(t, e, r, n, i) {
        throw new d.AssertionError({
          message: r,
          actual: t,
          expected: e,
          operator: n,
          stackStartFunction: i
        });
      }

      function g(t, e) {
        t || v(t, !0, e, "==", d.ok);
      }

      function w(t, e, r, i) {
        if (t === e) return !0;
        if (s(t) && s(e)) return 0 === o(t, e);
        if (a.isDate(t) && a.isDate(e)) return t.getTime() === e.getTime();
        if (a.isRegExp(t) && a.isRegExp(e)) return t.source === e.source && t.global === e.global && t.multiline === e.multiline && t.lastIndex === e.lastIndex && t.ignoreCase === e.ignoreCase;

        if (null !== t && "object" === n(t) || null !== e && "object" === n(e)) {
          if (l(t) && l(e) && c(t) === c(e) && !(t instanceof Float32Array || t instanceof Float64Array)) return 0 === o(new Uint8Array(t.buffer), new Uint8Array(e.buffer));
          if (s(t) !== s(e)) return !1;
          var u = (i = i || {
            actual: [],
            expected: []
          }).actual.indexOf(t);
          return -1 !== u && u === i.expected.indexOf(e) || (i.actual.push(t), i.expected.push(e), function (t, e, r, n) {
            if (null == t || null == e) return !1;
            if (a.isPrimitive(t) || a.isPrimitive(e)) return t === e;
            if (r && Object.getPrototypeOf(t) !== Object.getPrototypeOf(e)) return !1;

            var i = _(t),
                o = _(e);

            if (i && !o || !i && o) return !1;
            if (i) return t = h.call(t), e = h.call(e), w(t, e, r);
            var s,
                u,
                f = O(t),
                c = O(e);
            if (f.length !== c.length) return !1;

            for (f.sort(), c.sort(), u = f.length - 1; u >= 0; u--) {
              if (f[u] !== c[u]) return !1;
            }

            for (u = f.length - 1; u >= 0; u--) {
              if (s = f[u], !w(t[s], e[s], r, n)) return !1;
            }

            return !0;
          }(t, e, r, i));
        }

        return r ? t === e : t == e;
      }

      function _(t) {
        return "[object Arguments]" == Object.prototype.toString.call(t);
      }

      function M(t, e) {
        if (!t || !e) return !1;
        if ("[object RegExp]" == Object.prototype.toString.call(e)) return e.test(t);

        try {
          if (t instanceof e) return !0;
        } catch (t) {}

        return !Error.isPrototypeOf(e) && !0 === e.call({}, t);
      }

      function S(t, e, r, n) {
        var i;
        if ("function" != typeof e) throw new TypeError('"block" argument must be a function');
        "string" == typeof r && (n = r, r = null), i = function (t) {
          var e;

          try {
            t();
          } catch (t) {
            e = t;
          }

          return e;
        }(e), n = (r && r.name ? " (" + r.name + ")." : ".") + (n ? " " + n : "."), t && !i && v(i, r, "Missing expected exception" + n);
        var o = "string" == typeof n,
            s = !t && i && !r;
        if ((!t && a.isError(i) && o && M(i, r) || s) && v(i, r, "Got unwanted exception" + n), t && i && r && !M(i, r) || !t && i) throw i;
      }

      d.AssertionError = function (t) {
        this.name = "AssertionError", this.actual = t.actual, this.expected = t.expected, this.operator = t.operator, t.message ? (this.message = t.message, this.generatedMessage = !1) : (this.message = function (t) {
          return m(b(t.actual), 128) + " " + t.operator + " " + m(b(t.expected), 128);
        }(this), this.generatedMessage = !0);
        var e = t.stackStartFunction || v;
        if (Error.captureStackTrace) Error.captureStackTrace(this, e);else {
          var r = new Error();

          if (r.stack) {
            var n = r.stack,
                i = y(e),
                o = n.indexOf("\n" + i);

            if (o >= 0) {
              var s = n.indexOf("\n", o + 1);
              n = n.substring(s + 1);
            }

            this.stack = n;
          }
        }
      }, a.inherits(d.AssertionError, Error), d.fail = v, d.ok = g, d.equal = function (t, e, r) {
        t != e && v(t, e, r, "==", d.equal);
      }, d.notEqual = function (t, e, r) {
        t == e && v(t, e, r, "!=", d.notEqual);
      }, d.deepEqual = function (t, e, r) {
        w(t, e, !1) || v(t, e, r, "deepEqual", d.deepEqual);
      }, d.deepStrictEqual = function (t, e, r) {
        w(t, e, !0) || v(t, e, r, "deepStrictEqual", d.deepStrictEqual);
      }, d.notDeepEqual = function (t, e, r) {
        w(t, e, !1) && v(t, e, r, "notDeepEqual", d.notDeepEqual);
      }, d.notDeepStrictEqual = function t(e, r, n) {
        w(e, r, !0) && v(e, r, n, "notDeepStrictEqual", t);
      }, d.strictEqual = function (t, e, r) {
        t !== e && v(t, e, r, "===", d.strictEqual);
      }, d.notStrictEqual = function (t, e, r) {
        t === e && v(t, e, r, "!==", d.notStrictEqual);
      }, d.throws = function (t, e, r) {
        S(!0, t, e, r);
      }, d.doesNotThrow = function (t, e, r) {
        S(!1, t, e, r);
      }, d.ifError = function (t) {
        if (t) throw t;
      }, d.strict = i(function t(e, r) {
        e || v(e, !0, r, "==", t);
      }, d, {
        equal: d.strictEqual,
        deepEqual: d.deepStrictEqual,
        notEqual: d.notStrictEqual,
        notDeepEqual: d.notDeepStrictEqual
      }), d.strict.strict = d.strict;

      var O = Object.keys || function (t) {
        var e = [];

        for (var r in t) {
          u.call(t, r) && e.push(r);
        }

        return e;
      };
    }).call(this, r(7));
  }, function (t, e, r) {
    "use strict";
    /*!
     * If `val` is an object, returns constructor name, if possible. Otherwise returns undefined.
     */

    t.exports = function (t) {
      if (null != t && "function" == typeof t.constructor) return t.constructor.name;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    e.internalToObjectOptions = {
      transform: !1,
      virtuals: !1,
      getters: !1,
      _skipDepopulateTopLevel: !0,
      depopulate: !0,
      flattenDecimals: !1,
      useProjection: !1
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(62),
        o = r(65),
        s = r(66),
        a = r(22);

    function u(t) {
      a.call(this, "digest"), this._hash = t;
    }

    n(u, a), u.prototype._update = function (t) {
      this._hash.update(t);
    }, u.prototype._final = function () {
      return this._hash.digest();
    }, t.exports = function (t) {
      return "md5" === (t = t.toLowerCase()) ? new i() : "rmd160" === t || "ripemd160" === t ? new o() : new u(s(t));
    };
  }, function (t, e, r) {
    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t) {
      return Object.prototype.toString.call(t);
    }

    e.isArray = function (t) {
      return Array.isArray ? Array.isArray(t) : "[object Array]" === i(t);
    }, e.isBoolean = function (t) {
      return "boolean" == typeof t;
    }, e.isNull = function (t) {
      return null === t;
    }, e.isNullOrUndefined = function (t) {
      return null == t;
    }, e.isNumber = function (t) {
      return "number" == typeof t;
    }, e.isString = function (t) {
      return "string" == typeof t;
    }, e.isSymbol = function (t) {
      return "symbol" === n(t);
    }, e.isUndefined = function (t) {
      return void 0 === t;
    }, e.isRegExp = function (t) {
      return "[object RegExp]" === i(t);
    }, e.isObject = function (t) {
      return "object" === n(t) && null !== t;
    }, e.isDate = function (t) {
      return "[object Date]" === i(t);
    }, e.isError = function (t) {
      return "[object Error]" === i(t) || t instanceof Error;
    }, e.isFunction = function (t) {
      return "function" == typeof t;
    }, e.isPrimitive = function (t) {
      return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" === n(t) || void 0 === t;
    }, e.isBuffer = r(3).Buffer.isBuffer;
  }, function (t, e, r) {
    (function (e) {
      t.exports = function (t, r) {
        for (var n = Math.min(t.length, r.length), i = new e(n), o = 0; o < n; ++o) {
          i[o] = t[o] ^ r[o];
        }

        return i;
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(12);

    function o() {
      this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
    }

    e.BlockHash = o, o.prototype.update = function (t, e) {
      if (t = n.toArray(t, e), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
        var r = (t = this.pending).length % this._delta8;
        this.pending = t.slice(t.length - r, t.length), 0 === this.pending.length && (this.pending = null), t = n.join32(t, 0, t.length - r, this.endian);

        for (var i = 0; i < t.length; i += this._delta32) {
          this._update(t, i, i + this._delta32);
        }
      }

      return this;
    }, o.prototype.digest = function (t) {
      return this.update(this._pad()), i(null === this.pending), this._digest(t);
    }, o.prototype._pad = function () {
      var t = this.pendingTotal,
          e = this._delta8,
          r = e - (t + this.padLength) % e,
          n = new Array(r + this.padLength);
      n[0] = 128;

      for (var i = 1; i < r; i++) {
        n[i] = 0;
      }

      if (t <<= 3, "big" === this.endian) {
        for (var o = 8; o < this.padLength; o++) {
          n[i++] = 0;
        }

        n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = t >>> 24 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 8 & 255, n[i++] = 255 & t;
      } else for (n[i++] = 255 & t, n[i++] = t >>> 8 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, o = 8; o < this.padLength; o++) {
        n[i++] = 0;
      }

      return n;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(0),
        o = r(82).Reporter,
        s = r(80).Buffer;

    function a(t, e) {
      o.call(this, e), s.isBuffer(t) ? (this.base = t, this.offset = 0, this.length = t.length) : this.error("Input not Buffer");
    }

    function u(t, e) {
      if (Array.isArray(t)) this.length = 0, this.value = t.map(function (t) {
        return u.isEncoderBuffer(t) || (t = new u(t, e)), this.length += t.length, t;
      }, this);else if ("number" == typeof t) {
        if (!(0 <= t && t <= 255)) return e.error("non-byte EncoderBuffer value");
        this.value = t, this.length = 1;
      } else if ("string" == typeof t) this.value = t, this.length = s.byteLength(t);else {
        if (!s.isBuffer(t)) return e.error("Unsupported type: " + n(t));
        this.value = t, this.length = t.length;
      }
    }

    i(a, o), e.DecoderBuffer = a, a.isDecoderBuffer = function (t) {
      return t instanceof a || "object" === n(t) && s.isBuffer(t.base) && "DecoderBuffer" === t.constructor.name && "number" == typeof t.offset && "number" == typeof t.length && "function" == typeof t.save && "function" == typeof t.restore && "function" == typeof t.isEmpty && "function" == typeof t.readUInt8 && "function" == typeof t.skip && "function" == typeof t.raw;
    }, a.prototype.save = function () {
      return {
        offset: this.offset,
        reporter: o.prototype.save.call(this)
      };
    }, a.prototype.restore = function (t) {
      var e = new a(this.base);
      return e.offset = t.offset, e.length = this.offset, this.offset = t.offset, o.prototype.restore.call(this, t.reporter), e;
    }, a.prototype.isEmpty = function () {
      return this.offset === this.length;
    }, a.prototype.readUInt8 = function (t) {
      return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(t || "DecoderBuffer overrun");
    }, a.prototype.skip = function (t, e) {
      if (!(this.offset + t <= this.length)) return this.error(e || "DecoderBuffer overrun");
      var r = new a(this.base);
      return r._reporterState = this._reporterState, r.offset = this.offset, r.length = this.offset + t, this.offset += t, r;
    }, a.prototype.raw = function (t) {
      return this.base.slice(t ? t.offset : this.offset, this.length);
    }, e.EncoderBuffer = u, u.isEncoderBuffer = function (t) {
      return t instanceof u || "object" === n(t) && "EncoderBuffer" === t.constructor.name && "number" == typeof t.length && "function" == typeof t.join;
    }, u.prototype.join = function (t, e) {
      return t || (t = s.alloc(this.length)), e || (e = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach(function (r) {
        r.join(t, e), e += r.length;
      }) : ("number" == typeof this.value ? t[e] = this.value : "string" == typeof this.value ? t.write(this.value, e) : s.isBuffer(this.value) && this.value.copy(t, e), e += this.length)), t;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n4 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n4 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n4++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o = r(153),
        s = r(34),
        a = r(18),
        u = r(86),
        h = r(53),
        f = r(154),
        c = r(155),
        l = r(35),
        d = r(1),
        p = r(156).trustedSymbol,
        y = r(4);
    /*!
     * Object clone with Mongoose natives support.
     *
     * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible.
     *
     * Functions are never cloned.
     *
     * @param {Object} obj the object to clone
     * @param {Object} options
     * @param {Boolean} isArrayChild true if cloning immediately underneath an array. Special case for minimize.
     * @return {Object} the cloned object
     * @api private
     */

    function m(t, e, r) {
      if (null == t) return t;
      if (Array.isArray(t)) return function (t, e) {
        var r,
            i = [],
            o = n(t);

        try {
          for (o.s(); !(r = o.n()).done;) {
            var s = r.value;
            i.push(m(s, e, !0));
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }

        return i;
      }(t, e);
      if (h(t)) return e && e._skipSingleNestedGetters && t.$isSingleNested && (e = Object.assign({}, e, {
        getters: !1
      })), y.isPOJO(t) && null != t.$__ && null != t._doc ? t._doc : e && e.json && "function" == typeof t.toJSON ? t.toJSON(e) : t.toObject(e);
      if (t.constructor) switch (f(t.constructor)) {
        case "Object":
          return b(t, e, r);

        case "Date":
          return new t.constructor(+t);

        case "RegExp":
          return o(t);
      }
      return t instanceof a ? new a(t.id) : c(t, "Decimal128") ? e && e.flattenDecimals ? t.toJSON() : s.fromString(t.toString()) : !t.constructor && l(t) ? b(t, e, r) : t[d.schemaTypeSymbol] ? t.clone() : e && e.bson && "function" == typeof t.toBSON ? t : null != t.valueOf ? t.valueOf() : b(t, e, r);
    }
    /*!
     * ignore
     */


    function b(t, e, r) {
      var n,
          i = e && e.minimize,
          o = {};
      t[p] && (o[p] = t[p]);

      for (var s = 0, a = Object.keys(t); s < a.length; s++) {
        var h = a[s];

        if (!u.has(h)) {
          var f = m(t[h], e);
          i && void 0 === f || (!1 === i && void 0 === f ? delete o[h] : (n || (n = !0), o[h] = f));
        }
      }

      return i && !r ? n && o : o;
    }

    t.exports = m;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * Centralize this so we can more easily work around issues with people
       * stubbing out `process.nextTick()` in tests using sinon:
       * https://github.com/sinonjs/lolex#automatically-incrementing-mocked-time
       * See gh-6074
       */
      var r = e.nextTick.bind(e);

      t.exports = function (t) {
        return r(t);
      };
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(10),
        i = r(57),
        o = r(35),
        s = r(4);

    function a(t, e) {
      if (e && e.default) {
        var r = e.default;
        Array.isArray(r) && 0 === r.length ? e.default = Array : !e.shared && o(r) && 0 === Object.keys(r).length && (e.default = function () {
          return {};
        });
      }

      n.call(this, t, e, "Mixed"), this[i.schemaMixedSymbol] = !0;
    }

    a.schemaName = "Mixed", a.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    a.prototype = Object.create(n.prototype), a.prototype.constructor = a, a.get = n.get, a.set = n.set, a.prototype.cast = function (t) {
      return t instanceof Error ? s.errorToPOJO(t) : t;
    }, a.prototype.castForQuery = function (t, e) {
      return 2 === arguments.length ? e : t;
    },
    /*!
     * Module exports.
     */
    t.exports = a;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(11).EventEmitter,
        i = r(94),
        o = r(6),
        s = r(1).documentArrayParent;

    function a(t, e, r, n, o) {
      null != e && e.isMongooseDocumentArray ? (this.__parentArray = e, this[s] = e.$parent()) : (this.__parentArray = void 0, this[s] = void 0), this.$setIndex(o), this.$__parent = this[s], i.call(this, t, n, this[s], void 0, {
        isNew: !0
      });
    }
    /*!
     * Inherit from Subdocument
     */


    for (var u in a.prototype = Object.create(i.prototype), a.prototype.constructor = a, Object.defineProperty(a.prototype, "$isSingleNested", {
      configurable: !1,
      writable: !1,
      value: !1
    }), Object.defineProperty(a.prototype, "$isDocumentArrayElement", {
      configurable: !1,
      writable: !1,
      value: !0
    }), n.prototype) {
      a[u] = n.prototype[u];
    }
    /*!
     * ignore
     */


    a.prototype.$setIndex = function (t) {
      if (this.__index = t, null != o(this, "$__.validationError", null)) for (var e = 0, r = Object.keys(this.$__.validationError.errors); e < r.length; e++) {
        var n = r[e];
        this.invalidate(n, this.$__.validationError.errors[n]);
      }
    },
    /*!
     * ignore
     */
    a.prototype.populate = function () {
      throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.arr[0].populate("path")`, use `doc.populate("arr.0.path")`');
    },
    /*!
     * ignore
     */
    a.prototype.$__removeFromParent = function () {
      var t = this._doc._id;
      if (!t) throw new Error("For your own good, Mongoose does not know how to remove an ArraySubdocument that has no _id");

      this.__parentArray.pull({
        _id: t
      });
    }, a.prototype.$__fullPath = function (t, e) {
      return null == this.__index ? null : (this.$__.fullPath || this.ownerDocument(), e ? t ? this.$__.fullPath + "." + t : this.$__.fullPath : t ? this.$__.fullPath + "." + this.__index + "." + t : this.$__.fullPath + "." + this.__index);
    },
    /*!
     * Given a path relative to this document, return the path relative
     * to the top-level document.
     */
    a.prototype.$__pathRelativeToParent = function (t, e) {
      return null == this.__index ? null : e ? null == t ? this.__parentArray.$path() : this.__parentArray.$path() + "." + t : null == t ? this.__parentArray.$path() + "." + this.__index : this.__parentArray.$path() + "." + this.__index + "." + t;
    },
    /*!
     * Returns this sub-documents parent document.
     */
    a.prototype.$parent = function () {
      return this[s];
    }, a.prototype.parentArray = function () {
      return this.__parentArray;
    },
    /*!
     * Module exports.
     */
    t.exports = a;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      void 0 === e || !e.version || 0 === e.version.indexOf("v0.") || 0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8.") ? t.exports = {
        nextTick: function nextTick(t, r, n, i) {
          if ("function" != typeof t) throw new TypeError('"callback" argument must be a function');
          var o,
              s,
              a = arguments.length;

          switch (a) {
            case 0:
            case 1:
              return e.nextTick(t);

            case 2:
              return e.nextTick(function () {
                t.call(null, r);
              });

            case 3:
              return e.nextTick(function () {
                t.call(null, r, n);
              });

            case 4:
              return e.nextTick(function () {
                t.call(null, r, n, i);
              });

            default:
              for (o = new Array(a - 1), s = 0; s < o.length;) {
                o[s++] = arguments[s];
              }

              return e.nextTick(function () {
                t.apply(null, o);
              });
          }
        }
      } : t.exports = e;
    }).call(this, r(5));
  }, function (t, e, r) {
    var n = r(2).Buffer;

    function i(t) {
      n.isBuffer(t) || (t = n.from(t));

      for (var e = t.length / 4 | 0, r = new Array(e), i = 0; i < e; i++) {
        r[i] = t.readUInt32BE(4 * i);
      }

      return r;
    }

    function o(t) {
      for (; 0 < t.length; t++) {
        t[0] = 0;
      }
    }

    function s(t, e, r, n, i) {
      for (var o, s, a, u, h = r[0], f = r[1], c = r[2], l = r[3], d = t[0] ^ e[0], p = t[1] ^ e[1], y = t[2] ^ e[2], m = t[3] ^ e[3], b = 4, v = 1; v < i; v++) {
        o = h[d >>> 24] ^ f[p >>> 16 & 255] ^ c[y >>> 8 & 255] ^ l[255 & m] ^ e[b++], s = h[p >>> 24] ^ f[y >>> 16 & 255] ^ c[m >>> 8 & 255] ^ l[255 & d] ^ e[b++], a = h[y >>> 24] ^ f[m >>> 16 & 255] ^ c[d >>> 8 & 255] ^ l[255 & p] ^ e[b++], u = h[m >>> 24] ^ f[d >>> 16 & 255] ^ c[p >>> 8 & 255] ^ l[255 & y] ^ e[b++], d = o, p = s, y = a, m = u;
      }

      return o = (n[d >>> 24] << 24 | n[p >>> 16 & 255] << 16 | n[y >>> 8 & 255] << 8 | n[255 & m]) ^ e[b++], s = (n[p >>> 24] << 24 | n[y >>> 16 & 255] << 16 | n[m >>> 8 & 255] << 8 | n[255 & d]) ^ e[b++], a = (n[y >>> 24] << 24 | n[m >>> 16 & 255] << 16 | n[d >>> 8 & 255] << 8 | n[255 & p]) ^ e[b++], u = (n[m >>> 24] << 24 | n[d >>> 16 & 255] << 16 | n[p >>> 8 & 255] << 8 | n[255 & y]) ^ e[b++], [o >>>= 0, s >>>= 0, a >>>= 0, u >>>= 0];
    }

    var a = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
        u = function () {
      for (var t = new Array(256), e = 0; e < 256; e++) {
        t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
      }

      for (var r = [], n = [], i = [[], [], [], []], o = [[], [], [], []], s = 0, a = 0, u = 0; u < 256; ++u) {
        var h = a ^ a << 1 ^ a << 2 ^ a << 3 ^ a << 4;
        h = h >>> 8 ^ 255 & h ^ 99, r[s] = h, n[h] = s;
        var f = t[s],
            c = t[f],
            l = t[c],
            d = 257 * t[h] ^ 16843008 * h;
        i[0][s] = d << 24 | d >>> 8, i[1][s] = d << 16 | d >>> 16, i[2][s] = d << 8 | d >>> 24, i[3][s] = d, d = 16843009 * l ^ 65537 * c ^ 257 * f ^ 16843008 * s, o[0][h] = d << 24 | d >>> 8, o[1][h] = d << 16 | d >>> 16, o[2][h] = d << 8 | d >>> 24, o[3][h] = d, 0 === s ? s = a = 1 : (s = f ^ t[t[t[l ^ f]]], a ^= t[t[a]]);
      }

      return {
        SBOX: r,
        INV_SBOX: n,
        SUB_MIX: i,
        INV_SUB_MIX: o
      };
    }();

    function h(t) {
      this._key = i(t), this._reset();
    }

    h.blockSize = 16, h.keySize = 32, h.prototype.blockSize = h.blockSize, h.prototype.keySize = h.keySize, h.prototype._reset = function () {
      for (var t = this._key, e = t.length, r = e + 6, n = 4 * (r + 1), i = [], o = 0; o < e; o++) {
        i[o] = t[o];
      }

      for (o = e; o < n; o++) {
        var s = i[o - 1];
        o % e == 0 ? (s = s << 8 | s >>> 24, s = u.SBOX[s >>> 24] << 24 | u.SBOX[s >>> 16 & 255] << 16 | u.SBOX[s >>> 8 & 255] << 8 | u.SBOX[255 & s], s ^= a[o / e | 0] << 24) : e > 6 && o % e == 4 && (s = u.SBOX[s >>> 24] << 24 | u.SBOX[s >>> 16 & 255] << 16 | u.SBOX[s >>> 8 & 255] << 8 | u.SBOX[255 & s]), i[o] = i[o - e] ^ s;
      }

      for (var h = [], f = 0; f < n; f++) {
        var c = n - f,
            l = i[c - (f % 4 ? 0 : 4)];
        h[f] = f < 4 || c <= 4 ? l : u.INV_SUB_MIX[0][u.SBOX[l >>> 24]] ^ u.INV_SUB_MIX[1][u.SBOX[l >>> 16 & 255]] ^ u.INV_SUB_MIX[2][u.SBOX[l >>> 8 & 255]] ^ u.INV_SUB_MIX[3][u.SBOX[255 & l]];
      }

      this._nRounds = r, this._keySchedule = i, this._invKeySchedule = h;
    }, h.prototype.encryptBlockRaw = function (t) {
      return s(t = i(t), this._keySchedule, u.SUB_MIX, u.SBOX, this._nRounds);
    }, h.prototype.encryptBlock = function (t) {
      var e = this.encryptBlockRaw(t),
          r = n.allocUnsafe(16);
      return r.writeUInt32BE(e[0], 0), r.writeUInt32BE(e[1], 4), r.writeUInt32BE(e[2], 8), r.writeUInt32BE(e[3], 12), r;
    }, h.prototype.decryptBlock = function (t) {
      var e = (t = i(t))[1];
      t[1] = t[3], t[3] = e;
      var r = s(t, this._invKeySchedule, u.INV_SUB_MIX, u.INV_SBOX, this._nRounds),
          o = n.allocUnsafe(16);
      return o.writeUInt32BE(r[0], 0), o.writeUInt32BE(r[3], 4), o.writeUInt32BE(r[2], 8), o.writeUInt32BE(r[1], 12), o;
    }, h.prototype.scrub = function () {
      o(this._keySchedule), o(this._invKeySchedule), o(this._key);
    }, t.exports.AES = h;
  }, function (t, e, r) {
    var n = r(2).Buffer,
        i = r(62);

    t.exports = function (t, e, r, o) {
      if (n.isBuffer(t) || (t = n.from(t, "binary")), e && (n.isBuffer(e) || (e = n.from(e, "binary")), 8 !== e.length)) throw new RangeError("salt should be Buffer with 8 byte length");

      for (var s = r / 8, a = n.alloc(s), u = n.alloc(o || 0), h = n.alloc(0); s > 0 || o > 0;) {
        var f = new i();
        f.update(h), f.update(t), e && f.update(e), h = f.digest();
        var c = 0;

        if (s > 0) {
          var l = a.length - s;
          c = Math.min(s, h.length), h.copy(a, l, 0, c), s -= c;
        }

        if (c < h.length && o > 0) {
          var d = u.length - o,
              p = Math.min(o, h.length - c);
          h.copy(u, d, c, c + p), o -= p;
        }
      }

      return h.fill(0), {
        key: a,
        iv: u
      };
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(19),
        i = r(13),
        o = i.getNAF,
        s = i.getJSF,
        a = i.assert;

    function u(t, e) {
      this.type = t, this.p = new n(e.p, 16), this.red = e.prime ? n.red(e.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = e.n && new n(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
      var r = this.n && this.p.div(this.n);
      !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
    }

    function h(t, e) {
      this.curve = t, this.type = e, this.precomputed = null;
    }

    t.exports = u, u.prototype.point = function () {
      throw new Error("Not implemented");
    }, u.prototype.validate = function () {
      throw new Error("Not implemented");
    }, u.prototype._fixedNafMul = function (t, e) {
      a(t.precomputed);

      var r = t._getDoubles(),
          n = o(e, 1, this._bitLength),
          i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);

      i /= 3;
      var s,
          u,
          h = [];

      for (s = 0; s < n.length; s += r.step) {
        u = 0;

        for (var f = s + r.step - 1; f >= s; f--) {
          u = (u << 1) + n[f];
        }

        h.push(u);
      }

      for (var c = this.jpoint(null, null, null), l = this.jpoint(null, null, null), d = i; d > 0; d--) {
        for (s = 0; s < h.length; s++) {
          (u = h[s]) === d ? l = l.mixedAdd(r.points[s]) : u === -d && (l = l.mixedAdd(r.points[s].neg()));
        }

        c = c.add(l);
      }

      return c.toP();
    }, u.prototype._wnafMul = function (t, e) {
      var r = 4,
          n = t._getNAFPoints(r);

      r = n.wnd;

      for (var i = n.points, s = o(e, r, this._bitLength), u = this.jpoint(null, null, null), h = s.length - 1; h >= 0; h--) {
        for (var f = 0; h >= 0 && 0 === s[h]; h--) {
          f++;
        }

        if (h >= 0 && f++, u = u.dblp(f), h < 0) break;
        var c = s[h];
        a(0 !== c), u = "affine" === t.type ? c > 0 ? u.mixedAdd(i[c - 1 >> 1]) : u.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? u.add(i[c - 1 >> 1]) : u.add(i[-c - 1 >> 1].neg());
      }

      return "affine" === t.type ? u.toP() : u;
    }, u.prototype._wnafMulAdd = function (t, e, r, n, i) {
      var a,
          u,
          h,
          f = this._wnafT1,
          c = this._wnafT2,
          l = this._wnafT3,
          d = 0;

      for (a = 0; a < n; a++) {
        var p = (h = e[a])._getNAFPoints(t);

        f[a] = p.wnd, c[a] = p.points;
      }

      for (a = n - 1; a >= 1; a -= 2) {
        var y = a - 1,
            m = a;

        if (1 === f[y] && 1 === f[m]) {
          var b = [e[y], null, null, e[m]];
          0 === e[y].y.cmp(e[m].y) ? (b[1] = e[y].add(e[m]), b[2] = e[y].toJ().mixedAdd(e[m].neg())) : 0 === e[y].y.cmp(e[m].y.redNeg()) ? (b[1] = e[y].toJ().mixedAdd(e[m]), b[2] = e[y].add(e[m].neg())) : (b[1] = e[y].toJ().mixedAdd(e[m]), b[2] = e[y].toJ().mixedAdd(e[m].neg()));
          var v = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
              g = s(r[y], r[m]);

          for (d = Math.max(g[0].length, d), l[y] = new Array(d), l[m] = new Array(d), u = 0; u < d; u++) {
            var w = 0 | g[0][u],
                _ = 0 | g[1][u];

            l[y][u] = v[3 * (w + 1) + (_ + 1)], l[m][u] = 0, c[y] = b;
          }
        } else l[y] = o(r[y], f[y], this._bitLength), l[m] = o(r[m], f[m], this._bitLength), d = Math.max(l[y].length, d), d = Math.max(l[m].length, d);
      }

      var M = this.jpoint(null, null, null),
          S = this._wnafT4;

      for (a = d; a >= 0; a--) {
        for (var O = 0; a >= 0;) {
          var A = !0;

          for (u = 0; u < n; u++) {
            S[u] = 0 | l[u][a], 0 !== S[u] && (A = !1);
          }

          if (!A) break;
          O++, a--;
        }

        if (a >= 0 && O++, M = M.dblp(O), a < 0) break;

        for (u = 0; u < n; u++) {
          var E = S[u];
          0 !== E && (E > 0 ? h = c[u][E - 1 >> 1] : E < 0 && (h = c[u][-E - 1 >> 1].neg()), M = "affine" === h.type ? M.mixedAdd(h) : M.add(h));
        }
      }

      for (a = 0; a < n; a++) {
        c[a] = null;
      }

      return i ? M : M.toP();
    }, u.BasePoint = h, h.prototype.eq = function () {
      throw new Error("Not implemented");
    }, h.prototype.validate = function () {
      return this.curve.validate(this);
    }, u.prototype.decodePoint = function (t, e) {
      t = i.toArray(t, e);
      var r = this.p.byteLength();
      if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r) return 6 === t[0] ? a(t[t.length - 1] % 2 == 0) : 7 === t[0] && a(t[t.length - 1] % 2 == 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
      if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
      throw new Error("Unknown point format");
    }, h.prototype.encodeCompressed = function (t) {
      return this.encode(t, !0);
    }, h.prototype._encode = function (t) {
      var e = this.curve.p.byteLength(),
          r = this.getX().toArray("be", e);
      return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e));
    }, h.prototype.encode = function (t, e) {
      return i.encode(this._encode(e), t);
    }, h.prototype.precompute = function (t) {
      if (this.precomputed) return this;
      var e = {
        doubles: null,
        naf: null,
        beta: null
      };
      return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this;
    }, h.prototype._hasDoubles = function (t) {
      if (!this.precomputed) return !1;
      var e = this.precomputed.doubles;
      return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step);
    }, h.prototype._getDoubles = function (t, e) {
      if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;

      for (var r = [this], n = this, i = 0; i < e; i += t) {
        for (var o = 0; o < t; o++) {
          n = n.dbl();
        }

        r.push(n);
      }

      return {
        step: t,
        points: r
      };
    }, h.prototype._getNAFPoints = function (t) {
      if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;

      for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) {
        e[i] = e[i - 1].add(n);
      }

      return {
        wnd: t,
        points: e
      };
    }, h.prototype._getBeta = function () {
      return null;
    }, h.prototype.dblp = function (t) {
      for (var e = this, r = 0; r < t; r++) {
        e = e.dbl();
      }

      return e;
    };
  }, function (t, e, r) {
    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(270),
        o = r(278),
        s = r(279),
        a = r(70),
        u = r(115),
        h = r(2).Buffer;

    function f(t) {
      var e;
      "object" !== n(t) || h.isBuffer(t) || (e = t.passphrase, t = t.key), "string" == typeof t && (t = h.from(t));
      var r,
          f,
          c = s(t, e),
          l = c.tag,
          d = c.data;

      switch (l) {
        case "CERTIFICATE":
          f = i.certificate.decode(d, "der").tbsCertificate.subjectPublicKeyInfo;

        case "PUBLIC KEY":
          switch (f || (f = i.PublicKey.decode(d, "der")), r = f.algorithm.algorithm.join(".")) {
            case "1.2.840.113549.1.1.1":
              return i.RSAPublicKey.decode(f.subjectPublicKey.data, "der");

            case "1.2.840.10045.2.1":
              return f.subjectPrivateKey = f.subjectPublicKey, {
                type: "ec",
                data: f
              };

            case "1.2.840.10040.4.1":
              return f.algorithm.params.pub_key = i.DSAparam.decode(f.subjectPublicKey.data, "der"), {
                type: "dsa",
                data: f.algorithm.params
              };

            default:
              throw new Error("unknown key id " + r);
          }

        case "ENCRYPTED PRIVATE KEY":
          d = function (t, e) {
            var r = t.algorithm.decrypt.kde.kdeparams.salt,
                n = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10),
                i = o[t.algorithm.decrypt.cipher.algo.join(".")],
                s = t.algorithm.decrypt.cipher.iv,
                f = t.subjectPrivateKey,
                c = parseInt(i.split("-")[1], 10) / 8,
                l = u.pbkdf2Sync(e, r, n, c, "sha1"),
                d = a.createDecipheriv(i, l, s),
                p = [];
            return p.push(d.update(f)), p.push(d.final()), h.concat(p);
          }(d = i.EncryptedPrivateKey.decode(d, "der"), e);

        case "PRIVATE KEY":
          switch (r = (f = i.PrivateKey.decode(d, "der")).algorithm.algorithm.join(".")) {
            case "1.2.840.113549.1.1.1":
              return i.RSAPrivateKey.decode(f.subjectPrivateKey, "der");

            case "1.2.840.10045.2.1":
              return {
                curve: f.algorithm.curve,
                privateKey: i.ECPrivateKey.decode(f.subjectPrivateKey, "der").privateKey
              };

            case "1.2.840.10040.4.1":
              return f.algorithm.params.priv_key = i.DSAparam.decode(f.subjectPrivateKey, "der"), {
                type: "dsa",
                params: f.algorithm.params
              };

            default:
              throw new Error("unknown key id " + r);
          }

        case "RSA PUBLIC KEY":
          return i.RSAPublicKey.decode(d, "der");

        case "RSA PRIVATE KEY":
          return i.RSAPrivateKey.decode(d, "der");

        case "DSA PRIVATE KEY":
          return {
            type: "dsa",
            params: i.DSAPrivateKey.decode(d, "der")
          };

        case "EC PRIVATE KEY":
          return {
            curve: (d = i.ECPrivateKey.decode(d, "der")).parameters.value,
            privateKey: d.privateKey
          };

        default:
          throw new Error("unknown key type " + l);
      }
    }

    t.exports = f, f.signature = i.signature;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Returns if `v` is a mongoose object that has a `toObject()` method we can use.
     *
     * This is for compatibility with libs like Date.js which do foolish things to Natives.
     *
     * @param {any} v
     * @api private
     */

    t.exports = function (t) {
      return null != t && (null != t.$__ || t.isMongooseArray || t.isMongooseBuffer || t.$isMongooseMap);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(157),
        i = r(45),
        o = Symbol("mongoose:emitted");

    t.exports = function (t, e, r, s) {
      return "function" == typeof t ? e(function (e) {
        if (null == e) t.apply(this, arguments);else {
          null != r && null != r.listeners && r.listeners("error").length > 0 && !e[o] && (e[o] = !0, r.emit("error", e));

          try {
            t(e);
          } catch (e) {
            return i(function () {
              throw e;
            });
          }
        }
      }) : new (s = s || n.get())(function (t, n) {
        e(function (e, i) {
          return null != e ? (null != r && null != r.listeners && r.listeners("error").length > 0 && !e[o] && (e[o] = !0, r.emit("error", e)), n(e)) : arguments.length > 2 ? t(Array.prototype.slice.call(arguments, 1)) : void t(i);
        });
      });
    };
  }, function (t, e, r) {
    "use strict";

    var n = ["find", "findOne", "update", "updateMany", "updateOne", "replaceOne", "remove", "count", "distinct", "findOneAndDelete", "findOneAndUpdate", "aggregate", "findCursor", "deleteOne", "deleteMany"];

    function i() {}

    for (var o = 0, s = n.length; o < s; ++o) {
      var a = n[o];
      i.prototype[a] = u(a);
    }

    function u(t) {
      return function () {
        throw new Error("collection." + t + " not implemented");
      };
    }

    t.exports = i, i.methods = n;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t, e, r) {
        var n;
        return function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u), e = e || "Field `" + t + "` is not in schema and strict mode is set to throw.", (n = a.call(this, e)).isImmutableError = !!r, n.path = t, n;
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "StrictModeError"
    }), t.exports = h;
  }, function (t, e, r) {
    "use strict";

    e.schemaMixedSymbol = Symbol.for("mongoose:schema_mixed"), e.builtInMiddleware = Symbol.for("mongoose:built-in-middleware");
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module requirements.
     */

    var n = r(169);
    /*!
     * @ignore
     */

    /*!
     * @ignore
     */

    function i(t) {
      return n.cast()(t);
    }

    e.castToNumber = i, e.castArraysOfNumbers = function t(e, r) {
      e.forEach(function (n, o) {
        Array.isArray(n) ? t(n, r) : e[o] = i.call(r, n);
      });
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(172);
    /*!
    * returns discriminator by discriminatorMapping.value
    *
    * @param {Model} model
    * @param {string} value
    */

    t.exports = function (t, e) {
      if (null == t) return null;

      for (var r = 0, i = Object.keys(t); r < i.length; r++) {
        var o = t[i[r]];
        if (o.schema && o.schema.discriminatorMapping && n(o.schema.discriminatorMapping.value, e)) return o;
      }

      return null;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module exports.
     */

    e.Array = r(175), e.Buffer = r(177), e.Document = e.Embedded = r(47), e.DocumentArray = r(27), e.Decimal128 = r(34), e.ObjectId = r(18), e.Map = r(179), e.Subdocument = r(94);
  }, function (t, e, r) {
    "use strict";

    r.r(e), function (t) {
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      r.d(e, "BSONError", function () {
        return S;
      }), r.d(e, "BSONRegExp", function () {
        return vt;
      }), r.d(e, "BSONSymbol", function () {
        return gt;
      }), r.d(e, "BSONTypeError", function () {
        return O;
      }), r.d(e, "BSON_BINARY_SUBTYPE_BYTE_ARRAY", function () {
        return oe;
      }), r.d(e, "BSON_BINARY_SUBTYPE_COLUMN", function () {
        return fe;
      }), r.d(e, "BSON_BINARY_SUBTYPE_DEFAULT", function () {
        return ne;
      }), r.d(e, "BSON_BINARY_SUBTYPE_ENCRYPTED", function () {
        return he;
      }), r.d(e, "BSON_BINARY_SUBTYPE_FUNCTION", function () {
        return ie;
      }), r.d(e, "BSON_BINARY_SUBTYPE_MD5", function () {
        return ue;
      }), r.d(e, "BSON_BINARY_SUBTYPE_USER_DEFINED", function () {
        return ce;
      }), r.d(e, "BSON_BINARY_SUBTYPE_UUID", function () {
        return se;
      }), r.d(e, "BSON_BINARY_SUBTYPE_UUID_NEW", function () {
        return ae;
      }), r.d(e, "BSON_DATA_ARRAY", function () {
        return Lt;
      }), r.d(e, "BSON_DATA_BINARY", function () {
        return qt;
      }), r.d(e, "BSON_DATA_BOOLEAN", function () {
        return zt;
      }), r.d(e, "BSON_DATA_CODE", function () {
        return Zt;
      }), r.d(e, "BSON_DATA_CODE_W_SCOPE", function () {
        return Yt;
      }), r.d(e, "BSON_DATA_DATE", function () {
        return Vt;
      }), r.d(e, "BSON_DATA_DBPOINTER", function () {
        return Wt;
      }), r.d(e, "BSON_DATA_DECIMAL128", function () {
        return te;
      }), r.d(e, "BSON_DATA_INT", function () {
        return Gt;
      }), r.d(e, "BSON_DATA_LONG", function () {
        return Xt;
      }), r.d(e, "BSON_DATA_MAX_KEY", function () {
        return re;
      }), r.d(e, "BSON_DATA_MIN_KEY", function () {
        return ee;
      }), r.d(e, "BSON_DATA_NULL", function () {
        return Kt;
      }), r.d(e, "BSON_DATA_NUMBER", function () {
        return Nt;
      }), r.d(e, "BSON_DATA_OBJECT", function () {
        return Ct;
      }), r.d(e, "BSON_DATA_OID", function () {
        return Ft;
      }), r.d(e, "BSON_DATA_REGEXP", function () {
        return Ht;
      }), r.d(e, "BSON_DATA_STRING", function () {
        return Dt;
      }), r.d(e, "BSON_DATA_SYMBOL", function () {
        return Jt;
      }), r.d(e, "BSON_DATA_TIMESTAMP", function () {
        return Qt;
      }), r.d(e, "BSON_DATA_UNDEFINED", function () {
        return Ut;
      }), r.d(e, "BSON_INT32_MAX", function () {
        return $t;
      }), r.d(e, "BSON_INT32_MIN", function () {
        return Pt;
      }), r.d(e, "BSON_INT64_MAX", function () {
        return Rt;
      }), r.d(e, "BSON_INT64_MIN", function () {
        return Bt;
      }), r.d(e, "Binary", function () {
        return K;
      }), r.d(e, "Code", function () {
        return H;
      }), r.d(e, "DBRef", function () {
        return Z;
      }), r.d(e, "Decimal128", function () {
        return ht;
      }), r.d(e, "Double", function () {
        return ft;
      }), r.d(e, "EJSON", function () {
        return Et;
      }), r.d(e, "Int32", function () {
        return ct;
      }), r.d(e, "Long", function () {
        return Q;
      }), r.d(e, "LongWithoutOverridesClass", function () {
        return wt;
      }), r.d(e, "Map", function () {
        return xt;
      }), r.d(e, "MaxKey", function () {
        return lt;
      }), r.d(e, "MinKey", function () {
        return dt;
      }), r.d(e, "ObjectID", function () {
        return bt;
      }), r.d(e, "ObjectId", function () {
        return bt;
      }), r.d(e, "Timestamp", function () {
        return _t;
      }), r.d(e, "UUID", function () {
        return V;
      }), r.d(e, "calculateObjectSize", function () {
        return Ge;
      }), r.d(e, "deserialize", function () {
        return Ye;
      }), r.d(e, "deserializeStream", function () {
        return Qe;
      }), r.d(e, "serialize", function () {
        return Ze;
      }), r.d(e, "serializeWithBufferAndIndex", function () {
        return Je;
      }), r.d(e, "setInternalBufferSize", function () {
        return We;
      });

      for (var i = function i(t) {
        var e = d(t),
            r = e[0],
            n = e[1];
        return 3 * (r + n) / 4 - n;
      }, o = function o(t) {
        var e,
            r,
            n = d(t),
            i = n[0],
            o = n[1],
            s = new h(function (t, e, r) {
          return 3 * (e + r) / 4 - r;
        }(0, i, o)),
            a = 0,
            f = o > 0 ? i - 4 : i;

        for (r = 0; r < f; r += 4) {
          e = u[t.charCodeAt(r)] << 18 | u[t.charCodeAt(r + 1)] << 12 | u[t.charCodeAt(r + 2)] << 6 | u[t.charCodeAt(r + 3)], s[a++] = e >> 16 & 255, s[a++] = e >> 8 & 255, s[a++] = 255 & e;
        }

        2 === o && (e = u[t.charCodeAt(r)] << 2 | u[t.charCodeAt(r + 1)] >> 4, s[a++] = 255 & e);
        1 === o && (e = u[t.charCodeAt(r)] << 10 | u[t.charCodeAt(r + 1)] << 4 | u[t.charCodeAt(r + 2)] >> 2, s[a++] = e >> 8 & 255, s[a++] = 255 & e);
        return s;
      }, s = function s(t) {
        for (var e, r = t.length, n = r % 3, i = [], o = 0, s = r - n; o < s; o += 16383) {
          i.push(p(t, o, o + 16383 > s ? s : o + 16383));
        }

        1 === n ? (e = t[r - 1], i.push(a[e >> 2] + a[e << 4 & 63] + "==")) : 2 === n && (e = (t[r - 2] << 8) + t[r - 1], i.push(a[e >> 10] + a[e >> 4 & 63] + a[e << 2 & 63] + "="));
        return i.join("");
      }, a = [], u = [], h = "undefined" != typeof Uint8Array ? Uint8Array : Array, f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", c = 0, l = f.length; c < l; ++c) {
        a[c] = f[c], u[f.charCodeAt(c)] = c;
      }

      function d(t) {
        var e = t.length;
        if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
        var r = t.indexOf("=");
        return -1 === r && (r = e), [r, r === e ? 0 : 4 - r % 4];
      }

      function p(t, e, r) {
        for (var n, i, o = [], s = e; s < r; s += 3) {
          n = (t[s] << 16 & 16711680) + (t[s + 1] << 8 & 65280) + (255 & t[s + 2]), o.push(a[(i = n) >> 18 & 63] + a[i >> 12 & 63] + a[i >> 6 & 63] + a[63 & i]);
        }

        return o.join("");
      }

      u["-".charCodeAt(0)] = 62, u["_".charCodeAt(0)] = 63;

      var y = {
        byteLength: i,
        toByteArray: o,
        fromByteArray: s
      },
          m = function m(t, e, r, n, i) {
        var o,
            s,
            a = 8 * i - n - 1,
            u = (1 << a) - 1,
            h = u >> 1,
            f = -7,
            c = r ? i - 1 : 0,
            l = r ? -1 : 1,
            d = t[e + c];

        for (c += l, o = d & (1 << -f) - 1, d >>= -f, f += a; f > 0; o = 256 * o + t[e + c], c += l, f -= 8) {
          ;
        }

        for (s = o & (1 << -f) - 1, o >>= -f, f += n; f > 0; s = 256 * s + t[e + c], c += l, f -= 8) {
          ;
        }

        if (0 === o) o = 1 - h;else {
          if (o === u) return s ? NaN : 1 / 0 * (d ? -1 : 1);
          s += Math.pow(2, n), o -= h;
        }
        return (d ? -1 : 1) * s * Math.pow(2, o - n);
      },
          b = function b(t, e, r, n, i, o) {
        var s,
            a,
            u,
            h = 8 * o - i - 1,
            f = (1 << h) - 1,
            c = f >> 1,
            l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            d = n ? 0 : o - 1,
            p = n ? 1 : -1,
            y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;

        for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = f) : (s = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e += s + c >= 1 ? l / u : l * Math.pow(2, 1 - c)) * u >= 2 && (s++, u /= 2), s + c >= f ? (a = 0, s = f) : s + c >= 1 ? (a = (e * u - 1) * Math.pow(2, i), s += c) : (a = e * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; t[r + d] = 255 & a, d += p, a /= 256, i -= 8) {
          ;
        }

        for (s = s << i | a, h += i; h > 0; t[r + d] = 255 & s, d += p, s /= 256, h -= 8) {
          ;
        }

        t[r + d - p] |= 128 * y;
      },
          v = function (t, e) {
        return t(e = {
          exports: {}
        }, e.exports), e.exports;
      }(function (t, e) {
        var r = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        e.Buffer = i, e.SlowBuffer = function (t) {
          +t != t && (t = 0);
          return i.alloc(+t);
        }, e.INSPECT_MAX_BYTES = 50;

        function n(t) {
          if (t > 2147483647) throw new RangeError('The value "' + t + '" is invalid for option "size"');
          var e = new Uint8Array(t);
          return Object.setPrototypeOf(e, i.prototype), e;
        }

        function i(t, e, r) {
          if ("number" == typeof t) {
            if ("string" == typeof e) throw new TypeError('The "string" argument must be of type string. Received type number');
            return a(t);
          }

          return o(t, e, r);
        }

        function o(t, e, r) {
          if ("string" == typeof t) return function (t, e) {
            "string" == typeof e && "" !== e || (e = "utf8");
            if (!i.isEncoding(e)) throw new TypeError("Unknown encoding: " + e);
            var r = 0 | c(t, e),
                o = n(r),
                s = o.write(t, e);
            s !== r && (o = o.slice(0, s));
            return o;
          }(t, e);
          if (ArrayBuffer.isView(t)) return function (t) {
            if (L(t, Uint8Array)) {
              var e = new Uint8Array(t);
              return h(e.buffer, e.byteOffset, e.byteLength);
            }

            return u(t);
          }(t);
          if (null == t) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + babelHelpers.typeof(t));
          if (L(t, ArrayBuffer) || t && L(t.buffer, ArrayBuffer)) return h(t, e, r);
          if ("undefined" != typeof SharedArrayBuffer && (L(t, SharedArrayBuffer) || t && L(t.buffer, SharedArrayBuffer))) return h(t, e, r);
          if ("number" == typeof t) throw new TypeError('The "value" argument must not be of type number. Received type number');
          var o = t.valueOf && t.valueOf();
          if (null != o && o !== t) return i.from(o, e, r);

          var s = function (t) {
            if (i.isBuffer(t)) {
              var e = 0 | f(t.length),
                  r = n(e);
              return 0 === r.length || t.copy(r, 0, 0, e), r;
            }

            if (void 0 !== t.length) return "number" != typeof t.length || q(t.length) ? n(0) : u(t);
            if ("Buffer" === t.type && Array.isArray(t.data)) return u(t.data);
          }(t);

          if (s) return s;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t[Symbol.toPrimitive]) return i.from(t[Symbol.toPrimitive]("string"), e, r);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + babelHelpers.typeof(t));
        }

        function s(t) {
          if ("number" != typeof t) throw new TypeError('"size" argument must be of type number');
          if (t < 0) throw new RangeError('The value "' + t + '" is invalid for option "size"');
        }

        function a(t) {
          return s(t), n(t < 0 ? 0 : 0 | f(t));
        }

        function u(t) {
          for (var e = t.length < 0 ? 0 : 0 | f(t.length), r = n(e), i = 0; i < e; i += 1) {
            r[i] = 255 & t[i];
          }

          return r;
        }

        function h(t, e, r) {
          if (e < 0 || t.byteLength < e) throw new RangeError('"offset" is outside of buffer bounds');
          if (t.byteLength < e + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
          var n;
          return n = void 0 === e && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, e) : new Uint8Array(t, e, r), Object.setPrototypeOf(n, i.prototype), n;
        }

        function f(t) {
          if (t >= 2147483647) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + 2147483647..toString(16) + " bytes");
          return 0 | t;
        }

        function c(t, e) {
          if (i.isBuffer(t)) return t.length;
          if (ArrayBuffer.isView(t) || L(t, ArrayBuffer)) return t.byteLength;
          if ("string" != typeof t) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + babelHelpers.typeof(t));
          var r = t.length,
              n = arguments.length > 2 && !0 === arguments[2];
          if (!n && 0 === r) return 0;

          for (var o = !1;;) {
            switch (e) {
              case "ascii":
              case "latin1":
              case "binary":
                return r;

              case "utf8":
              case "utf-8":
                return N(t).length;

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r;

              case "hex":
                return r >>> 1;

              case "base64":
                return D(t).length;

              default:
                if (o) return n ? -1 : N(t).length;
                e = ("" + e).toLowerCase(), o = !0;
            }
          }
        }

        function l(t, e, r) {
          var n = !1;
          if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";
          if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
          if ((r >>>= 0) <= (e >>>= 0)) return "";

          for (t || (t = "utf8");;) {
            switch (t) {
              case "hex":
                return k(this, e, r);

              case "utf8":
              case "utf-8":
                return A(this, e, r);

              case "ascii":
                return E(this, e, r);

              case "latin1":
              case "binary":
                return x(this, e, r);

              case "base64":
                return O(this, e, r);

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return j(this, e, r);

              default:
                if (n) throw new TypeError("Unknown encoding: " + t);
                t = (t + "").toLowerCase(), n = !0;
            }
          }
        }

        function d(t, e, r) {
          var n = t[e];
          t[e] = t[r], t[r] = n;
        }

        function p(t, e, r, n, o) {
          if (0 === t.length) return -1;

          if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), q(r = +r) && (r = o ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
            if (o) return -1;
            r = t.length - 1;
          } else if (r < 0) {
            if (!o) return -1;
            r = 0;
          }

          if ("string" == typeof e && (e = i.from(e, n)), i.isBuffer(e)) return 0 === e.length ? -1 : v(t, e, r, n, o);
          if ("number" == typeof e) return e &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : v(t, [e], r, n, o);
          throw new TypeError("val must be string, number or Buffer");
        }

        function v(t, e, r, n, i) {
          var o,
              s = 1,
              a = t.length,
              u = e.length;

          if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
            if (t.length < 2 || e.length < 2) return -1;
            s = 2, a /= 2, u /= 2, r /= 2;
          }

          function h(t, e) {
            return 1 === s ? t[e] : t.readUInt16BE(e * s);
          }

          if (i) {
            var f = -1;

            for (o = r; o < a; o++) {
              if (h(t, o) === h(e, -1 === f ? 0 : o - f)) {
                if (-1 === f && (f = o), o - f + 1 === u) return f * s;
              } else -1 !== f && (o -= o - f), f = -1;
            }
          } else for (r + u > a && (r = a - u), o = r; o >= 0; o--) {
            for (var c = !0, l = 0; l < u; l++) {
              if (h(t, o + l) !== h(e, l)) {
                c = !1;
                break;
              }
            }

            if (c) return o;
          }

          return -1;
        }

        function g(t, e, r, n) {
          r = Number(r) || 0;
          var i = t.length - r;
          n ? (n = Number(n)) > i && (n = i) : n = i;
          var o = e.length;
          n > o / 2 && (n = o / 2);

          for (var s = 0; s < n; ++s) {
            var a = parseInt(e.substr(2 * s, 2), 16);
            if (q(a)) return s;
            t[r + s] = a;
          }

          return s;
        }

        function w(t, e, r, n) {
          return C(N(e, t.length - r), t, r, n);
        }

        function _(t, e, r, n) {
          return C(function (t) {
            for (var e = [], r = 0; r < t.length; ++r) {
              e.push(255 & t.charCodeAt(r));
            }

            return e;
          }(e), t, r, n);
        }

        function M(t, e, r, n) {
          return C(D(e), t, r, n);
        }

        function S(t, e, r, n) {
          return C(function (t, e) {
            for (var r, n, i, o = [], s = 0; s < t.length && !((e -= 2) < 0); ++s) {
              r = t.charCodeAt(s), n = r >> 8, i = r % 256, o.push(i), o.push(n);
            }

            return o;
          }(e, t.length - r), t, r, n);
        }

        function O(t, e, r) {
          return 0 === e && r === t.length ? y.fromByteArray(t) : y.fromByteArray(t.slice(e, r));
        }

        function A(t, e, r) {
          r = Math.min(t.length, r);

          for (var n = [], i = e; i < r;) {
            var o,
                s,
                a,
                u,
                h = t[i],
                f = null,
                c = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
            if (i + c <= r) switch (c) {
              case 1:
                h < 128 && (f = h);
                break;

              case 2:
                128 == (192 & (o = t[i + 1])) && (u = (31 & h) << 6 | 63 & o) > 127 && (f = u);
                break;

              case 3:
                o = t[i + 1], s = t[i + 2], 128 == (192 & o) && 128 == (192 & s) && (u = (15 & h) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (f = u);
                break;

              case 4:
                o = t[i + 1], s = t[i + 2], a = t[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (u = (15 & h) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && u < 1114112 && (f = u);
            }
            null === f ? (f = 65533, c = 1) : f > 65535 && (f -= 65536, n.push(f >>> 10 & 1023 | 55296), f = 56320 | 1023 & f), n.push(f), i += c;
          }

          return function (t) {
            var e = t.length;
            if (e <= 4096) return String.fromCharCode.apply(String, t);
            var r = "",
                n = 0;

            for (; n < e;) {
              r += String.fromCharCode.apply(String, t.slice(n, n += 4096));
            }

            return r;
          }(n);
        }

        e.kMaxLength = 2147483647, i.TYPED_ARRAY_SUPPORT = function () {
          try {
            var t = new Uint8Array(1),
                e = {
              foo: function foo() {
                return 42;
              }
            };
            return Object.setPrototypeOf(e, Uint8Array.prototype), Object.setPrototypeOf(t, e), 42 === t.foo();
          } catch (t) {
            return !1;
          }
        }(), i.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(i.prototype, "parent", {
          enumerable: !0,
          get: function get() {
            if (i.isBuffer(this)) return this.buffer;
          }
        }), Object.defineProperty(i.prototype, "offset", {
          enumerable: !0,
          get: function get() {
            if (i.isBuffer(this)) return this.byteOffset;
          }
        }), i.poolSize = 8192, i.from = function (t, e, r) {
          return o(t, e, r);
        }, Object.setPrototypeOf(i.prototype, Uint8Array.prototype), Object.setPrototypeOf(i, Uint8Array), i.alloc = function (t, e, r) {
          return function (t, e, r) {
            return s(t), t <= 0 ? n(t) : void 0 !== e ? "string" == typeof r ? n(t).fill(e, r) : n(t).fill(e) : n(t);
          }(t, e, r);
        }, i.allocUnsafe = function (t) {
          return a(t);
        }, i.allocUnsafeSlow = function (t) {
          return a(t);
        }, i.isBuffer = function (t) {
          return null != t && !0 === t._isBuffer && t !== i.prototype;
        }, i.compare = function (t, e) {
          if (L(t, Uint8Array) && (t = i.from(t, t.offset, t.byteLength)), L(e, Uint8Array) && (e = i.from(e, e.offset, e.byteLength)), !i.isBuffer(t) || !i.isBuffer(e)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (t === e) return 0;

          for (var r = t.length, n = e.length, o = 0, s = Math.min(r, n); o < s; ++o) {
            if (t[o] !== e[o]) {
              r = t[o], n = e[o];
              break;
            }
          }

          return r < n ? -1 : n < r ? 1 : 0;
        }, i.isEncoding = function (t) {
          switch (String(t).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return !0;

            default:
              return !1;
          }
        }, i.concat = function (t, e) {
          if (!Array.isArray(t)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === t.length) return i.alloc(0);
          var r;
          if (void 0 === e) for (e = 0, r = 0; r < t.length; ++r) {
            e += t[r].length;
          }
          var n = i.allocUnsafe(e),
              o = 0;

          for (r = 0; r < t.length; ++r) {
            var s = t[r];
            if (L(s, Uint8Array)) o + s.length > n.length ? i.from(s).copy(n, o) : Uint8Array.prototype.set.call(n, s, o);else {
              if (!i.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
              s.copy(n, o);
            }
            o += s.length;
          }

          return n;
        }, i.byteLength = c, i.prototype._isBuffer = !0, i.prototype.swap16 = function () {
          var t = this.length;
          if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");

          for (var e = 0; e < t; e += 2) {
            d(this, e, e + 1);
          }

          return this;
        }, i.prototype.swap32 = function () {
          var t = this.length;
          if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");

          for (var e = 0; e < t; e += 4) {
            d(this, e, e + 3), d(this, e + 1, e + 2);
          }

          return this;
        }, i.prototype.swap64 = function () {
          var t = this.length;
          if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");

          for (var e = 0; e < t; e += 8) {
            d(this, e, e + 7), d(this, e + 1, e + 6), d(this, e + 2, e + 5), d(this, e + 3, e + 4);
          }

          return this;
        }, i.prototype.toString = function () {
          var t = this.length;
          return 0 === t ? "" : 0 === arguments.length ? A(this, 0, t) : l.apply(this, arguments);
        }, i.prototype.toLocaleString = i.prototype.toString, i.prototype.equals = function (t) {
          if (!i.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
          return this === t || 0 === i.compare(this, t);
        }, i.prototype.inspect = function () {
          var t = "",
              r = e.INSPECT_MAX_BYTES;
          return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
        }, r && (i.prototype[r] = i.prototype.inspect), i.prototype.compare = function (t, e, r, n, o) {
          if (L(t, Uint8Array) && (t = i.from(t, t.offset, t.byteLength)), !i.isBuffer(t)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + babelHelpers.typeof(t));
          if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === n && (n = 0), void 0 === o && (o = this.length), e < 0 || r > t.length || n < 0 || o > this.length) throw new RangeError("out of range index");
          if (n >= o && e >= r) return 0;
          if (n >= o) return -1;
          if (e >= r) return 1;
          if (this === t) return 0;

          for (var s = (o >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (e >>>= 0), u = Math.min(s, a), h = this.slice(n, o), f = t.slice(e, r), c = 0; c < u; ++c) {
            if (h[c] !== f[c]) {
              s = h[c], a = f[c];
              break;
            }
          }

          return s < a ? -1 : a < s ? 1 : 0;
        }, i.prototype.includes = function (t, e, r) {
          return -1 !== this.indexOf(t, e, r);
        }, i.prototype.indexOf = function (t, e, r) {
          return p(this, t, e, r, !0);
        }, i.prototype.lastIndexOf = function (t, e, r) {
          return p(this, t, e, r, !1);
        }, i.prototype.write = function (t, e, r, n) {
          if (void 0 === e) n = "utf8", r = this.length, e = 0;else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;else {
            if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            e >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
          }
          var i = this.length - e;
          if ((void 0 === r || r > i) && (r = i), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          n || (n = "utf8");

          for (var o = !1;;) {
            switch (n) {
              case "hex":
                return g(this, t, e, r);

              case "utf8":
              case "utf-8":
                return w(this, t, e, r);

              case "ascii":
              case "latin1":
              case "binary":
                return _(this, t, e, r);

              case "base64":
                return M(this, t, e, r);

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return S(this, t, e, r);

              default:
                if (o) throw new TypeError("Unknown encoding: " + n);
                n = ("" + n).toLowerCase(), o = !0;
            }
          }
        }, i.prototype.toJSON = function () {
          return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0)
          };
        };

        function E(t, e, r) {
          var n = "";
          r = Math.min(t.length, r);

          for (var i = e; i < r; ++i) {
            n += String.fromCharCode(127 & t[i]);
          }

          return n;
        }

        function x(t, e, r) {
          var n = "";
          r = Math.min(t.length, r);

          for (var i = e; i < r; ++i) {
            n += String.fromCharCode(t[i]);
          }

          return n;
        }

        function k(t, e, r) {
          var n = t.length;
          (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);

          for (var i = "", o = e; o < r; ++o) {
            i += U[t[o]];
          }

          return i;
        }

        function j(t, e, r) {
          for (var n = t.slice(e, r), i = "", o = 0; o < n.length - 1; o += 2) {
            i += String.fromCharCode(n[o] + 256 * n[o + 1]);
          }

          return i;
        }

        function $(t, e, r) {
          if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
          if (t + e > r) throw new RangeError("Trying to access beyond buffer length");
        }

        function P(t, e, r, n, o, s) {
          if (!i.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (e > o || e < s) throw new RangeError('"value" argument is out of bounds');
          if (r + n > t.length) throw new RangeError("Index out of range");
        }

        function R(t, e, r, n, i, o) {
          if (r + n > t.length) throw new RangeError("Index out of range");
          if (r < 0) throw new RangeError("Index out of range");
        }

        function B(t, e, r, n, i) {
          return e = +e, r >>>= 0, i || R(t, 0, r, 4), b(t, e, r, n, 23, 4), r + 4;
        }

        function T(t, e, r, n, i) {
          return e = +e, r >>>= 0, i || R(t, 0, r, 8), b(t, e, r, n, 52, 8), r + 8;
        }

        i.prototype.slice = function (t, e) {
          var r = this.length;
          (t = ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), (e = void 0 === e ? r : ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), e < t && (e = t);
          var n = this.subarray(t, e);
          return Object.setPrototypeOf(n, i.prototype), n;
        }, i.prototype.readUintLE = i.prototype.readUIntLE = function (t, e, r) {
          t >>>= 0, e >>>= 0, r || $(t, e, this.length);

          for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);) {
            n += this[t + o] * i;
          }

          return n;
        }, i.prototype.readUintBE = i.prototype.readUIntBE = function (t, e, r) {
          t >>>= 0, e >>>= 0, r || $(t, e, this.length);

          for (var n = this[t + --e], i = 1; e > 0 && (i *= 256);) {
            n += this[t + --e] * i;
          }

          return n;
        }, i.prototype.readUint8 = i.prototype.readUInt8 = function (t, e) {
          return t >>>= 0, e || $(t, 1, this.length), this[t];
        }, i.prototype.readUint16LE = i.prototype.readUInt16LE = function (t, e) {
          return t >>>= 0, e || $(t, 2, this.length), this[t] | this[t + 1] << 8;
        }, i.prototype.readUint16BE = i.prototype.readUInt16BE = function (t, e) {
          return t >>>= 0, e || $(t, 2, this.length), this[t] << 8 | this[t + 1];
        }, i.prototype.readUint32LE = i.prototype.readUInt32LE = function (t, e) {
          return t >>>= 0, e || $(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];
        }, i.prototype.readUint32BE = i.prototype.readUInt32BE = function (t, e) {
          return t >>>= 0, e || $(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
        }, i.prototype.readIntLE = function (t, e, r) {
          t >>>= 0, e >>>= 0, r || $(t, e, this.length);

          for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);) {
            n += this[t + o] * i;
          }

          return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)), n;
        }, i.prototype.readIntBE = function (t, e, r) {
          t >>>= 0, e >>>= 0, r || $(t, e, this.length);

          for (var n = e, i = 1, o = this[t + --n]; n > 0 && (i *= 256);) {
            o += this[t + --n] * i;
          }

          return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o;
        }, i.prototype.readInt8 = function (t, e) {
          return t >>>= 0, e || $(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];
        }, i.prototype.readInt16LE = function (t, e) {
          t >>>= 0, e || $(t, 2, this.length);
          var r = this[t] | this[t + 1] << 8;
          return 32768 & r ? 4294901760 | r : r;
        }, i.prototype.readInt16BE = function (t, e) {
          t >>>= 0, e || $(t, 2, this.length);
          var r = this[t + 1] | this[t] << 8;
          return 32768 & r ? 4294901760 | r : r;
        }, i.prototype.readInt32LE = function (t, e) {
          return t >>>= 0, e || $(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
        }, i.prototype.readInt32BE = function (t, e) {
          return t >>>= 0, e || $(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
        }, i.prototype.readFloatLE = function (t, e) {
          return t >>>= 0, e || $(t, 4, this.length), m(this, t, !0, 23, 4);
        }, i.prototype.readFloatBE = function (t, e) {
          return t >>>= 0, e || $(t, 4, this.length), m(this, t, !1, 23, 4);
        }, i.prototype.readDoubleLE = function (t, e) {
          return t >>>= 0, e || $(t, 8, this.length), m(this, t, !0, 52, 8);
        }, i.prototype.readDoubleBE = function (t, e) {
          return t >>>= 0, e || $(t, 8, this.length), m(this, t, !1, 52, 8);
        }, i.prototype.writeUintLE = i.prototype.writeUIntLE = function (t, e, r, n) {
          (t = +t, e >>>= 0, r >>>= 0, n) || P(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
          var i = 1,
              o = 0;

          for (this[e] = 255 & t; ++o < r && (i *= 256);) {
            this[e + o] = t / i & 255;
          }

          return e + r;
        }, i.prototype.writeUintBE = i.prototype.writeUIntBE = function (t, e, r, n) {
          (t = +t, e >>>= 0, r >>>= 0, n) || P(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
          var i = r - 1,
              o = 1;

          for (this[e + i] = 255 & t; --i >= 0 && (o *= 256);) {
            this[e + i] = t / o & 255;
          }

          return e + r;
        }, i.prototype.writeUint8 = i.prototype.writeUInt8 = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 1, 255, 0), this[e] = 255 & t, e + 1;
        }, i.prototype.writeUint16LE = i.prototype.writeUInt16LE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 2, 65535, 0), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;
        }, i.prototype.writeUint16BE = i.prototype.writeUInt16BE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 2, 65535, 0), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;
        }, i.prototype.writeUint32LE = i.prototype.writeUInt32LE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 4, 4294967295, 0), this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t, e + 4;
        }, i.prototype.writeUint32BE = i.prototype.writeUInt32BE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 4, 4294967295, 0), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;
        }, i.prototype.writeIntLE = function (t, e, r, n) {
          if (t = +t, e >>>= 0, !n) {
            var i = Math.pow(2, 8 * r - 1);
            P(this, t, e, r, i - 1, -i);
          }

          var o = 0,
              s = 1,
              a = 0;

          for (this[e] = 255 & t; ++o < r && (s *= 256);) {
            t < 0 && 0 === a && 0 !== this[e + o - 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
          }

          return e + r;
        }, i.prototype.writeIntBE = function (t, e, r, n) {
          if (t = +t, e >>>= 0, !n) {
            var i = Math.pow(2, 8 * r - 1);
            P(this, t, e, r, i - 1, -i);
          }

          var o = r - 1,
              s = 1,
              a = 0;

          for (this[e + o] = 255 & t; --o >= 0 && (s *= 256);) {
            t < 0 && 0 === a && 0 !== this[e + o + 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;
          }

          return e + r;
        }, i.prototype.writeInt8 = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;
        }, i.prototype.writeInt16LE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 2, 32767, -32768), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;
        }, i.prototype.writeInt16BE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 2, 32767, -32768), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;
        }, i.prototype.writeInt32LE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 4, 2147483647, -2147483648), this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24, e + 4;
        }, i.prototype.writeInt32BE = function (t, e, r) {
          return t = +t, e >>>= 0, r || P(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;
        }, i.prototype.writeFloatLE = function (t, e, r) {
          return B(this, t, e, !0, r);
        }, i.prototype.writeFloatBE = function (t, e, r) {
          return B(this, t, e, !1, r);
        }, i.prototype.writeDoubleLE = function (t, e, r) {
          return T(this, t, e, !0, r);
        }, i.prototype.writeDoubleBE = function (t, e, r) {
          return T(this, t, e, !1, r);
        }, i.prototype.copy = function (t, e, r, n) {
          if (!i.isBuffer(t)) throw new TypeError("argument should be a Buffer");
          if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;
          if (0 === t.length || 0 === this.length) return 0;
          if (e < 0) throw new RangeError("targetStart out of bounds");
          if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
          if (n < 0) throw new RangeError("sourceEnd out of bounds");
          n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);
          var o = n - r;
          return this === t && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e, r, n) : Uint8Array.prototype.set.call(t, this.subarray(r, n), e), o;
        }, i.prototype.fill = function (t, e, r, n) {
          if ("string" == typeof t) {
            if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
            if ("string" == typeof n && !i.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);

            if (1 === t.length) {
              var o = t.charCodeAt(0);
              ("utf8" === n && o < 128 || "latin1" === n) && (t = o);
            }
          } else "number" == typeof t ? t &= 255 : "boolean" == typeof t && (t = Number(t));

          if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");
          if (r <= e) return this;
          var s;
          if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t) for (s = e; s < r; ++s) {
            this[s] = t;
          } else {
            var a = i.isBuffer(t) ? t : i.from(t, n),
                u = a.length;
            if (0 === u) throw new TypeError('The value "' + t + '" is invalid for argument "value"');

            for (s = 0; s < r - e; ++s) {
              this[s + e] = a[s % u];
            }
          }
          return this;
        };
        var I = /[^+/0-9A-Za-z-_]/g;

        function N(t, e) {
          var r;
          e = e || 1 / 0;

          for (var n = t.length, i = null, o = [], s = 0; s < n; ++s) {
            if ((r = t.charCodeAt(s)) > 55295 && r < 57344) {
              if (!i) {
                if (r > 56319) {
                  (e -= 3) > -1 && o.push(239, 191, 189);
                  continue;
                }

                if (s + 1 === n) {
                  (e -= 3) > -1 && o.push(239, 191, 189);
                  continue;
                }

                i = r;
                continue;
              }

              if (r < 56320) {
                (e -= 3) > -1 && o.push(239, 191, 189), i = r;
                continue;
              }

              r = 65536 + (i - 55296 << 10 | r - 56320);
            } else i && (e -= 3) > -1 && o.push(239, 191, 189);

            if (i = null, r < 128) {
              if ((e -= 1) < 0) break;
              o.push(r);
            } else if (r < 2048) {
              if ((e -= 2) < 0) break;
              o.push(r >> 6 | 192, 63 & r | 128);
            } else if (r < 65536) {
              if ((e -= 3) < 0) break;
              o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
            } else {
              if (!(r < 1114112)) throw new Error("Invalid code point");
              if ((e -= 4) < 0) break;
              o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
            }
          }

          return o;
        }

        function D(t) {
          return y.toByteArray(function (t) {
            if ((t = (t = t.split("=")[0]).trim().replace(I, "")).length < 2) return "";

            for (; t.length % 4 != 0;) {
              t += "=";
            }

            return t;
          }(t));
        }

        function C(t, e, r, n) {
          for (var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i) {
            e[i + r] = t[i];
          }

          return i;
        }

        function L(t, e) {
          return t instanceof e || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === e.name;
        }

        function q(t) {
          return t != t;
        }

        var U = function () {
          for (var t = new Array(256), e = 0; e < 16; ++e) {
            for (var r = 16 * e, n = 0; n < 16; ++n) {
              t[r + n] = "0123456789abcdef"[e] + "0123456789abcdef"[n];
            }
          }

          return t;
        }();
      }),
          g = v.Buffer;
      /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */


      v.SlowBuffer, v.INSPECT_MAX_BYTES, v.kMaxLength;
      /*! *****************************************************************************
      Copyright (c) Microsoft Corporation.
      
      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
      
      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */

      var _w = function w(t, e) {
        return (_w = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var r in e) {
            e.hasOwnProperty(r) && (t[r] = e[r]);
          }
        })(t, e);
      };

      function _(t, e) {
        function r() {
          this.constructor = t;
        }

        _w(t, e), t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r());
      }

      var _M = function M() {
        return (_M = Object.assign || function (t) {
          for (var e, r = 1, n = arguments.length; r < n; r++) {
            for (var i in e = arguments[r]) {
              Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            }
          }

          return t;
        }).apply(this, arguments);
      },
          S = function (t) {
        function e(r) {
          var n = t.call(this, r) || this;
          return Object.setPrototypeOf(n, e.prototype), n;
        }

        return _(e, t), Object.defineProperty(e.prototype, "name", {
          get: function get() {
            return "BSONError";
          },
          enumerable: !1,
          configurable: !0
        }), e;
      }(Error),
          O = function (t) {
        function e(r) {
          var n = t.call(this, r) || this;
          return Object.setPrototypeOf(n, e.prototype), n;
        }

        return _(e, t), Object.defineProperty(e.prototype, "name", {
          get: function get() {
            return "BSONTypeError";
          },
          enumerable: !1,
          configurable: !0
        }), e;
      }(TypeError);

      function A(t) {
        return t && t.Math == Math && t;
      }

      function E() {
        return A("object" === ("undefined" == typeof globalThis ? "undefined" : n(globalThis)) && globalThis) || A("object" === ("undefined" == typeof window ? "undefined" : n(window)) && window) || A("object" === ("undefined" == typeof self ? "undefined" : n(self)) && self) || A("object" === (void 0 === t ? "undefined" : n(t)) && t) || Function("return this")();
      }

      function x(t) {
        return t.toString().replace("function(", "function (");
      }

      var k = function k(t) {
        var e,
            r = "object" === n((e = E()).navigator) && "ReactNative" === e.navigator.product ? "BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values." : "BSON: No cryptographic implementation for random bytes present, falling back to a less secure implementation.";
        console.warn(r);

        for (var i = g.alloc(t), o = 0; o < t; ++o) {
          i[o] = Math.floor(256 * Math.random());
        }

        return i;
      },
          j = function () {
        if ("undefined" != typeof window) {
          var e = window.crypto || window.msCrypto;
          if (e && e.getRandomValues) return function (t) {
            return e.getRandomValues(g.alloc(t));
          };
        }

        if (void 0 !== t && t.crypto && t.crypto.getRandomValues) return function (e) {
          return t.crypto.getRandomValues(g.alloc(e));
        };
        var n;

        try {
          n = r(190).randomBytes;
        } catch (t) {}

        return n || k;
      }();

      function $(t) {
        return ["[object ArrayBuffer]", "[object SharedArrayBuffer]"].includes(Object.prototype.toString.call(t));
      }

      function P(t) {
        return "[object Uint8Array]" === Object.prototype.toString.call(t);
      }

      function R(t) {
        return "[object BigInt64Array]" === Object.prototype.toString.call(t);
      }

      function B(t) {
        return "[object BigUint64Array]" === Object.prototype.toString.call(t);
      }

      function T(t) {
        return "[object RegExp]" === Object.prototype.toString.call(t);
      }

      function I(t) {
        return N(t) && "[object Date]" === Object.prototype.toString.call(t);
      }

      function N(t) {
        return "object" === n(t) && null !== t;
      }

      function D(t, e) {
        var r = !1;
        return function () {
          for (var n = [], i = 0; i < arguments.length; i++) {
            n[i] = arguments[i];
          }

          return r || (console.warn(e), r = !0), t.apply(this, n);
        };
      }

      function C(t) {
        if (ArrayBuffer.isView(t)) return g.from(t.buffer, t.byteOffset, t.byteLength);
        if ($(t)) return g.from(t);
        throw new O("Must use either Buffer or TypedArray");
      }

      var L = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i,
          q = function q(t) {
        return "string" == typeof t && L.test(t);
      },
          U = function U(t) {
        if (!q(t)) throw new O('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" or "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".');
        var e = t.replace(/-/g, "");
        return g.from(e, "hex");
      },
          F = function F(t, e) {
        return void 0 === e && (e = !0), e ? t.toString("hex", 0, 4) + "-" + t.toString("hex", 4, 6) + "-" + t.toString("hex", 6, 8) + "-" + t.toString("hex", 8, 10) + "-" + t.toString("hex", 10, 16) : t.toString("hex");
      },
          z = Symbol("id"),
          V = function () {
        function t(e) {
          if (void 0 === e) this.id = t.generate();else if (e instanceof t) this[z] = g.from(e.id), this.__id = e.__id;else if (ArrayBuffer.isView(e) && 16 === e.byteLength) this.id = C(e);else {
            if ("string" != typeof e) throw new O("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");
            this.id = U(e);
          }
        }

        return Object.defineProperty(t.prototype, "id", {
          get: function get() {
            return this[z];
          },
          set: function set(e) {
            this[z] = e, t.cacheHexString && (this.__id = F(e));
          },
          enumerable: !1,
          configurable: !0
        }), t.prototype.toHexString = function (e) {
          if (void 0 === e && (e = !0), t.cacheHexString && this.__id) return this.__id;
          var r = F(this.id, e);
          return t.cacheHexString && (this.__id = r), r;
        }, t.prototype.toString = function (t) {
          return t ? this.id.toString(t) : this.toHexString();
        }, t.prototype.toJSON = function () {
          return this.toHexString();
        }, t.prototype.equals = function (e) {
          if (!e) return !1;
          if (e instanceof t) return e.id.equals(this.id);

          try {
            return new t(e).id.equals(this.id);
          } catch (t) {
            return !1;
          }
        }, t.prototype.toBinary = function () {
          return new K(this.id, K.SUBTYPE_UUID);
        }, t.generate = function () {
          var t = j(16);
          return t[6] = 15 & t[6] | 64, t[8] = 63 & t[8] | 128, g.from(t);
        }, t.isValid = function (e) {
          if (!e) return !1;
          if (e instanceof t) return !0;
          if ("string" == typeof e) return q(e);

          if (P(e)) {
            if (16 !== e.length) return !1;

            try {
              return parseInt(e[6].toString(16)[0], 10) === K.SUBTYPE_UUID;
            } catch (t) {
              return !1;
            }
          }

          return !1;
        }, t.createFromHexString = function (e) {
          return new t(U(e));
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return 'new UUID("' + this.toHexString() + '")';
        }, t;
      }();

      Object.defineProperty(V.prototype, "_bsontype", {
        value: "UUID"
      });

      var K = function () {
        function t(e, r) {
          if (!(this instanceof t)) return new t(e, r);
          if (!(null == e || "string" == typeof e || ArrayBuffer.isView(e) || e instanceof ArrayBuffer || Array.isArray(e))) throw new O("Binary can only be constructed from string, Buffer, TypedArray, or Array<number>");
          this.sub_type = null != r ? r : t.BSON_BINARY_SUBTYPE_DEFAULT, null == e ? (this.buffer = g.alloc(t.BUFFER_SIZE), this.position = 0) : ("string" == typeof e ? this.buffer = g.from(e, "binary") : Array.isArray(e) ? this.buffer = g.from(e) : this.buffer = C(e), this.position = this.buffer.byteLength);
        }

        return t.prototype.put = function (e) {
          if ("string" == typeof e && 1 !== e.length) throw new O("only accepts single character String");
          if ("number" != typeof e && 1 !== e.length) throw new O("only accepts single character Uint8Array or Array");
          var r;
          if ((r = "string" == typeof e ? e.charCodeAt(0) : "number" == typeof e ? e : e[0]) < 0 || r > 255) throw new O("only accepts number in a valid unsigned byte range 0-255");
          if (this.buffer.length > this.position) this.buffer[this.position++] = r;else {
            var n = g.alloc(t.BUFFER_SIZE + this.buffer.length);
            this.buffer.copy(n, 0, 0, this.buffer.length), this.buffer = n, this.buffer[this.position++] = r;
          }
        }, t.prototype.write = function (t, e) {
          if (e = "number" == typeof e ? e : this.position, this.buffer.length < e + t.length) {
            var r = g.alloc(this.buffer.length + t.length);
            this.buffer.copy(r, 0, 0, this.buffer.length), this.buffer = r;
          }

          ArrayBuffer.isView(t) ? (this.buffer.set(C(t), e), this.position = e + t.byteLength > this.position ? e + t.length : this.position) : "string" == typeof t && (this.buffer.write(t, e, t.length, "binary"), this.position = e + t.length > this.position ? e + t.length : this.position);
        }, t.prototype.read = function (t, e) {
          return e = e && e > 0 ? e : this.position, this.buffer.slice(t, t + e);
        }, t.prototype.value = function (t) {
          return (t = !!t) && this.buffer.length === this.position ? this.buffer : t ? this.buffer.slice(0, this.position) : this.buffer.toString("binary", 0, this.position);
        }, t.prototype.length = function () {
          return this.position;
        }, t.prototype.toJSON = function () {
          return this.buffer.toString("base64");
        }, t.prototype.toString = function (t) {
          return this.buffer.toString(t);
        }, t.prototype.toExtendedJSON = function (t) {
          t = t || {};
          var e = this.buffer.toString("base64"),
              r = Number(this.sub_type).toString(16);
          return t.legacy ? {
            $binary: e,
            $type: 1 === r.length ? "0" + r : r
          } : {
            $binary: {
              base64: e,
              subType: 1 === r.length ? "0" + r : r
            }
          };
        }, t.prototype.toUUID = function () {
          if (this.sub_type === t.SUBTYPE_UUID) return new V(this.buffer.slice(0, this.position));
          throw new S('Binary sub_type "' + this.sub_type + '" is not supported for converting to UUID. Only "' + t.SUBTYPE_UUID + '" is currently supported.');
        }, t.fromExtendedJSON = function (e, r) {
          var n, i;
          if (r = r || {}, "$binary" in e ? r.legacy && "string" == typeof e.$binary && "$type" in e ? (i = e.$type ? parseInt(e.$type, 16) : 0, n = g.from(e.$binary, "base64")) : "string" != typeof e.$binary && (i = e.$binary.subType ? parseInt(e.$binary.subType, 16) : 0, n = g.from(e.$binary.base64, "base64")) : "$uuid" in e && (i = 4, n = U(e.$uuid)), !n) throw new O("Unexpected Binary Extended JSON format " + JSON.stringify(e));
          return new t(n, i);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return 'new Binary(Buffer.from("' + this.value(!0).toString("hex") + '", "hex"), ' + this.sub_type + ")";
        }, t.BSON_BINARY_SUBTYPE_DEFAULT = 0, t.BUFFER_SIZE = 256, t.SUBTYPE_DEFAULT = 0, t.SUBTYPE_FUNCTION = 1, t.SUBTYPE_BYTE_ARRAY = 2, t.SUBTYPE_UUID_OLD = 3, t.SUBTYPE_UUID = 4, t.SUBTYPE_MD5 = 5, t.SUBTYPE_ENCRYPTED = 6, t.SUBTYPE_COLUMN = 7, t.SUBTYPE_USER_DEFINED = 128, t;
      }();

      Object.defineProperty(K.prototype, "_bsontype", {
        value: "Binary"
      });

      var H = function () {
        function t(e, r) {
          if (!(this instanceof t)) return new t(e, r);
          this.code = e, this.scope = r;
        }

        return t.prototype.toJSON = function () {
          return {
            code: this.code,
            scope: this.scope
          };
        }, t.prototype.toExtendedJSON = function () {
          return this.scope ? {
            $code: this.code,
            $scope: this.scope
          } : {
            $code: this.code
          };
        }, t.fromExtendedJSON = function (e) {
          return new t(e.$code, e.$scope);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          var t = this.toJSON();
          return 'new Code("' + t.code + '"' + (t.scope ? ", " + JSON.stringify(t.scope) : "") + ")";
        }, t;
      }();

      function W(t) {
        return N(t) && null != t.$id && "string" == typeof t.$ref && (null == t.$db || "string" == typeof t.$db);
      }

      Object.defineProperty(H.prototype, "_bsontype", {
        value: "Code"
      });

      var Z = function () {
        function t(e, r, n, i) {
          if (!(this instanceof t)) return new t(e, r, n, i);
          var o = e.split(".");
          2 === o.length && (n = o.shift(), e = o.shift()), this.collection = e, this.oid = r, this.db = n, this.fields = i || {};
        }

        return Object.defineProperty(t.prototype, "namespace", {
          get: function get() {
            return this.collection;
          },
          set: function set(t) {
            this.collection = t;
          },
          enumerable: !1,
          configurable: !0
        }), t.prototype.toJSON = function () {
          var t = Object.assign({
            $ref: this.collection,
            $id: this.oid
          }, this.fields);
          return null != this.db && (t.$db = this.db), t;
        }, t.prototype.toExtendedJSON = function (t) {
          t = t || {};
          var e = {
            $ref: this.collection,
            $id: this.oid
          };
          return t.legacy ? e : (this.db && (e.$db = this.db), e = Object.assign(e, this.fields));
        }, t.fromExtendedJSON = function (e) {
          var r = Object.assign({}, e);
          return delete r.$ref, delete r.$id, delete r.$db, new t(e.$ref, e.$id, e.$db, r);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          var t = void 0 === this.oid || void 0 === this.oid.toString ? this.oid : this.oid.toString();
          return 'new DBRef("' + this.namespace + '", new ObjectId("' + t + '")' + (this.db ? ', "' + this.db + '"' : "") + ")";
        }, t;
      }();

      Object.defineProperty(Z.prototype, "_bsontype", {
        value: "DBRef"
      });
      var J = void 0;

      try {
        J = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;
      } catch (t) {}

      var Y = {},
          G = {},
          Q = function () {
        function t(e, r, n) {
          if (void 0 === e && (e = 0), !(this instanceof t)) return new t(e, r, n);
          "bigint" == typeof e ? Object.assign(this, t.fromBigInt(e, !!r)) : "string" == typeof e ? Object.assign(this, t.fromString(e, !!r)) : (this.low = 0 | e, this.high = 0 | r, this.unsigned = !!n), Object.defineProperty(this, "__isLong__", {
            value: !0,
            configurable: !1,
            writable: !1,
            enumerable: !1
          });
        }

        return t.fromBits = function (e, r, n) {
          return new t(e, r, n);
        }, t.fromInt = function (e, r) {
          var n, i, o;
          return r ? (o = 0 <= (e >>>= 0) && e < 256) && (i = G[e]) ? i : (n = t.fromBits(e, (0 | e) < 0 ? -1 : 0, !0), o && (G[e] = n), n) : (o = -128 <= (e |= 0) && e < 128) && (i = Y[e]) ? i : (n = t.fromBits(e, e < 0 ? -1 : 0, !1), o && (Y[e] = n), n);
        }, t.fromNumber = function (e, r) {
          if (isNaN(e)) return r ? t.UZERO : t.ZERO;

          if (r) {
            if (e < 0) return t.UZERO;
            if (e >= 0x10000000000000000) return t.MAX_UNSIGNED_VALUE;
          } else {
            if (e <= -0x8000000000000000) return t.MIN_VALUE;
            if (e + 1 >= 0x8000000000000000) return t.MAX_VALUE;
          }

          return e < 0 ? t.fromNumber(-e, r).neg() : t.fromBits(e % 4294967296 | 0, e / 4294967296 | 0, r);
        }, t.fromBigInt = function (e, r) {
          return t.fromString(e.toString(), r);
        }, t.fromString = function (e, r, n) {
          if (0 === e.length) throw Error("empty string");
          if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e) return t.ZERO;
          if ("number" == typeof r ? (n = r, r = !1) : r = !!r, (n = n || 10) < 2 || 36 < n) throw RangeError("radix");
          var i;
          if ((i = e.indexOf("-")) > 0) throw Error("interior hyphen");
          if (0 === i) return t.fromString(e.substring(1), r, n).neg();

          for (var o = t.fromNumber(Math.pow(n, 8)), s = t.ZERO, a = 0; a < e.length; a += 8) {
            var u = Math.min(8, e.length - a),
                h = parseInt(e.substring(a, a + u), n);

            if (u < 8) {
              var f = t.fromNumber(Math.pow(n, u));
              s = s.mul(f).add(t.fromNumber(h));
            } else s = (s = s.mul(o)).add(t.fromNumber(h));
          }

          return s.unsigned = r, s;
        }, t.fromBytes = function (e, r, n) {
          return n ? t.fromBytesLE(e, r) : t.fromBytesBE(e, r);
        }, t.fromBytesLE = function (e, r) {
          return new t(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, r);
        }, t.fromBytesBE = function (e, r) {
          return new t(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], r);
        }, t.isLong = function (t) {
          return N(t) && !0 === t.__isLong__;
        }, t.fromValue = function (e, r) {
          return "number" == typeof e ? t.fromNumber(e, r) : "string" == typeof e ? t.fromString(e, r) : t.fromBits(e.low, e.high, "boolean" == typeof r ? r : e.unsigned);
        }, t.prototype.add = function (e) {
          t.isLong(e) || (e = t.fromValue(e));
          var r = this.high >>> 16,
              n = 65535 & this.high,
              i = this.low >>> 16,
              o = 65535 & this.low,
              s = e.high >>> 16,
              a = 65535 & e.high,
              u = e.low >>> 16,
              h = 0,
              f = 0,
              c = 0,
              l = 0;
          return c += (l += o + (65535 & e.low)) >>> 16, l &= 65535, f += (c += i + u) >>> 16, c &= 65535, h += (f += n + a) >>> 16, f &= 65535, h += r + s, h &= 65535, t.fromBits(c << 16 | l, h << 16 | f, this.unsigned);
        }, t.prototype.and = function (e) {
          return t.isLong(e) || (e = t.fromValue(e)), t.fromBits(this.low & e.low, this.high & e.high, this.unsigned);
        }, t.prototype.compare = function (e) {
          if (t.isLong(e) || (e = t.fromValue(e)), this.eq(e)) return 0;
          var r = this.isNegative(),
              n = e.isNegative();
          return r && !n ? -1 : !r && n ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;
        }, t.prototype.comp = function (t) {
          return this.compare(t);
        }, t.prototype.divide = function (e) {
          if (t.isLong(e) || (e = t.fromValue(e)), e.isZero()) throw Error("division by zero");

          if (J) {
            if (!this.unsigned && -2147483648 === this.high && -1 === e.low && -1 === e.high) return this;
            var r = (this.unsigned ? J.div_u : J.div_s)(this.low, this.high, e.low, e.high);
            return t.fromBits(r, J.get_high(), this.unsigned);
          }

          if (this.isZero()) return this.unsigned ? t.UZERO : t.ZERO;
          var n, i, o;

          if (this.unsigned) {
            if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return t.UZERO;
            if (e.gt(this.shru(1))) return t.UONE;
            o = t.UZERO;
          } else {
            if (this.eq(t.MIN_VALUE)) return e.eq(t.ONE) || e.eq(t.NEG_ONE) ? t.MIN_VALUE : e.eq(t.MIN_VALUE) ? t.ONE : (n = this.shr(1).div(e).shl(1)).eq(t.ZERO) ? e.isNegative() ? t.ONE : t.NEG_ONE : (i = this.sub(e.mul(n)), o = n.add(i.div(e)));
            if (e.eq(t.MIN_VALUE)) return this.unsigned ? t.UZERO : t.ZERO;
            if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
            if (e.isNegative()) return this.div(e.neg()).neg();
            o = t.ZERO;
          }

          for (i = this; i.gte(e);) {
            n = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));

            for (var s = Math.ceil(Math.log(n) / Math.LN2), a = s <= 48 ? 1 : Math.pow(2, s - 48), u = t.fromNumber(n), h = u.mul(e); h.isNegative() || h.gt(i);) {
              n -= a, h = (u = t.fromNumber(n, this.unsigned)).mul(e);
            }

            u.isZero() && (u = t.ONE), o = o.add(u), i = i.sub(h);
          }

          return o;
        }, t.prototype.div = function (t) {
          return this.divide(t);
        }, t.prototype.equals = function (e) {
          return t.isLong(e) || (e = t.fromValue(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;
        }, t.prototype.eq = function (t) {
          return this.equals(t);
        }, t.prototype.getHighBits = function () {
          return this.high;
        }, t.prototype.getHighBitsUnsigned = function () {
          return this.high >>> 0;
        }, t.prototype.getLowBits = function () {
          return this.low;
        }, t.prototype.getLowBitsUnsigned = function () {
          return this.low >>> 0;
        }, t.prototype.getNumBitsAbs = function () {
          if (this.isNegative()) return this.eq(t.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
          var e,
              r = 0 !== this.high ? this.high : this.low;

          for (e = 31; e > 0 && 0 == (r & 1 << e); e--) {
            ;
          }

          return 0 !== this.high ? e + 33 : e + 1;
        }, t.prototype.greaterThan = function (t) {
          return this.comp(t) > 0;
        }, t.prototype.gt = function (t) {
          return this.greaterThan(t);
        }, t.prototype.greaterThanOrEqual = function (t) {
          return this.comp(t) >= 0;
        }, t.prototype.gte = function (t) {
          return this.greaterThanOrEqual(t);
        }, t.prototype.ge = function (t) {
          return this.greaterThanOrEqual(t);
        }, t.prototype.isEven = function () {
          return 0 == (1 & this.low);
        }, t.prototype.isNegative = function () {
          return !this.unsigned && this.high < 0;
        }, t.prototype.isOdd = function () {
          return 1 == (1 & this.low);
        }, t.prototype.isPositive = function () {
          return this.unsigned || this.high >= 0;
        }, t.prototype.isZero = function () {
          return 0 === this.high && 0 === this.low;
        }, t.prototype.lessThan = function (t) {
          return this.comp(t) < 0;
        }, t.prototype.lt = function (t) {
          return this.lessThan(t);
        }, t.prototype.lessThanOrEqual = function (t) {
          return this.comp(t) <= 0;
        }, t.prototype.lte = function (t) {
          return this.lessThanOrEqual(t);
        }, t.prototype.modulo = function (e) {
          if (t.isLong(e) || (e = t.fromValue(e)), J) {
            var r = (this.unsigned ? J.rem_u : J.rem_s)(this.low, this.high, e.low, e.high);
            return t.fromBits(r, J.get_high(), this.unsigned);
          }

          return this.sub(this.div(e).mul(e));
        }, t.prototype.mod = function (t) {
          return this.modulo(t);
        }, t.prototype.rem = function (t) {
          return this.modulo(t);
        }, t.prototype.multiply = function (e) {
          if (this.isZero()) return t.ZERO;

          if (t.isLong(e) || (e = t.fromValue(e)), J) {
            var r = J.mul(this.low, this.high, e.low, e.high);
            return t.fromBits(r, J.get_high(), this.unsigned);
          }

          if (e.isZero()) return t.ZERO;
          if (this.eq(t.MIN_VALUE)) return e.isOdd() ? t.MIN_VALUE : t.ZERO;
          if (e.eq(t.MIN_VALUE)) return this.isOdd() ? t.MIN_VALUE : t.ZERO;
          if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
          if (e.isNegative()) return this.mul(e.neg()).neg();
          if (this.lt(t.TWO_PWR_24) && e.lt(t.TWO_PWR_24)) return t.fromNumber(this.toNumber() * e.toNumber(), this.unsigned);
          var n = this.high >>> 16,
              i = 65535 & this.high,
              o = this.low >>> 16,
              s = 65535 & this.low,
              a = e.high >>> 16,
              u = 65535 & e.high,
              h = e.low >>> 16,
              f = 65535 & e.low,
              c = 0,
              l = 0,
              d = 0,
              p = 0;
          return d += (p += s * f) >>> 16, p &= 65535, l += (d += o * f) >>> 16, d &= 65535, l += (d += s * h) >>> 16, d &= 65535, c += (l += i * f) >>> 16, l &= 65535, c += (l += o * h) >>> 16, l &= 65535, c += (l += s * u) >>> 16, l &= 65535, c += n * f + i * h + o * u + s * a, c &= 65535, t.fromBits(d << 16 | p, c << 16 | l, this.unsigned);
        }, t.prototype.mul = function (t) {
          return this.multiply(t);
        }, t.prototype.negate = function () {
          return !this.unsigned && this.eq(t.MIN_VALUE) ? t.MIN_VALUE : this.not().add(t.ONE);
        }, t.prototype.neg = function () {
          return this.negate();
        }, t.prototype.not = function () {
          return t.fromBits(~this.low, ~this.high, this.unsigned);
        }, t.prototype.notEquals = function (t) {
          return !this.equals(t);
        }, t.prototype.neq = function (t) {
          return this.notEquals(t);
        }, t.prototype.ne = function (t) {
          return this.notEquals(t);
        }, t.prototype.or = function (e) {
          return t.isLong(e) || (e = t.fromValue(e)), t.fromBits(this.low | e.low, this.high | e.high, this.unsigned);
        }, t.prototype.shiftLeft = function (e) {
          return t.isLong(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? t.fromBits(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : t.fromBits(0, this.low << e - 32, this.unsigned);
        }, t.prototype.shl = function (t) {
          return this.shiftLeft(t);
        }, t.prototype.shiftRight = function (e) {
          return t.isLong(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? t.fromBits(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : t.fromBits(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);
        }, t.prototype.shr = function (t) {
          return this.shiftRight(t);
        }, t.prototype.shiftRightUnsigned = function (e) {
          if (t.isLong(e) && (e = e.toInt()), 0 === (e &= 63)) return this;
          var r = this.high;

          if (e < 32) {
            var n = this.low;
            return t.fromBits(n >>> e | r << 32 - e, r >>> e, this.unsigned);
          }

          return 32 === e ? t.fromBits(r, 0, this.unsigned) : t.fromBits(r >>> e - 32, 0, this.unsigned);
        }, t.prototype.shr_u = function (t) {
          return this.shiftRightUnsigned(t);
        }, t.prototype.shru = function (t) {
          return this.shiftRightUnsigned(t);
        }, t.prototype.subtract = function (e) {
          return t.isLong(e) || (e = t.fromValue(e)), this.add(e.neg());
        }, t.prototype.sub = function (t) {
          return this.subtract(t);
        }, t.prototype.toInt = function () {
          return this.unsigned ? this.low >>> 0 : this.low;
        }, t.prototype.toNumber = function () {
          return this.unsigned ? 4294967296 * (this.high >>> 0) + (this.low >>> 0) : 4294967296 * this.high + (this.low >>> 0);
        }, t.prototype.toBigInt = function () {
          return BigInt(this.toString());
        }, t.prototype.toBytes = function (t) {
          return t ? this.toBytesLE() : this.toBytesBE();
        }, t.prototype.toBytesLE = function () {
          var t = this.high,
              e = this.low;
          return [255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24, 255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24];
        }, t.prototype.toBytesBE = function () {
          var t = this.high,
              e = this.low;
          return [t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t, e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e];
        }, t.prototype.toSigned = function () {
          return this.unsigned ? t.fromBits(this.low, this.high, !1) : this;
        }, t.prototype.toString = function (e) {
          if ((e = e || 10) < 2 || 36 < e) throw RangeError("radix");
          if (this.isZero()) return "0";

          if (this.isNegative()) {
            if (this.eq(t.MIN_VALUE)) {
              var r = t.fromNumber(e),
                  n = this.div(r),
                  i = n.mul(r).sub(this);
              return n.toString(e) + i.toInt().toString(e);
            }

            return "-" + this.neg().toString(e);
          }

          for (var o = t.fromNumber(Math.pow(e, 6), this.unsigned), s = this, a = "";;) {
            var u = s.div(o),
                h = (s.sub(u.mul(o)).toInt() >>> 0).toString(e);
            if ((s = u).isZero()) return h + a;

            for (; h.length < 6;) {
              h = "0" + h;
            }

            a = "" + h + a;
          }
        }, t.prototype.toUnsigned = function () {
          return this.unsigned ? this : t.fromBits(this.low, this.high, !0);
        }, t.prototype.xor = function (e) {
          return t.isLong(e) || (e = t.fromValue(e)), t.fromBits(this.low ^ e.low, this.high ^ e.high, this.unsigned);
        }, t.prototype.eqz = function () {
          return this.isZero();
        }, t.prototype.le = function (t) {
          return this.lessThanOrEqual(t);
        }, t.prototype.toExtendedJSON = function (t) {
          return t && t.relaxed ? this.toNumber() : {
            $numberLong: this.toString()
          };
        }, t.fromExtendedJSON = function (e, r) {
          var n = t.fromString(e.$numberLong);
          return r && r.relaxed ? n.toNumber() : n;
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return 'new Long("' + this.toString() + '"' + (this.unsigned ? ", true" : "") + ")";
        }, t.TWO_PWR_24 = t.fromInt(1 << 24), t.MAX_UNSIGNED_VALUE = t.fromBits(-1, -1, !0), t.ZERO = t.fromInt(0), t.UZERO = t.fromInt(0, !0), t.ONE = t.fromInt(1), t.UONE = t.fromInt(1, !0), t.NEG_ONE = t.fromInt(-1), t.MAX_VALUE = t.fromBits(-1, 2147483647, !1), t.MIN_VALUE = t.fromBits(0, -2147483648, !1), t;
      }();

      Object.defineProperty(Q.prototype, "__isLong__", {
        value: !0
      }), Object.defineProperty(Q.prototype, "_bsontype", {
        value: "Long"
      });
      var X = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/,
          tt = /^(\+|-)?(Infinity|inf)$/i,
          et = /^(\+|-)?NaN$/i,
          rt = [124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse(),
          nt = [248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse(),
          it = [120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse(),
          ot = /^([-+])?(\d+)?$/;

      function st(t) {
        return !isNaN(parseInt(t, 10));
      }

      function at(t) {
        var e = Q.fromNumber(1e9),
            r = Q.fromNumber(0);
        if (!(t.parts[0] || t.parts[1] || t.parts[2] || t.parts[3])) return {
          quotient: t,
          rem: r
        };

        for (var n = 0; n <= 3; n++) {
          r = (r = r.shiftLeft(32)).add(new Q(t.parts[n], 0)), t.parts[n] = r.div(e).low, r = r.modulo(e);
        }

        return {
          quotient: t,
          rem: r
        };
      }

      function ut(t, e) {
        throw new O('"' + t + '" is not a valid Decimal128 string - ' + e);
      }

      var ht = function () {
        function t(e) {
          if (!(this instanceof t)) return new t(e);
          this.bytes = "string" == typeof e ? t.fromString(e).bytes : e;
        }

        return t.fromString = function (e) {
          var r,
              n = !1,
              i = !1,
              o = !1,
              s = 0,
              a = 0,
              u = 0,
              h = 0,
              f = 0,
              c = [0],
              l = 0,
              d = 0,
              p = 0,
              y = 0,
              m = 0,
              b = 0,
              v = new Q(0, 0),
              w = new Q(0, 0),
              _ = 0;
          if (e.length >= 7e3) throw new O(e + " not a valid Decimal128 string");
          var M = e.match(X),
              S = e.match(tt),
              A = e.match(et);
          if (!M && !S && !A || 0 === e.length) throw new O(e + " not a valid Decimal128 string");

          if (M) {
            var E = M[2],
                x = M[4],
                k = M[5],
                j = M[6];
            x && void 0 === j && ut(e, "missing exponent power"), x && void 0 === E && ut(e, "missing exponent base"), void 0 === x && (k || j) && ut(e, "missing e before exponent");
          }

          if ("+" !== e[_] && "-" !== e[_] || (n = "-" === e[_++]), !st(e[_]) && "." !== e[_]) {
            if ("i" === e[_] || "I" === e[_]) return new t(g.from(n ? nt : it));
            if ("N" === e[_]) return new t(g.from(rt));
          }

          for (; st(e[_]) || "." === e[_];) {
            "." !== e[_] ? (l < 34 && ("0" !== e[_] || o) && (o || (f = a), o = !0, c[d++] = parseInt(e[_], 10), l += 1), o && (u += 1), i && (h += 1), a += 1, _ += 1) : (i && ut(e, "contains multiple periods"), i = !0, _ += 1);
          }

          if (i && !a) throw new O(e + " not a valid Decimal128 string");

          if ("e" === e[_] || "E" === e[_]) {
            var $ = e.substr(++_).match(ot);
            if (!$ || !$[2]) return new t(g.from(rt));
            m = parseInt($[0], 10), _ += $[0].length;
          }

          if (e[_]) return new t(g.from(rt));

          if (p = 0, l) {
            if (y = l - 1, 1 !== (s = u)) for (; 0 === c[f + s - 1];) {
              s -= 1;
            }
          } else p = 0, y = 0, c[0] = 0, u = 1, l = 1, s = 0;

          for (m <= h && h - m > 16384 ? m = -6176 : m -= h; m > 6111;) {
            if ((y += 1) - p > 34) {
              if (c.join("").match(/^0+$/)) {
                m = 6111;
                break;
              }

              ut(e, "overflow");
            }

            m -= 1;
          }

          for (; m < -6176 || l < u;) {
            if (0 === y && s < l) {
              m = -6176, s = 0;
              break;
            }

            if (l < u ? u -= 1 : y -= 1, m < 6111) m += 1;else {
              if (c.join("").match(/^0+$/)) {
                m = 6111;
                break;
              }

              ut(e, "overflow");
            }
          }

          if (y - p + 1 < s) {
            var P = a;
            i && (f += 1, P += 1), n && (f += 1, P += 1);
            var R = parseInt(e[f + y + 1], 10),
                B = 0;
            if (R >= 5 && (B = 1, 5 === R)) for (B = c[y] % 2 == 1 ? 1 : 0, b = f + y + 2; b < P; b++) {
              if (parseInt(e[b], 10)) {
                B = 1;
                break;
              }
            }
            if (B) for (var T = y; T >= 0; T--) {
              if (++c[T] > 9 && (c[T] = 0, 0 === T)) {
                if (!(m < 6111)) return new t(g.from(n ? nt : it));
                m += 1, c[T] = 1;
              }
            }
          }

          if (v = Q.fromNumber(0), w = Q.fromNumber(0), 0 === s) v = Q.fromNumber(0), w = Q.fromNumber(0);else if (y - p < 17) {
            T = p;

            for (w = Q.fromNumber(c[T++]), v = new Q(0, 0); T <= y; T++) {
              w = (w = w.multiply(Q.fromNumber(10))).add(Q.fromNumber(c[T]));
            }
          } else {
            T = p;

            for (v = Q.fromNumber(c[T++]); T <= y - 17; T++) {
              v = (v = v.multiply(Q.fromNumber(10))).add(Q.fromNumber(c[T]));
            }

            for (w = Q.fromNumber(c[T++]); T <= y; T++) {
              w = (w = w.multiply(Q.fromNumber(10))).add(Q.fromNumber(c[T]));
            }
          }

          var I,
              N,
              D,
              C,
              L = function (t, e) {
            if (!t && !e) return {
              high: Q.fromNumber(0),
              low: Q.fromNumber(0)
            };
            var r = t.shiftRightUnsigned(32),
                n = new Q(t.getLowBits(), 0),
                i = e.shiftRightUnsigned(32),
                o = new Q(e.getLowBits(), 0),
                s = r.multiply(i),
                a = r.multiply(o),
                u = n.multiply(i),
                h = n.multiply(o);
            return s = s.add(a.shiftRightUnsigned(32)), a = new Q(a.getLowBits(), 0).add(u).add(h.shiftRightUnsigned(32)), {
              high: s = s.add(a.shiftRightUnsigned(32)),
              low: h = a.shiftLeft(32).add(new Q(h.getLowBits(), 0))
            };
          }(v, Q.fromString("100000000000000000"));

          L.low = L.low.add(w), I = L.low, N = w, D = I.high >>> 0, C = N.high >>> 0, (D < C || D === C && I.low >>> 0 < N.low >>> 0) && (L.high = L.high.add(Q.fromNumber(1))), r = m + 6176;
          var q = {
            low: Q.fromNumber(0),
            high: Q.fromNumber(0)
          };
          L.high.shiftRightUnsigned(49).and(Q.fromNumber(1)).equals(Q.fromNumber(1)) ? (q.high = q.high.or(Q.fromNumber(3).shiftLeft(61)), q.high = q.high.or(Q.fromNumber(r).and(Q.fromNumber(16383).shiftLeft(47))), q.high = q.high.or(L.high.and(Q.fromNumber(0x7fffffffffff)))) : (q.high = q.high.or(Q.fromNumber(16383 & r).shiftLeft(49)), q.high = q.high.or(L.high.and(Q.fromNumber(562949953421311)))), q.low = L.low, n && (q.high = q.high.or(Q.fromString("9223372036854775808")));
          var U = g.alloc(16);
          return _ = 0, U[_++] = 255 & q.low.low, U[_++] = q.low.low >> 8 & 255, U[_++] = q.low.low >> 16 & 255, U[_++] = q.low.low >> 24 & 255, U[_++] = 255 & q.low.high, U[_++] = q.low.high >> 8 & 255, U[_++] = q.low.high >> 16 & 255, U[_++] = q.low.high >> 24 & 255, U[_++] = 255 & q.high.low, U[_++] = q.high.low >> 8 & 255, U[_++] = q.high.low >> 16 & 255, U[_++] = q.high.low >> 24 & 255, U[_++] = 255 & q.high.high, U[_++] = q.high.high >> 8 & 255, U[_++] = q.high.high >> 16 & 255, U[_++] = q.high.high >> 24 & 255, new t(U);
        }, t.prototype.toString = function () {
          for (var t, e = 0, r = new Array(36), n = 0; n < r.length; n++) {
            r[n] = 0;
          }

          var i,
              o,
              s,
              a = 0,
              u = !1,
              h = {
            parts: [0, 0, 0, 0]
          },
              f = [];
          a = 0;
          var c = this.bytes,
              l = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24,
              d = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24,
              p = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24,
              y = c[a++] | c[a++] << 8 | c[a++] << 16 | c[a++] << 24;
          a = 0, {
            low: new Q(l, d),
            high: new Q(p, y)
          }.high.lessThan(Q.ZERO) && f.push("-");
          var m = y >> 26 & 31;

          if (m >> 3 == 3) {
            if (30 === m) return f.join("") + "Infinity";
            if (31 === m) return "NaN";
            t = y >> 15 & 16383, i = 8 + (y >> 14 & 1);
          } else i = y >> 14 & 7, t = y >> 17 & 16383;

          var b = t - 6176;
          if (h.parts[0] = (16383 & y) + ((15 & i) << 14), h.parts[1] = p, h.parts[2] = d, h.parts[3] = l, 0 === h.parts[0] && 0 === h.parts[1] && 0 === h.parts[2] && 0 === h.parts[3]) u = !0;else for (s = 3; s >= 0; s--) {
            var v = 0,
                g = at(h);
            if (h = g.quotient, v = g.rem.low) for (o = 8; o >= 0; o--) {
              r[9 * s + o] = v % 10, v = Math.floor(v / 10);
            }
          }
          if (u) e = 1, r[a] = 0;else for (e = 36; !r[a];) {
            e -= 1, a += 1;
          }
          var w = e - 1 + b;

          if (w >= 34 || w <= -7 || b > 0) {
            if (e > 34) return f.push("0"), b > 0 ? f.push("E+" + b) : b < 0 && f.push("E" + b), f.join("");
            f.push("" + r[a++]), (e -= 1) && f.push(".");

            for (n = 0; n < e; n++) {
              f.push("" + r[a++]);
            }

            f.push("E"), w > 0 ? f.push("+" + w) : f.push("" + w);
          } else if (b >= 0) for (n = 0; n < e; n++) {
            f.push("" + r[a++]);
          } else {
            var _ = e + b;

            if (_ > 0) for (n = 0; n < _; n++) {
              f.push("" + r[a++]);
            } else f.push("0");

            for (f.push("."); _++ < 0;) {
              f.push("0");
            }

            for (n = 0; n < e - Math.max(_ - 1, 0); n++) {
              f.push("" + r[a++]);
            }
          }

          return f.join("");
        }, t.prototype.toJSON = function () {
          return {
            $numberDecimal: this.toString()
          };
        }, t.prototype.toExtendedJSON = function () {
          return {
            $numberDecimal: this.toString()
          };
        }, t.fromExtendedJSON = function (e) {
          return t.fromString(e.$numberDecimal);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return 'new Decimal128("' + this.toString() + '")';
        }, t;
      }();

      Object.defineProperty(ht.prototype, "_bsontype", {
        value: "Decimal128"
      });

      var ft = function () {
        function t(e) {
          if (!(this instanceof t)) return new t(e);
          e instanceof Number && (e = e.valueOf()), this.value = +e;
        }

        return t.prototype.valueOf = function () {
          return this.value;
        }, t.prototype.toJSON = function () {
          return this.value;
        }, t.prototype.toString = function (t) {
          return this.value.toString(t);
        }, t.prototype.toExtendedJSON = function (t) {
          return t && (t.legacy || t.relaxed && isFinite(this.value)) ? this.value : Object.is(Math.sign(this.value), -0) ? {
            $numberDouble: "-" + this.value.toFixed(1)
          } : (Number.isInteger(this.value) ? (e = this.value.toFixed(1)).length >= 13 && (e = this.value.toExponential(13).toUpperCase()) : e = this.value.toString(), {
            $numberDouble: e
          });
          var e;
        }, t.fromExtendedJSON = function (e, r) {
          var n = parseFloat(e.$numberDouble);
          return r && r.relaxed ? n : new t(n);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return "new Double(" + this.toExtendedJSON().$numberDouble + ")";
        }, t;
      }();

      Object.defineProperty(ft.prototype, "_bsontype", {
        value: "Double"
      });

      var ct = function () {
        function t(e) {
          if (!(this instanceof t)) return new t(e);
          e instanceof Number && (e = e.valueOf()), this.value = 0 | +e;
        }

        return t.prototype.valueOf = function () {
          return this.value;
        }, t.prototype.toString = function (t) {
          return this.value.toString(t);
        }, t.prototype.toJSON = function () {
          return this.value;
        }, t.prototype.toExtendedJSON = function (t) {
          return t && (t.relaxed || t.legacy) ? this.value : {
            $numberInt: this.value.toString()
          };
        }, t.fromExtendedJSON = function (e, r) {
          return r && r.relaxed ? parseInt(e.$numberInt, 10) : new t(e.$numberInt);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return "new Int32(" + this.valueOf() + ")";
        }, t;
      }();

      Object.defineProperty(ct.prototype, "_bsontype", {
        value: "Int32"
      });

      var lt = function () {
        function t() {
          if (!(this instanceof t)) return new t();
        }

        return t.prototype.toExtendedJSON = function () {
          return {
            $maxKey: 1
          };
        }, t.fromExtendedJSON = function () {
          return new t();
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return "new MaxKey()";
        }, t;
      }();

      Object.defineProperty(lt.prototype, "_bsontype", {
        value: "MaxKey"
      });

      var dt = function () {
        function t() {
          if (!(this instanceof t)) return new t();
        }

        return t.prototype.toExtendedJSON = function () {
          return {
            $minKey: 1
          };
        }, t.fromExtendedJSON = function () {
          return new t();
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return "new MinKey()";
        }, t;
      }();

      Object.defineProperty(dt.prototype, "_bsontype", {
        value: "MinKey"
      });

      var pt = new RegExp("^[0-9a-fA-F]{24}$"),
          yt = null,
          mt = Symbol("id"),
          bt = function () {
        function t(e) {
          if (!(this instanceof t)) return new t(e);
          var r;

          if ("object" === n(e) && e && "id" in e) {
            if ("string" != typeof e.id && !ArrayBuffer.isView(e.id)) throw new O("Argument passed in must have an id that is of type string or Buffer");
            r = "toHexString" in e && "function" == typeof e.toHexString ? g.from(e.toHexString(), "hex") : e.id;
          } else r = e;

          if (null == r || "number" == typeof r) this[mt] = t.generate("number" == typeof r ? r : void 0);else if (ArrayBuffer.isView(r) && 12 === r.byteLength) this[mt] = C(r);else {
            if ("string" != typeof r) throw new O("Argument passed in does not match the accepted types");

            if (12 === r.length) {
              var i = g.from(r);
              if (12 !== i.byteLength) throw new O("Argument passed in must be a string of 12 bytes");
              this[mt] = i;
            } else {
              if (24 !== r.length || !pt.test(r)) throw new O("Argument passed in must be a string of 12 bytes or a string of 24 hex characters");
              this[mt] = g.from(r, "hex");
            }
          }
          t.cacheHexString && (this.__id = this.id.toString("hex"));
        }

        return Object.defineProperty(t.prototype, "id", {
          get: function get() {
            return this[mt];
          },
          set: function set(e) {
            this[mt] = e, t.cacheHexString && (this.__id = e.toString("hex"));
          },
          enumerable: !1,
          configurable: !0
        }), Object.defineProperty(t.prototype, "generationTime", {
          get: function get() {
            return this.id.readInt32BE(0);
          },
          set: function set(t) {
            this.id.writeUInt32BE(t, 0);
          },
          enumerable: !1,
          configurable: !0
        }), t.prototype.toHexString = function () {
          if (t.cacheHexString && this.__id) return this.__id;
          var e = this.id.toString("hex");
          return t.cacheHexString && !this.__id && (this.__id = e), e;
        }, t.getInc = function () {
          return t.index = (t.index + 1) % 16777215;
        }, t.generate = function (e) {
          "number" != typeof e && (e = Math.floor(Date.now() / 1e3));
          var r = t.getInc(),
              n = g.alloc(12);
          return n.writeUInt32BE(e, 0), null === yt && (yt = j(5)), n[4] = yt[0], n[5] = yt[1], n[6] = yt[2], n[7] = yt[3], n[8] = yt[4], n[11] = 255 & r, n[10] = r >> 8 & 255, n[9] = r >> 16 & 255, n;
        }, t.prototype.toString = function (t) {
          return t ? this.id.toString(t) : this.toHexString();
        }, t.prototype.toJSON = function () {
          return this.toHexString();
        }, t.prototype.equals = function (e) {
          return null != e && (e instanceof t ? this.toString() === e.toString() : "string" == typeof e && t.isValid(e) && 12 === e.length && P(this.id) ? e === g.prototype.toString.call(this.id, "latin1") : "string" == typeof e && t.isValid(e) && 24 === e.length ? e.toLowerCase() === this.toHexString() : "string" == typeof e && t.isValid(e) && 12 === e.length ? g.from(e).equals(this.id) : "object" === n(e) && "toHexString" in e && "function" == typeof e.toHexString && e.toHexString() === this.toHexString());
        }, t.prototype.getTimestamp = function () {
          var t = new Date(),
              e = this.id.readUInt32BE(0);
          return t.setTime(1e3 * Math.floor(e)), t;
        }, t.createPk = function () {
          return new t();
        }, t.createFromTime = function (e) {
          var r = g.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
          return r.writeUInt32BE(e, 0), new t(r);
        }, t.createFromHexString = function (e) {
          if (void 0 === e || null != e && 24 !== e.length) throw new O("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
          return new t(g.from(e, "hex"));
        }, t.isValid = function (e) {
          return null != e && ("number" == typeof e || ("string" == typeof e ? 12 === e.length || 24 === e.length && pt.test(e) : e instanceof t || !(!P(e) || 12 !== e.length) || "object" === n(e) && "toHexString" in e && "function" == typeof e.toHexString && ("string" == typeof e.id ? 12 === e.id.length : 24 === e.toHexString().length && pt.test(e.id.toString("hex")))));
        }, t.prototype.toExtendedJSON = function () {
          return this.toHexString ? {
            $oid: this.toHexString()
          } : {
            $oid: this.toString("hex")
          };
        }, t.fromExtendedJSON = function (e) {
          return new t(e.$oid);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t.prototype.inspect = function () {
          return 'new ObjectId("' + this.toHexString() + '")';
        }, t.index = Math.floor(16777215 * Math.random()), t;
      }();

      Object.defineProperty(bt.prototype, "generate", {
        value: D(function (t) {
          return bt.generate(t);
        }, "Please use the static `ObjectId.generate(time)` instead")
      }), Object.defineProperty(bt.prototype, "getInc", {
        value: D(function () {
          return bt.getInc();
        }, "Please use the static `ObjectId.getInc()` instead")
      }), Object.defineProperty(bt.prototype, "get_inc", {
        value: D(function () {
          return bt.getInc();
        }, "Please use the static `ObjectId.getInc()` instead")
      }), Object.defineProperty(bt, "get_inc", {
        value: D(function () {
          return bt.getInc();
        }, "Please use the static `ObjectId.getInc()` instead")
      }), Object.defineProperty(bt.prototype, "_bsontype", {
        value: "ObjectID"
      });

      var vt = function () {
        function t(e, r) {
          if (!(this instanceof t)) return new t(e, r);
          if (this.pattern = e, this.options = (null != r ? r : "").split("").sort().join(""), -1 !== this.pattern.indexOf("\0")) throw new S("BSON Regex patterns cannot contain null bytes, found: " + JSON.stringify(this.pattern));
          if (-1 !== this.options.indexOf("\0")) throw new S("BSON Regex options cannot contain null bytes, found: " + JSON.stringify(this.options));

          for (var n = 0; n < this.options.length; n++) {
            if ("i" !== this.options[n] && "m" !== this.options[n] && "x" !== this.options[n] && "l" !== this.options[n] && "s" !== this.options[n] && "u" !== this.options[n]) throw new S("The regular expression option [" + this.options[n] + "] is not supported");
          }
        }

        return t.parseOptions = function (t) {
          return t ? t.split("").sort().join("") : "";
        }, t.prototype.toExtendedJSON = function (t) {
          return (t = t || {}).legacy ? {
            $regex: this.pattern,
            $options: this.options
          } : {
            $regularExpression: {
              pattern: this.pattern,
              options: this.options
            }
          };
        }, t.fromExtendedJSON = function (e) {
          if ("$regex" in e) {
            if ("string" == typeof e.$regex) return new t(e.$regex, t.parseOptions(e.$options));
            if ("BSONRegExp" === e.$regex._bsontype) return e;
          }

          if ("$regularExpression" in e) return new t(e.$regularExpression.pattern, t.parseOptions(e.$regularExpression.options));
          throw new O("Unexpected BSONRegExp EJSON object form: " + JSON.stringify(e));
        }, t;
      }();

      Object.defineProperty(vt.prototype, "_bsontype", {
        value: "BSONRegExp"
      });

      var gt = function () {
        function t(e) {
          if (!(this instanceof t)) return new t(e);
          this.value = e;
        }

        return t.prototype.valueOf = function () {
          return this.value;
        }, t.prototype.toString = function () {
          return this.value;
        }, t.prototype.inspect = function () {
          return 'new BSONSymbol("' + this.value + '")';
        }, t.prototype.toJSON = function () {
          return this.value;
        }, t.prototype.toExtendedJSON = function () {
          return {
            $symbol: this.value
          };
        }, t.fromExtendedJSON = function (e) {
          return new t(e.$symbol);
        }, t.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, t;
      }();

      Object.defineProperty(gt.prototype, "_bsontype", {
        value: "Symbol"
      });

      var wt = Q,
          _t = function (t) {
        function e(r, n) {
          var i = this;
          return i instanceof e ? (i = Q.isLong(r) ? t.call(this, r.low, r.high, !0) || this : N(r) && void 0 !== r.t && void 0 !== r.i ? t.call(this, r.i, r.t, !0) || this : t.call(this, r, n, !0) || this, Object.defineProperty(i, "_bsontype", {
            value: "Timestamp",
            writable: !1,
            configurable: !1,
            enumerable: !1
          }), i) : new e(r, n);
        }

        return _(e, t), e.prototype.toJSON = function () {
          return {
            $timestamp: this.toString()
          };
        }, e.fromInt = function (t) {
          return new e(Q.fromInt(t, !0));
        }, e.fromNumber = function (t) {
          return new e(Q.fromNumber(t, !0));
        }, e.fromBits = function (t, r) {
          return new e(t, r);
        }, e.fromString = function (t, r) {
          return new e(Q.fromString(t, !0, r));
        }, e.prototype.toExtendedJSON = function () {
          return {
            $timestamp: {
              t: this.high >>> 0,
              i: this.low >>> 0
            }
          };
        }, e.fromExtendedJSON = function (t) {
          return new e(t.$timestamp);
        }, e.prototype[Symbol.for("nodejs.util.inspect.custom")] = function () {
          return this.inspect();
        }, e.prototype.inspect = function () {
          return "new Timestamp({ t: " + this.getHighBits() + ", i: " + this.getLowBits() + " })";
        }, e.MAX_VALUE = Q.MAX_UNSIGNED_VALUE, e;
      }(wt);

      function Mt(t) {
        return N(t) && Reflect.has(t, "_bsontype") && "string" == typeof t._bsontype;
      }

      var St = {
        $oid: bt,
        $binary: K,
        $uuid: K,
        $symbol: gt,
        $numberInt: ct,
        $numberDecimal: ht,
        $numberDouble: ft,
        $numberLong: Q,
        $minKey: dt,
        $maxKey: lt,
        $regex: vt,
        $regularExpression: vt,
        $timestamp: _t
      };

      function Ot(t) {
        var e = t.toISOString();
        return 0 !== t.getUTCMilliseconds() ? e : e.slice(0, -5) + "Z";
      }

      function At(t, e) {
        if (("object" === n(t) || "function" == typeof t) && null !== t) {
          var r = e.seenObjects.findIndex(function (e) {
            return e.obj === t;
          });

          if (-1 !== r) {
            var i = e.seenObjects.map(function (t) {
              return t.propertyName;
            }),
                o = i.slice(0, r).map(function (t) {
              return t + " -> ";
            }).join(""),
                s = i[r],
                a = " -> " + i.slice(r + 1, i.length - 1).map(function (t) {
              return t + " -> ";
            }).join(""),
                u = i[i.length - 1],
                h = " ".repeat(o.length + s.length / 2),
                f = "-".repeat(a.length + (s.length + u.length) / 2 - 1);
            throw new O("Converting circular structure to EJSON:\n    " + o + s + a + u + "\n    " + h + "\\" + f + "/");
          }

          e.seenObjects[e.seenObjects.length - 1].obj = t;
        }

        if (Array.isArray(t)) return function (t, e) {
          return t.map(function (t, r) {
            e.seenObjects.push({
              propertyName: "index " + r,
              obj: null
            });

            try {
              return At(t, e);
            } finally {
              e.seenObjects.pop();
            }
          });
        }(t, e);
        if (void 0 === t) return null;

        if (t instanceof Date || I(t)) {
          var c = t.getTime(),
              l = c > -1 && c < 2534023188e5;
          return e.legacy ? e.relaxed && l ? {
            $date: t.getTime()
          } : {
            $date: Ot(t)
          } : e.relaxed && l ? {
            $date: Ot(t)
          } : {
            $date: {
              $numberLong: t.getTime().toString()
            }
          };
        }

        if (!("number" != typeof t || e.relaxed && isFinite(t))) {
          if (Math.floor(t) === t) {
            var d = t >= -0x8000000000000000 && t <= 0x8000000000000000;
            if (t >= -2147483648 && t <= 2147483647) return {
              $numberInt: t.toString()
            };
            if (d) return {
              $numberLong: t.toString()
            };
          }

          return {
            $numberDouble: t.toString()
          };
        }

        if (t instanceof RegExp || T(t)) {
          var p = t.flags;

          if (void 0 === p) {
            var y = t.toString().match(/[gimuy]*$/);
            y && (p = y[0]);
          }

          return new vt(t.source, p).toExtendedJSON(e);
        }

        return null != t && "object" === n(t) ? function (t, e) {
          if (null == t || "object" !== n(t)) throw new S("not an object instance");
          var r = t._bsontype;

          if (void 0 === r) {
            var i = {};

            for (var o in t) {
              e.seenObjects.push({
                propertyName: o,
                obj: null
              });

              try {
                i[o] = At(t[o], e);
              } finally {
                e.seenObjects.pop();
              }
            }

            return i;
          }

          if (Mt(t)) {
            var s = t;

            if ("function" != typeof s.toExtendedJSON) {
              var a = kt[t._bsontype];
              if (!a) throw new O("Unrecognized or invalid _bsontype: " + t._bsontype);
              s = a(s);
            }

            return "Code" === r && s.scope ? s = new H(s.code, At(s.scope, e)) : "DBRef" === r && s.oid && (s = new Z(At(s.collection, e), At(s.oid, e), At(s.db, e), At(s.fields, e))), s.toExtendedJSON(e);
          }

          throw new S("_bsontype must be a string, but was: " + n(r));
        }(t, e) : t;
      }

      var Et,
          xt,
          kt = {
        Binary: function Binary(t) {
          return new K(t.value(), t.sub_type);
        },
        Code: function Code(t) {
          return new H(t.code, t.scope);
        },
        DBRef: function DBRef(t) {
          return new Z(t.collection || t.namespace, t.oid, t.db, t.fields);
        },
        Decimal128: function Decimal128(t) {
          return new ht(t.bytes);
        },
        Double: function Double(t) {
          return new ft(t.value);
        },
        Int32: function Int32(t) {
          return new ct(t.value);
        },
        Long: function Long(t) {
          return Q.fromBits(null != t.low ? t.low : t.low_, null != t.low ? t.high : t.high_, null != t.low ? t.unsigned : t.unsigned_);
        },
        MaxKey: function MaxKey() {
          return new lt();
        },
        MinKey: function MinKey() {
          return new dt();
        },
        ObjectID: function ObjectID(t) {
          return new bt(t);
        },
        ObjectId: function ObjectId(t) {
          return new bt(t);
        },
        BSONRegExp: function BSONRegExp(t) {
          return new vt(t.pattern, t.options);
        },
        Symbol: function Symbol(t) {
          return new gt(t.value);
        },
        Timestamp: function Timestamp(t) {
          return _t.fromBits(t.low, t.high);
        }
      };
      !function (t) {
        function e(t, e) {
          var r = Object.assign({}, {
            relaxed: !0,
            legacy: !1
          }, e);
          return "boolean" == typeof r.relaxed && (r.strict = !r.relaxed), "boolean" == typeof r.strict && (r.relaxed = !r.strict), JSON.parse(t, function (t, e) {
            if (-1 !== t.indexOf("\0")) throw new S("BSON Document field names cannot contain null bytes, found: " + JSON.stringify(t));
            return function t(e, r) {
              if (void 0 === r && (r = {}), "number" == typeof e) {
                if (r.relaxed || r.legacy) return e;

                if (Math.floor(e) === e) {
                  if (e >= -2147483648 && e <= 2147483647) return new ct(e);
                  if (e >= -0x8000000000000000 && e <= 0x8000000000000000) return Q.fromNumber(e);
                }

                return new ft(e);
              }

              if (null == e || "object" !== n(e)) return e;
              if (e.$undefined) return null;

              for (var i = Object.keys(e).filter(function (t) {
                return t.startsWith("$") && null != e[t];
              }), o = 0; o < i.length; o++) {
                var s = St[i[o]];
                if (s) return s.fromExtendedJSON(e, r);
              }

              if (null != e.$date) {
                var a = e.$date,
                    u = new Date();
                return r.legacy ? "number" == typeof a ? u.setTime(a) : "string" == typeof a && u.setTime(Date.parse(a)) : "string" == typeof a ? u.setTime(Date.parse(a)) : Q.isLong(a) ? u.setTime(a.toNumber()) : "number" == typeof a && r.relaxed && u.setTime(a), u;
              }

              if (null != e.$code) {
                var h = Object.assign({}, e);
                return e.$scope && (h.$scope = t(e.$scope)), H.fromExtendedJSON(e);
              }

              if (W(e) || e.$dbPointer) {
                var f = e.$ref ? e : e.$dbPointer;
                if (f instanceof Z) return f;
                var c = Object.keys(f).filter(function (t) {
                  return t.startsWith("$");
                }),
                    l = !0;
                if (c.forEach(function (t) {
                  -1 === ["$ref", "$id", "$db"].indexOf(t) && (l = !1);
                }), l) return Z.fromExtendedJSON(f);
              }

              return e;
            }(e, r);
          });
        }

        function r(t, e, r, i) {
          null != r && "object" === n(r) && (i = r, r = 0), null == e || "object" !== n(e) || Array.isArray(e) || (i = e, e = void 0, r = 0);
          var o = At(t, Object.assign({
            relaxed: !0,
            legacy: !1
          }, i, {
            seenObjects: [{
              propertyName: "(root)",
              obj: null
            }]
          }));
          return JSON.stringify(o, e, r);
        }

        t.parse = e, t.stringify = r, t.serialize = function (t, e) {
          return e = e || {}, JSON.parse(r(t, e));
        }, t.deserialize = function (t, r) {
          return r = r || {}, e(JSON.stringify(t), r);
        };
      }(Et || (Et = {}));
      var jt = E();
      xt = jt.Map ? jt.Map : function () {
        function t(t) {
          void 0 === t && (t = []), this._keys = [], this._values = {};

          for (var e = 0; e < t.length; e++) {
            if (null != t[e]) {
              var r = t[e],
                  n = r[0],
                  i = r[1];
              this._keys.push(n), this._values[n] = {
                v: i,
                i: this._keys.length - 1
              };
            }
          }
        }

        return t.prototype.clear = function () {
          this._keys = [], this._values = {};
        }, t.prototype.delete = function (t) {
          var e = this._values[t];
          return null != e && (delete this._values[t], this._keys.splice(e.i, 1), !0);
        }, t.prototype.entries = function () {
          var t = this,
              e = 0;
          return {
            next: function next() {
              var r = t._keys[e++];
              return {
                value: void 0 !== r ? [r, t._values[r].v] : void 0,
                done: void 0 === r
              };
            }
          };
        }, t.prototype.forEach = function (t, e) {
          e = e || this;

          for (var r = 0; r < this._keys.length; r++) {
            var n = this._keys[r];
            t.call(e, this._values[n].v, n, e);
          }
        }, t.prototype.get = function (t) {
          return this._values[t] ? this._values[t].v : void 0;
        }, t.prototype.has = function (t) {
          return null != this._values[t];
        }, t.prototype.keys = function () {
          var t = this,
              e = 0;
          return {
            next: function next() {
              var r = t._keys[e++];
              return {
                value: void 0 !== r ? r : void 0,
                done: void 0 === r
              };
            }
          };
        }, t.prototype.set = function (t, e) {
          return this._values[t] ? (this._values[t].v = e, this) : (this._keys.push(t), this._values[t] = {
            v: e,
            i: this._keys.length - 1
          }, this);
        }, t.prototype.values = function () {
          var t = this,
              e = 0;
          return {
            next: function next() {
              var r = t._keys[e++];
              return {
                value: void 0 !== r ? t._values[r].v : void 0,
                done: void 0 === r
              };
            }
          };
        }, Object.defineProperty(t.prototype, "size", {
          get: function get() {
            return this._keys.length;
          },
          enumerable: !1,
          configurable: !0
        }), t;
      }();
      var $t = 2147483647,
          Pt = -2147483648,
          Rt = Math.pow(2, 63) - 1,
          Bt = -Math.pow(2, 63),
          Tt = Math.pow(2, 53),
          It = -Math.pow(2, 53),
          Nt = 1,
          Dt = 2,
          Ct = 3,
          Lt = 4,
          qt = 5,
          Ut = 6,
          Ft = 7,
          zt = 8,
          Vt = 9,
          Kt = 10,
          Ht = 11,
          Wt = 12,
          Zt = 13,
          Jt = 14,
          Yt = 15,
          Gt = 16,
          Qt = 17,
          Xt = 18,
          te = 19,
          ee = 255,
          re = 127,
          ne = 0,
          ie = 1,
          oe = 2,
          se = 3,
          ae = 4,
          ue = 5,
          he = 6,
          fe = 7,
          ce = 128;

      function le(t, e, r) {
        var n = 5;
        if (Array.isArray(t)) for (var i = 0; i < t.length; i++) {
          n += de(i.toString(), t[i], e, !0, r);
        } else for (var o in t.toBSON && (t = t.toBSON()), t) {
          n += de(o, t[o], e, !1, r);
        }
        return n;
      }

      function de(t, e, r, i, o) {
        switch (void 0 === r && (r = !1), void 0 === i && (i = !1), void 0 === o && (o = !1), e && e.toBSON && (e = e.toBSON()), n(e)) {
          case "string":
            return 1 + g.byteLength(t, "utf8") + 1 + 4 + g.byteLength(e, "utf8") + 1;

          case "number":
            return Math.floor(e) === e && e >= It && e <= Tt && e >= Pt && e <= $t ? (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 5 : (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 9;

          case "undefined":
            return i || !o ? (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 : 0;

          case "boolean":
            return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 2;

          case "object":
            if (null == e || "MinKey" === e._bsontype || "MaxKey" === e._bsontype) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1;
            if ("ObjectId" === e._bsontype || "ObjectID" === e._bsontype) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 13;
            if (e instanceof Date || I(e)) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 9;
            if (ArrayBuffer.isView(e) || e instanceof ArrayBuffer || $(e)) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 6 + e.byteLength;
            if ("Long" === e._bsontype || "Double" === e._bsontype || "Timestamp" === e._bsontype) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 9;
            if ("Decimal128" === e._bsontype) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 17;
            if ("Code" === e._bsontype) return null != e.scope && Object.keys(e.scope).length > 0 ? (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + 4 + g.byteLength(e.code.toString(), "utf8") + 1 + le(e.scope, r, o) : (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + g.byteLength(e.code.toString(), "utf8") + 1;
            if ("Binary" === e._bsontype) return e.sub_type === K.SUBTYPE_BYTE_ARRAY ? (null != t ? g.byteLength(t, "utf8") + 1 : 0) + (e.position + 1 + 4 + 1 + 4) : (null != t ? g.byteLength(t, "utf8") + 1 : 0) + (e.position + 1 + 4 + 1);
            if ("Symbol" === e._bsontype) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + g.byteLength(e.value, "utf8") + 4 + 1 + 1;

            if ("DBRef" === e._bsontype) {
              var s = Object.assign({
                $ref: e.collection,
                $id: e.oid
              }, e.fields);
              return null != e.db && (s.$db = e.db), (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + le(s, r, o);
            }

            return e instanceof RegExp || T(e) ? (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + g.byteLength(e.source, "utf8") + 1 + (e.global ? 1 : 0) + (e.ignoreCase ? 1 : 0) + (e.multiline ? 1 : 0) + 1 : "BSONRegExp" === e._bsontype ? (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + g.byteLength(e.pattern, "utf8") + 1 + g.byteLength(e.options, "utf8") + 1 : (null != t ? g.byteLength(t, "utf8") + 1 : 0) + le(e, r, o) + 1;

          case "function":
            if (e instanceof RegExp || T(e) || "[object RegExp]" === String.call(e)) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + g.byteLength(e.source, "utf8") + 1 + (e.global ? 1 : 0) + (e.ignoreCase ? 1 : 0) + (e.multiline ? 1 : 0) + 1;
            if (r && null != e.scope && Object.keys(e.scope).length > 0) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + 4 + g.byteLength(x(e), "utf8") + 1 + le(e.scope, r, o);
            if (r) return (null != t ? g.byteLength(t, "utf8") + 1 : 0) + 1 + 4 + g.byteLength(x(e), "utf8") + 1;
        }

        return 0;
      }

      function pe(t, e, r) {
        for (var n = 0, i = e; i < r; i += 1) {
          var o = t[i];

          if (n) {
            if (128 != (192 & o)) return !1;
            n -= 1;
          } else if (128 & o) if (192 == (224 & o)) n = 1;else if (224 == (240 & o)) n = 2;else {
            if (240 != (248 & o)) return !1;
            n = 3;
          }
        }

        return !n;
      }

      var ye = Q.fromNumber(Tt),
          me = Q.fromNumber(It),
          be = {};

      function ve(t, e, r) {
        var n = (e = null == e ? {} : e) && e.index ? e.index : 0,
            i = t[n] | t[n + 1] << 8 | t[n + 2] << 16 | t[n + 3] << 24;
        if (i < 5) throw new S("bson size must be >= 5, is " + i);
        if (e.allowObjectSmallerThanBufferSize && t.length < i) throw new S("buffer length " + t.length + " must be >= bson size " + i);
        if (!e.allowObjectSmallerThanBufferSize && t.length !== i) throw new S("buffer length " + t.length + " must === bson size " + i);
        if (i + n > t.byteLength) throw new S("(bson size " + i + " + options.index " + n + " must be <= buffer length " + t.byteLength + ")");
        if (0 !== t[n + i - 1]) throw new S("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
        return function t(e, r, n, i) {
          void 0 === i && (i = !1);
          var o,
              s = null != n.evalFunctions && n.evalFunctions,
              a = null != n.cacheFunctions && n.cacheFunctions,
              u = null == n.fieldsAsRaw ? null : n.fieldsAsRaw,
              h = null != n.raw && n.raw,
              f = "boolean" == typeof n.bsonRegExp && n.bsonRegExp,
              c = null != n.promoteBuffers && n.promoteBuffers,
              l = null == n.promoteLongs || n.promoteLongs,
              d = null == n.promoteValues || n.promoteValues,
              p = null == n.validation ? {
            utf8: !0
          } : n.validation,
              y = !0,
              m = new Set(),
              b = p.utf8;
          if ("boolean" == typeof b) o = b;else {
            y = !1;
            var v = Object.keys(b).map(function (t) {
              return b[t];
            });
            if (0 === v.length) throw new S("UTF-8 validation setting cannot be empty");
            if ("boolean" != typeof v[0]) throw new S("Invalid UTF-8 validation option, must specify boolean values");
            if (o = v[0], !v.every(function (t) {
              return t === o;
            })) throw new S("Invalid UTF-8 validation option - keys must be all true or all false");
          }
          if (!y) for (var w = 0, _ = Object.keys(b); w < _.length; w++) {
            var O = _[w];
            m.add(O);
          }
          var A = r;
          if (e.length < 5) throw new S("corrupt bson message < 5 bytes long");
          var E = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
          if (E < 5 || E > e.length) throw new S("corrupt bson message");
          var x = i ? [] : {},
              k = 0,
              j = !i && null;

          for (;;) {
            var $ = e[r++];
            if (0 === $) break;

            for (var P = r; 0 !== e[P] && P < e.length;) {
              P++;
            }

            if (P >= e.byteLength) throw new S("Bad BSON Document: illegal CString");
            var R = i ? k++ : e.toString("utf8", r, P),
                B = !0;
            B = y || m.has(R) ? o : !o, !1 !== j && "$" === R[0] && (j = ge.test(R));
            var T = void 0;

            if (r = P + 1, $ === Dt) {
              if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S("bad string length in bson");
              T = _e(e, r, r + pt - 1, B), r += pt;
            } else if ($ === Ft) {
              var I = g.alloc(12);
              e.copy(I, 0, r, r + 12), T = new bt(I), r += 12;
            } else if ($ === Gt && !1 === d) T = new ct(e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24);else if ($ === Gt) T = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;else if ($ === Nt && !1 === d) T = new ft(e.readDoubleLE(r)), r += 8;else if ($ === Nt) T = e.readDoubleLE(r), r += 8;else if ($ === Vt) {
              var N = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24,
                  D = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
              T = new Date(new Q(N, D).toNumber());
            } else if ($ === zt) {
              if (0 !== e[r] && 1 !== e[r]) throw new S("illegal boolean type value");
              T = 1 === e[r++];
            } else if ($ === Ct) {
              var C = r;
              if ((q = e[r] | e[r + 1] << 8 | e[r + 2] << 16 | e[r + 3] << 24) <= 0 || q > e.length - r) throw new S("bad embedded document length in bson");
              if (h) T = e.slice(r, r + q);else {
                var L = n;
                y || (L = _M(_M({}, n), {
                  validation: {
                    utf8: B
                  }
                })), T = t(e, C, L, !1);
              }
              r += q;
            } else if ($ === Lt) {
              C = r;
              var q = e[r] | e[r + 1] << 8 | e[r + 2] << 16 | e[r + 3] << 24,
                  U = n,
                  F = r + q;

              if (u && u[R]) {
                for (var z in U = {}, n) {
                  U[z] = n[z];
                }

                U.raw = !0;
              }

              if (y || (U = _M(_M({}, U), {
                validation: {
                  utf8: B
                }
              })), T = t(e, C, U, !0), 0 !== e[(r += q) - 1]) throw new S("invalid array terminator byte");
              if (r !== F) throw new S("corrupted array bson");
            } else if ($ === Ut) T = void 0;else if ($ === Kt) T = null;else if ($ === Xt) {
              N = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24, D = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
              var V = new Q(N, D);
              T = l && !0 === d && V.lessThanOrEqual(ye) && V.greaterThanOrEqual(me) ? V.toNumber() : V;
            } else if ($ === te) {
              var J = g.alloc(16);
              e.copy(J, 0, r, r + 16), r += 16;
              var Y = new ht(J);
              T = "toObject" in Y && "function" == typeof Y.toObject ? Y.toObject() : Y;
            } else if ($ === qt) {
              var G = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24,
                  X = G,
                  tt = e[r++];
              if (G < 0) throw new S("Negative binary type element size found");
              if (G > e.byteLength) throw new S("Binary type size larger than document size");

              if (null != e.slice) {
                if (tt === K.SUBTYPE_BYTE_ARRAY) {
                  if ((G = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) < 0) throw new S("Negative binary type element size found for subtype 0x02");
                  if (G > X - 4) throw new S("Binary type with subtype 0x02 contains too long binary size");
                  if (G < X - 4) throw new S("Binary type with subtype 0x02 contains too short binary size");
                }

                T = c && d ? e.slice(r, r + G) : new K(e.slice(r, r + G), tt);
              } else {
                var et = g.alloc(G);

                if (tt === K.SUBTYPE_BYTE_ARRAY) {
                  if ((G = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) < 0) throw new S("Negative binary type element size found for subtype 0x02");
                  if (G > X - 4) throw new S("Binary type with subtype 0x02 contains too long binary size");
                  if (G < X - 4) throw new S("Binary type with subtype 0x02 contains too short binary size");
                }

                for (P = 0; P < G; P++) {
                  et[P] = e[r + P];
                }

                T = c && d ? et : new K(et, tt);
              }

              r += G;
            } else if ($ === Ht && !1 === f) {
              for (P = r; 0 !== e[P] && P < e.length;) {
                P++;
              }

              if (P >= e.length) throw new S("Bad BSON Document: illegal CString");
              var rt = e.toString("utf8", r, P);

              for (P = r = P + 1; 0 !== e[P] && P < e.length;) {
                P++;
              }

              if (P >= e.length) throw new S("Bad BSON Document: illegal CString");
              var nt = e.toString("utf8", r, P);
              r = P + 1;
              var it = new Array(nt.length);

              for (P = 0; P < nt.length; P++) {
                switch (nt[P]) {
                  case "m":
                    it[P] = "m";
                    break;

                  case "s":
                    it[P] = "g";
                    break;

                  case "i":
                    it[P] = "i";
                }
              }

              T = new RegExp(rt, it.join(""));
            } else if ($ === Ht && !0 === f) {
              for (P = r; 0 !== e[P] && P < e.length;) {
                P++;
              }

              if (P >= e.length) throw new S("Bad BSON Document: illegal CString");
              rt = e.toString("utf8", r, P);

              for (P = r = P + 1; 0 !== e[P] && P < e.length;) {
                P++;
              }

              if (P >= e.length) throw new S("Bad BSON Document: illegal CString");
              nt = e.toString("utf8", r, P);
              r = P + 1, T = new vt(rt, nt);
            } else if ($ === Jt) {
              if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S("bad string length in bson");

              var ot = _e(e, r, r + pt - 1, B);

              T = d ? ot : new gt(ot), r += pt;
            } else if ($ === Qt) {
              N = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24, D = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
              T = new _t(N, D);
            } else if ($ === ee) T = new dt();else if ($ === re) T = new lt();else if ($ === Zt) {
              if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S("bad string length in bson");

              var st = _e(e, r, r + pt - 1, B);

              T = s ? a ? we(st, be, x) : we(st) : new H(st), r += pt;
            } else if ($ === Yt) {
              var at = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24;
              if (at < 13) throw new S("code_w_scope total size shorter minimum expected length");
              if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S("bad string length in bson");
              st = _e(e, r, r + pt - 1, B), C = r += pt, q = e[r] | e[r + 1] << 8 | e[r + 2] << 16 | e[r + 3] << 24;
              var ut = t(e, C, n, !1);
              if (r += q, at < 8 + q + pt) throw new S("code_w_scope total size is too short, truncating scope");
              if (at > 8 + q + pt) throw new S("code_w_scope total size is too long, clips outer document");
              s ? (T = a ? we(st, be, x) : we(st)).scope = ut : T = new H(st, ut);
            } else {
              if ($ !== Wt) throw new S("Detected unknown BSON type " + $.toString(16) + ' for fieldname "' + R + '"');
              var pt;
              if ((pt = e[r++] | e[r++] << 8 | e[r++] << 16 | e[r++] << 24) <= 0 || pt > e.length - r || 0 !== e[r + pt - 1]) throw new S("bad string length in bson");
              if (null != p && p.utf8 && !pe(e, r, r + pt - 1)) throw new S("Invalid UTF-8 string in BSON document");
              var yt = e.toString("utf8", r, r + pt - 1);
              r += pt;
              var mt = g.alloc(12);
              e.copy(mt, 0, r, r + 12);
              I = new bt(mt);
              r += 12, T = new Z(yt, I);
            }

            "__proto__" === R ? Object.defineProperty(x, R, {
              value: T,
              writable: !0,
              enumerable: !0,
              configurable: !0
            }) : x[R] = T;
          }

          if (E !== r - A) {
            if (i) throw new S("corrupt array bson");
            throw new S("corrupt object bson");
          }

          if (!j) return x;

          if (W(x)) {
            var wt = Object.assign({}, x);
            return delete wt.$ref, delete wt.$id, delete wt.$db, new Z(x.$ref, x.$id, x.$db, wt);
          }

          return x;
        }(t, n, e, r);
      }

      var ge = /^\$ref$|^\$id$|^\$db$/;

      function we(t, e, r) {
        return e ? (null == e[t] && (e[t] = new Function(t)), e[t].bind(r)) : new Function(t);
      }

      function _e(t, e, r, n) {
        var i = t.toString("utf8", e, r);
        if (n) for (var o = 0; o < i.length; o++) {
          if (65533 === i.charCodeAt(o)) {
            if (!pe(t, e, r)) throw new S("Invalid UTF-8 string in BSON document");
            break;
          }
        }
        return i;
      }

      function Me(t, e, r, n, i, o) {
        var s,
            a,
            u,
            h = "big" === n,
            f = 8 * o - i - 1,
            c = (1 << f) - 1,
            l = c >> 1,
            d = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            p = h ? o - 1 : 0,
            y = h ? -1 : 1,
            m = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;

        for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = c) : (s = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e += s + l >= 1 ? d / u : d * Math.pow(2, 1 - l)) * u >= 2 && (s++, u /= 2), s + l >= c ? (a = 0, s = c) : s + l >= 1 ? (a = (e * u - 1) * Math.pow(2, i), s += l) : (a = e * Math.pow(2, l - 1) * Math.pow(2, i), s = 0)), isNaN(e) && (a = 0); i >= 8;) {
          t[r + p] = 255 & a, p += y, a /= 256, i -= 8;
        }

        for (s = s << i | a, isNaN(e) && (s += 8), f += i; f > 0;) {
          t[r + p] = 255 & s, p += y, s /= 256, f -= 8;
        }

        t[r + p - y] |= 128 * m;
      }

      var Se = /\x00/,
          Oe = new Set(["$db", "$ref", "$id", "$clusterTime"]);

      function Ae(t, e, r, n, i) {
        t[n++] = Dt;
        var o = i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8");
        t[(n = n + o + 1) - 1] = 0;
        var s = t.write(r, n + 4, void 0, "utf8");
        return t[n + 3] = s + 1 >> 24 & 255, t[n + 2] = s + 1 >> 16 & 255, t[n + 1] = s + 1 >> 8 & 255, t[n] = s + 1 & 255, n = n + 4 + s, t[n++] = 0, n;
      }

      function Ee(t, e, r, n, i) {
        Number.isInteger(r) && r >= Pt && r <= $t ? (t[n++] = Gt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t[n++] = 255 & r, t[n++] = r >> 8 & 255, t[n++] = r >> 16 & 255, t[n++] = r >> 24 & 255) : (t[n++] = Nt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, Me(t, r, n, "little", 52, 8), n += 8);
        return n;
      }

      function xe(t, e, r, n, i) {
        return t[n++] = Kt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, n;
      }

      function ke(t, e, r, n, i) {
        return t[n++] = zt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t[n++] = r ? 1 : 0, n;
      }

      function je(t, e, r, n, i) {
        t[n++] = Vt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var o = Q.fromNumber(r.getTime()),
            s = o.getLowBits(),
            a = o.getHighBits();
        return t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255, t[n++] = 255 & a, t[n++] = a >> 8 & 255, t[n++] = a >> 16 & 255, t[n++] = a >> 24 & 255, n;
      }

      function $e(t, e, r, n, i) {
        if (t[n++] = Ht, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, r.source && null != r.source.match(Se)) throw Error("value " + r.source + " must not contain null bytes");
        return n += t.write(r.source, n, void 0, "utf8"), t[n++] = 0, r.ignoreCase && (t[n++] = 105), r.global && (t[n++] = 115), r.multiline && (t[n++] = 109), t[n++] = 0, n;
      }

      function Pe(t, e, r, n, i) {
        if (t[n++] = Ht, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, null != r.pattern.match(Se)) throw Error("pattern " + r.pattern + " must not contain null bytes");
        return n += t.write(r.pattern, n, void 0, "utf8"), t[n++] = 0, n += t.write(r.options.split("").sort().join(""), n, void 0, "utf8"), t[n++] = 0, n;
      }

      function Re(t, e, r, n, i) {
        return null === r ? t[n++] = Kt : "MinKey" === r._bsontype ? t[n++] = ee : t[n++] = re, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, n;
      }

      function Be(t, e, r, n, i) {
        if (t[n++] = Ft, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, "string" == typeof r.id) t.write(r.id, n, void 0, "binary");else {
          if (!P(r.id)) throw new O("object [" + JSON.stringify(r) + "] is not a valid ObjectId");
          t.set(r.id.subarray(0, 12), n);
        }
        return n + 12;
      }

      function Te(t, e, r, n, i) {
        t[n++] = qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var o = r.length;
        return t[n++] = 255 & o, t[n++] = o >> 8 & 255, t[n++] = o >> 16 & 255, t[n++] = o >> 24 & 255, t[n++] = ne, t.set(C(r), n), n += o;
      }

      function Ie(t, e, r, n, i, o, s, a, u, h) {
        void 0 === i && (i = !1), void 0 === o && (o = 0), void 0 === s && (s = !1), void 0 === a && (a = !0), void 0 === u && (u = !1), void 0 === h && (h = []);

        for (var f = 0; f < h.length; f++) {
          if (h[f] === r) throw new S("cyclic dependency detected");
        }

        h.push(r), t[n++] = Array.isArray(r) ? Lt : Ct, n += u ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var c = Ke(t, r, i, n, o + 1, s, a, h);
        return h.pop(), c;
      }

      function Ne(t, e, r, n, i) {
        return t[n++] = te, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t.set(r.bytes.subarray(0, 16), n), n + 16;
      }

      function De(t, e, r, n, i) {
        t[n++] = "Long" === r._bsontype ? Xt : Qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var o = r.getLowBits(),
            s = r.getHighBits();
        return t[n++] = 255 & o, t[n++] = o >> 8 & 255, t[n++] = o >> 16 & 255, t[n++] = o >> 24 & 255, t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255, n;
      }

      function Ce(t, e, r, n, i) {
        return r = r.valueOf(), t[n++] = Gt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, t[n++] = 255 & r, t[n++] = r >> 8 & 255, t[n++] = r >> 16 & 255, t[n++] = r >> 24 & 255, n;
      }

      function Le(t, e, r, n, i) {
        return t[n++] = Nt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0, Me(t, r.value, n, "little", 52, 8), n += 8;
      }

      function qe(t, e, r, n, i, o, s) {
        t[n++] = Zt, n += s ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var a = x(r),
            u = t.write(a, n + 4, void 0, "utf8") + 1;
        return t[n] = 255 & u, t[n + 1] = u >> 8 & 255, t[n + 2] = u >> 16 & 255, t[n + 3] = u >> 24 & 255, n = n + 4 + u - 1, t[n++] = 0, n;
      }

      function Ue(t, e, r, i, o, s, a, u, h) {
        if (void 0 === o && (o = !1), void 0 === s && (s = 0), void 0 === a && (a = !1), void 0 === u && (u = !0), void 0 === h && (h = !1), r.scope && "object" === n(r.scope)) {
          t[i++] = Yt, i += h ? t.write(e, i, void 0, "ascii") : t.write(e, i, void 0, "utf8"), t[i++] = 0;
          var f = i,
              c = "string" == typeof r.code ? r.code : r.code.toString();
          i += 4;
          var l = t.write(c, i + 4, void 0, "utf8") + 1;
          t[i] = 255 & l, t[i + 1] = l >> 8 & 255, t[i + 2] = l >> 16 & 255, t[i + 3] = l >> 24 & 255, t[i + 4 + l - 1] = 0, i = i + l + 4;
          var d = Ke(t, r.scope, o, i, s + 1, a, u);
          i = d - 1;
          var p = d - f;
          t[f++] = 255 & p, t[f++] = p >> 8 & 255, t[f++] = p >> 16 & 255, t[f++] = p >> 24 & 255, t[i++] = 0;
        } else {
          t[i++] = Zt, i += h ? t.write(e, i, void 0, "ascii") : t.write(e, i, void 0, "utf8"), t[i++] = 0;
          c = r.code.toString();
          var y = t.write(c, i + 4, void 0, "utf8") + 1;
          t[i] = 255 & y, t[i + 1] = y >> 8 & 255, t[i + 2] = y >> 16 & 255, t[i + 3] = y >> 24 & 255, i = i + 4 + y - 1, t[i++] = 0;
        }

        return i;
      }

      function Fe(t, e, r, n, i) {
        t[n++] = qt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var o = r.value(!0),
            s = r.position;
        return r.sub_type === K.SUBTYPE_BYTE_ARRAY && (s += 4), t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255, t[n++] = r.sub_type, r.sub_type === K.SUBTYPE_BYTE_ARRAY && (s -= 4, t[n++] = 255 & s, t[n++] = s >> 8 & 255, t[n++] = s >> 16 & 255, t[n++] = s >> 24 & 255), t.set(o, n), n += r.position;
      }

      function ze(t, e, r, n, i) {
        t[n++] = Jt, n += i ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var o = t.write(r.value, n + 4, void 0, "utf8") + 1;
        return t[n] = 255 & o, t[n + 1] = o >> 8 & 255, t[n + 2] = o >> 16 & 255, t[n + 3] = o >> 24 & 255, n = n + 4 + o - 1, t[n++] = 0, n;
      }

      function Ve(t, e, r, n, i, o, s) {
        t[n++] = Ct, n += s ? t.write(e, n, void 0, "ascii") : t.write(e, n, void 0, "utf8"), t[n++] = 0;
        var a = n,
            u = {
          $ref: r.collection || r.namespace,
          $id: r.oid
        };
        null != r.db && (u.$db = r.db);
        var h = Ke(t, u = Object.assign(u, r.fields), !1, n, i + 1, o),
            f = h - a;
        return t[a++] = 255 & f, t[a++] = f >> 8 & 255, t[a++] = f >> 16 & 255, t[a++] = f >> 24 & 255, h;
      }

      function Ke(t, e, r, i, o, s, a, u) {
        void 0 === r && (r = !1), void 0 === i && (i = 0), void 0 === o && (o = 0), void 0 === s && (s = !1), void 0 === a && (a = !0), void 0 === u && (u = []), i = i || 0, (u = u || []).push(e);
        var h,
            f = i + 4;
        if (Array.isArray(e)) for (var c = 0; c < e.length; c++) {
          var l = "" + c;

          if ((b = e[c]) && b.toBSON) {
            if ("function" != typeof b.toBSON) throw new O("toBSON is not a function");
            b = b.toBSON();
          }

          if ("string" == typeof b) f = Ae(t, l, b, f, !0);else if ("number" == typeof b) f = Ee(t, l, b, f, !0);else {
            if ("bigint" == typeof b) throw new O("Unsupported type BigInt, please use Decimal128");
            if ("boolean" == typeof b) f = ke(t, l, b, f, !0);else if (b instanceof Date || I(b)) f = je(t, l, b, f, !0);else if (void 0 === b) f = xe(t, l, 0, f, !0);else if (null === b) f = xe(t, l, 0, f, !0);else if ("ObjectId" === b._bsontype || "ObjectID" === b._bsontype) f = Be(t, l, b, f, !0);else if (P(b)) f = Te(t, l, b, f, !0);else if (b instanceof RegExp || T(b)) f = $e(t, l, b, f, !0);else if ("object" === n(b) && null == b._bsontype) f = Ie(t, l, b, f, r, o, s, a, !0, u);else if ("object" === n(b) && Mt(b) && "Decimal128" === b._bsontype) f = Ne(t, l, b, f, !0);else if ("Long" === b._bsontype || "Timestamp" === b._bsontype) f = De(t, l, b, f, !0);else if ("Double" === b._bsontype) f = Le(t, l, b, f, !0);else if ("function" == typeof b && s) f = qe(t, l, b, f, 0, 0, !0);else if ("Code" === b._bsontype) f = Ue(t, l, b, f, r, o, s, a, !0);else if ("Binary" === b._bsontype) f = Fe(t, l, b, f, !0);else if ("Symbol" === b._bsontype) f = ze(t, l, b, f, !0);else if ("DBRef" === b._bsontype) f = Ve(t, l, b, f, o, s, !0);else if ("BSONRegExp" === b._bsontype) f = Pe(t, l, b, f, !0);else if ("Int32" === b._bsontype) f = Ce(t, l, b, f, !0);else if ("MinKey" === b._bsontype || "MaxKey" === b._bsontype) f = Re(t, l, b, f, !0);else if (void 0 !== b._bsontype) throw new O("Unrecognized or invalid _bsontype: " + b._bsontype);
          }
        } else if (e instanceof xt || (h = e, "[object Map]" === Object.prototype.toString.call(h))) for (var d = e.entries(), p = !1; !p;) {
          var y = d.next();

          if (!(p = !!y.done)) {
            l = y.value[0];
            var m = n(b = y.value[1]);

            if ("string" == typeof l && !Oe.has(l)) {
              if (null != l.match(Se)) throw Error("key " + l + " must not contain null bytes");

              if (r) {
                if ("$" === l[0]) throw Error("key " + l + " must not start with '$'");
                if (~l.indexOf(".")) throw Error("key " + l + " must not contain '.'");
              }
            }

            if ("string" === m) f = Ae(t, l, b, f);else if ("number" === m) f = Ee(t, l, b, f);else {
              if ("bigint" === m || R(b) || B(b)) throw new O("Unsupported type BigInt, please use Decimal128");
              if ("boolean" === m) f = ke(t, l, b, f);else if (b instanceof Date || I(b)) f = je(t, l, b, f);else if (null === b || void 0 === b && !1 === a) f = xe(t, l, 0, f);else if ("ObjectId" === b._bsontype || "ObjectID" === b._bsontype) f = Be(t, l, b, f);else if (P(b)) f = Te(t, l, b, f);else if (b instanceof RegExp || T(b)) f = $e(t, l, b, f);else if ("object" === m && null == b._bsontype) f = Ie(t, l, b, f, r, o, s, a, !1, u);else if ("object" === m && "Decimal128" === b._bsontype) f = Ne(t, l, b, f);else if ("Long" === b._bsontype || "Timestamp" === b._bsontype) f = De(t, l, b, f);else if ("Double" === b._bsontype) f = Le(t, l, b, f);else if ("Code" === b._bsontype) f = Ue(t, l, b, f, r, o, s, a);else if ("function" == typeof b && s) f = qe(t, l, b, f, 0, 0, s);else if ("Binary" === b._bsontype) f = Fe(t, l, b, f);else if ("Symbol" === b._bsontype) f = ze(t, l, b, f);else if ("DBRef" === b._bsontype) f = Ve(t, l, b, f, o, s);else if ("BSONRegExp" === b._bsontype) f = Pe(t, l, b, f);else if ("Int32" === b._bsontype) f = Ce(t, l, b, f);else if ("MinKey" === b._bsontype || "MaxKey" === b._bsontype) f = Re(t, l, b, f);else if (void 0 !== b._bsontype) throw new O("Unrecognized or invalid _bsontype: " + b._bsontype);
            }
          }
        } else {
          if (e.toBSON) {
            if ("function" != typeof e.toBSON) throw new O("toBSON is not a function");
            if (null != (e = e.toBSON()) && "object" !== n(e)) throw new O("toBSON function did not return an object");
          }

          for (var l in e) {
            var b;

            if ((b = e[l]) && b.toBSON) {
              if ("function" != typeof b.toBSON) throw new O("toBSON is not a function");
              b = b.toBSON();
            }

            m = n(b);

            if ("string" == typeof l && !Oe.has(l)) {
              if (null != l.match(Se)) throw Error("key " + l + " must not contain null bytes");

              if (r) {
                if ("$" === l[0]) throw Error("key " + l + " must not start with '$'");
                if (~l.indexOf(".")) throw Error("key " + l + " must not contain '.'");
              }
            }

            if ("string" === m) f = Ae(t, l, b, f);else if ("number" === m) f = Ee(t, l, b, f);else {
              if ("bigint" === m) throw new O("Unsupported type BigInt, please use Decimal128");
              if ("boolean" === m) f = ke(t, l, b, f);else if (b instanceof Date || I(b)) f = je(t, l, b, f);else if (void 0 === b) !1 === a && (f = xe(t, l, 0, f));else if (null === b) f = xe(t, l, 0, f);else if ("ObjectId" === b._bsontype || "ObjectID" === b._bsontype) f = Be(t, l, b, f);else if (P(b)) f = Te(t, l, b, f);else if (b instanceof RegExp || T(b)) f = $e(t, l, b, f);else if ("object" === m && null == b._bsontype) f = Ie(t, l, b, f, r, o, s, a, !1, u);else if ("object" === m && "Decimal128" === b._bsontype) f = Ne(t, l, b, f);else if ("Long" === b._bsontype || "Timestamp" === b._bsontype) f = De(t, l, b, f);else if ("Double" === b._bsontype) f = Le(t, l, b, f);else if ("Code" === b._bsontype) f = Ue(t, l, b, f, r, o, s, a);else if ("function" == typeof b && s) f = qe(t, l, b, f, 0, 0, s);else if ("Binary" === b._bsontype) f = Fe(t, l, b, f);else if ("Symbol" === b._bsontype) f = ze(t, l, b, f);else if ("DBRef" === b._bsontype) f = Ve(t, l, b, f, o, s);else if ("BSONRegExp" === b._bsontype) f = Pe(t, l, b, f);else if ("Int32" === b._bsontype) f = Ce(t, l, b, f);else if ("MinKey" === b._bsontype || "MaxKey" === b._bsontype) f = Re(t, l, b, f);else if (void 0 !== b._bsontype) throw new O("Unrecognized or invalid _bsontype: " + b._bsontype);
            }
          }
        }
        u.pop(), t[f++] = 0;
        var v = f - i;
        return t[i++] = 255 & v, t[i++] = v >> 8 & 255, t[i++] = v >> 16 & 255, t[i++] = v >> 24 & 255, f;
      }

      var He = g.alloc(17825792);

      function We(t) {
        He.length < t && (He = g.alloc(t));
      }

      function Ze(t, e) {
        void 0 === e && (e = {});
        var r = "boolean" == typeof e.checkKeys && e.checkKeys,
            n = "boolean" == typeof e.serializeFunctions && e.serializeFunctions,
            i = "boolean" != typeof e.ignoreUndefined || e.ignoreUndefined,
            o = "number" == typeof e.minInternalBufferSize ? e.minInternalBufferSize : 17825792;
        He.length < o && (He = g.alloc(o));
        var s = Ke(He, t, r, 0, 0, n, i, []),
            a = g.alloc(s);
        return He.copy(a, 0, 0, a.length), a;
      }

      function Je(t, e, r) {
        void 0 === r && (r = {});
        var n = "boolean" == typeof r.checkKeys && r.checkKeys,
            i = "boolean" == typeof r.serializeFunctions && r.serializeFunctions,
            o = "boolean" != typeof r.ignoreUndefined || r.ignoreUndefined,
            s = "number" == typeof r.index ? r.index : 0,
            a = Ke(He, t, n, 0, 0, i, o);
        return He.copy(e, s, 0, a), s + a - 1;
      }

      function Ye(t, e) {
        return void 0 === e && (e = {}), ve(t instanceof g ? t : C(t), e);
      }

      function Ge(t, e) {
        return void 0 === e && (e = {}), le(t, "boolean" == typeof (e = e || {}).serializeFunctions && e.serializeFunctions, "boolean" != typeof e.ignoreUndefined || e.ignoreUndefined);
      }

      function Qe(t, e, r, n, i, o) {
        for (var s = Object.assign({
          allowObjectSmallerThanBufferSize: !0,
          index: 0
        }, o), a = C(t), u = e, h = 0; h < r; h++) {
          var f = a[u] | a[u + 1] << 8 | a[u + 2] << 16 | a[u + 3] << 24;
          s.index = u, n[i + h] = ve(a, s), u += f;
        }

        return u;
      }

      var Xe = {
        Binary: K,
        Code: H,
        DBRef: Z,
        Decimal128: ht,
        Double: ft,
        Int32: ct,
        Long: Q,
        UUID: V,
        Map: xt,
        MaxKey: lt,
        MinKey: dt,
        ObjectId: bt,
        ObjectID: bt,
        BSONRegExp: vt,
        BSONSymbol: gt,
        Timestamp: _t,
        EJSON: Et,
        setInternalBufferSize: We,
        serialize: Ze,
        serializeWithBufferAndIndex: Je,
        deserialize: Ye,
        calculateObjectSize: Ge,
        deserializeStream: Qe,
        BSONError: S,
        BSONTypeError: O
      };
      e.default = Xe;
    }.call(this, r(7));
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(98),
        o = r(2).Buffer,
        s = new Array(16);

    function a() {
      i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
    }

    function u(t, e) {
      return t << e | t >>> 32 - e;
    }

    function h(t, e, r, n, i, o, s) {
      return u(t + (e & r | ~e & n) + i + o | 0, s) + e | 0;
    }

    function f(t, e, r, n, i, o, s) {
      return u(t + (e & n | r & ~n) + i + o | 0, s) + e | 0;
    }

    function c(t, e, r, n, i, o, s) {
      return u(t + (e ^ r ^ n) + i + o | 0, s) + e | 0;
    }

    function l(t, e, r, n, i, o, s) {
      return u(t + (r ^ (e | ~n)) + i + o | 0, s) + e | 0;
    }

    n(a, i), a.prototype._update = function () {
      for (var t = s, e = 0; e < 16; ++e) {
        t[e] = this._block.readInt32LE(4 * e);
      }

      var r = this._a,
          n = this._b,
          i = this._c,
          o = this._d;
      r = h(r, n, i, o, t[0], 3614090360, 7), o = h(o, r, n, i, t[1], 3905402710, 12), i = h(i, o, r, n, t[2], 606105819, 17), n = h(n, i, o, r, t[3], 3250441966, 22), r = h(r, n, i, o, t[4], 4118548399, 7), o = h(o, r, n, i, t[5], 1200080426, 12), i = h(i, o, r, n, t[6], 2821735955, 17), n = h(n, i, o, r, t[7], 4249261313, 22), r = h(r, n, i, o, t[8], 1770035416, 7), o = h(o, r, n, i, t[9], 2336552879, 12), i = h(i, o, r, n, t[10], 4294925233, 17), n = h(n, i, o, r, t[11], 2304563134, 22), r = h(r, n, i, o, t[12], 1804603682, 7), o = h(o, r, n, i, t[13], 4254626195, 12), i = h(i, o, r, n, t[14], 2792965006, 17), r = f(r, n = h(n, i, o, r, t[15], 1236535329, 22), i, o, t[1], 4129170786, 5), o = f(o, r, n, i, t[6], 3225465664, 9), i = f(i, o, r, n, t[11], 643717713, 14), n = f(n, i, o, r, t[0], 3921069994, 20), r = f(r, n, i, o, t[5], 3593408605, 5), o = f(o, r, n, i, t[10], 38016083, 9), i = f(i, o, r, n, t[15], 3634488961, 14), n = f(n, i, o, r, t[4], 3889429448, 20), r = f(r, n, i, o, t[9], 568446438, 5), o = f(o, r, n, i, t[14], 3275163606, 9), i = f(i, o, r, n, t[3], 4107603335, 14), n = f(n, i, o, r, t[8], 1163531501, 20), r = f(r, n, i, o, t[13], 2850285829, 5), o = f(o, r, n, i, t[2], 4243563512, 9), i = f(i, o, r, n, t[7], 1735328473, 14), r = c(r, n = f(n, i, o, r, t[12], 2368359562, 20), i, o, t[5], 4294588738, 4), o = c(o, r, n, i, t[8], 2272392833, 11), i = c(i, o, r, n, t[11], 1839030562, 16), n = c(n, i, o, r, t[14], 4259657740, 23), r = c(r, n, i, o, t[1], 2763975236, 4), o = c(o, r, n, i, t[4], 1272893353, 11), i = c(i, o, r, n, t[7], 4139469664, 16), n = c(n, i, o, r, t[10], 3200236656, 23), r = c(r, n, i, o, t[13], 681279174, 4), o = c(o, r, n, i, t[0], 3936430074, 11), i = c(i, o, r, n, t[3], 3572445317, 16), n = c(n, i, o, r, t[6], 76029189, 23), r = c(r, n, i, o, t[9], 3654602809, 4), o = c(o, r, n, i, t[12], 3873151461, 11), i = c(i, o, r, n, t[15], 530742520, 16), r = l(r, n = c(n, i, o, r, t[2], 3299628645, 23), i, o, t[0], 4096336452, 6), o = l(o, r, n, i, t[7], 1126891415, 10), i = l(i, o, r, n, t[14], 2878612391, 15), n = l(n, i, o, r, t[5], 4237533241, 21), r = l(r, n, i, o, t[12], 1700485571, 6), o = l(o, r, n, i, t[3], 2399980690, 10), i = l(i, o, r, n, t[10], 4293915773, 15), n = l(n, i, o, r, t[1], 2240044497, 21), r = l(r, n, i, o, t[8], 1873313359, 6), o = l(o, r, n, i, t[15], 4264355552, 10), i = l(i, o, r, n, t[6], 2734768916, 15), n = l(n, i, o, r, t[13], 1309151649, 21), r = l(r, n, i, o, t[4], 4149444226, 6), o = l(o, r, n, i, t[11], 3174756917, 10), i = l(i, o, r, n, t[2], 718787259, 15), n = l(n, i, o, r, t[9], 3951481745, 21), this._a = this._a + r | 0, this._b = this._b + n | 0, this._c = this._c + i | 0, this._d = this._d + o | 0;
    }, a.prototype._digest = function () {
      this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
      var t = o.allocUnsafe(16);
      return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t;
    }, t.exports = a;
  }, function (t, e, r) {
    (function (e) {
      function r(t) {
        try {
          if (!e.localStorage) return !1;
        } catch (t) {
          return !1;
        }

        var r = e.localStorage[t];
        return null != r && "true" === String(r).toLowerCase();
      }

      t.exports = function (t, e) {
        if (r("noDeprecation")) return t;
        var n = !1;
        return function () {
          if (!n) {
            if (r("throwDeprecation")) throw new Error(e);
            r("traceDeprecation") ? console.trace(e) : console.warn(e), n = !0;
          }

          return t.apply(this, arguments);
        };
      };
    }).call(this, r(7));
  }, function (t, e, r) {
    "use strict";

    var n = r(29).codes.ERR_STREAM_PREMATURE_CLOSE;

    function i() {}

    t.exports = function t(e, r, o) {
      if ("function" == typeof r) return t(e, null, r);
      r || (r = {}), o = function (t) {
        var e = !1;
        return function () {
          if (!e) {
            e = !0;

            for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
              n[i] = arguments[i];
            }

            t.apply(this, n);
          }
        };
      }(o || i);

      var s = r.readable || !1 !== r.readable && e.readable,
          a = r.writable || !1 !== r.writable && e.writable,
          u = function u() {
        e.writable || f();
      },
          h = e._writableState && e._writableState.finished,
          f = function f() {
        a = !1, h = !0, s || o.call(e);
      },
          c = e._readableState && e._readableState.endEmitted,
          l = function l() {
        s = !1, c = !0, a || o.call(e);
      },
          d = function d(t) {
        o.call(e, t);
      },
          p = function p() {
        var t;
        return s && !c ? (e._readableState && e._readableState.ended || (t = new n()), o.call(e, t)) : a && !h ? (e._writableState && e._writableState.ended || (t = new n()), o.call(e, t)) : void 0;
      },
          y = function y() {
        e.req.on("finish", f);
      };

      return !function (t) {
        return t.setHeader && "function" == typeof t.abort;
      }(e) ? a && !e._writableState && (e.on("end", u), e.on("close", u)) : (e.on("complete", f), e.on("abort", p), e.req ? y() : e.on("request", y)), e.on("end", l), e.on("finish", f), !1 !== r.error && e.on("error", d), e.on("close", p), function () {
        e.removeListener("complete", f), e.removeListener("abort", p), e.removeListener("request", y), e.req && e.req.removeListener("finish", f), e.removeListener("end", u), e.removeListener("close", u), e.removeListener("finish", f), e.removeListener("end", l), e.removeListener("error", d), e.removeListener("close", p);
      };
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(3).Buffer,
        i = r(0),
        o = r(98),
        s = new Array(16),
        a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
        u = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
        h = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
        f = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11],
        c = [0, 1518500249, 1859775393, 2400959708, 2840853838],
        l = [1352829926, 1548603684, 1836072691, 2053994217, 0];

    function d() {
      o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
    }

    function p(t, e) {
      return t << e | t >>> 32 - e;
    }

    function y(t, e, r, n, i, o, s, a) {
      return p(t + (e ^ r ^ n) + o + s | 0, a) + i | 0;
    }

    function m(t, e, r, n, i, o, s, a) {
      return p(t + (e & r | ~e & n) + o + s | 0, a) + i | 0;
    }

    function b(t, e, r, n, i, o, s, a) {
      return p(t + ((e | ~r) ^ n) + o + s | 0, a) + i | 0;
    }

    function v(t, e, r, n, i, o, s, a) {
      return p(t + (e & n | r & ~n) + o + s | 0, a) + i | 0;
    }

    function g(t, e, r, n, i, o, s, a) {
      return p(t + (e ^ (r | ~n)) + o + s | 0, a) + i | 0;
    }

    i(d, o), d.prototype._update = function () {
      for (var t = s, e = 0; e < 16; ++e) {
        t[e] = this._block.readInt32LE(4 * e);
      }

      for (var r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, o = 0 | this._d, d = 0 | this._e, w = 0 | this._a, _ = 0 | this._b, M = 0 | this._c, S = 0 | this._d, O = 0 | this._e, A = 0; A < 80; A += 1) {
        var E, x;
        A < 16 ? (E = y(r, n, i, o, d, t[a[A]], c[0], h[A]), x = g(w, _, M, S, O, t[u[A]], l[0], f[A])) : A < 32 ? (E = m(r, n, i, o, d, t[a[A]], c[1], h[A]), x = v(w, _, M, S, O, t[u[A]], l[1], f[A])) : A < 48 ? (E = b(r, n, i, o, d, t[a[A]], c[2], h[A]), x = b(w, _, M, S, O, t[u[A]], l[2], f[A])) : A < 64 ? (E = v(r, n, i, o, d, t[a[A]], c[3], h[A]), x = m(w, _, M, S, O, t[u[A]], l[3], f[A])) : (E = g(r, n, i, o, d, t[a[A]], c[4], h[A]), x = y(w, _, M, S, O, t[u[A]], l[4], f[A])), r = d, d = o, o = p(i, 10), i = n, n = E, w = O, O = S, S = p(M, 10), M = _, _ = x;
      }

      var k = this._b + i + S | 0;
      this._b = this._c + o + O | 0, this._c = this._d + d + w | 0, this._d = this._e + r + _ | 0, this._e = this._a + n + M | 0, this._a = k;
    }, d.prototype._digest = function () {
      this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
      var t = n.alloc ? n.alloc(20) : new n(20);
      return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t.writeInt32LE(this._e, 16), t;
    }, t.exports = d;
  }, function (t, e, r) {
    (e = t.exports = function (t) {
      t = t.toLowerCase();
      var r = e[t];
      if (!r) throw new Error(t + " is not supported (we accept pull requests)");
      return new r();
    }).sha = r(201), e.sha1 = r(202), e.sha224 = r(203), e.sha256 = r(105), e.sha384 = r(204), e.sha512 = r(106);
  }, function (t, e, r) {
    (e = t.exports = r(107)).Stream = e, e.Readable = e, e.Writable = r(68), e.Duplex = r(26), e.Transform = r(111), e.PassThrough = r(210);
  }, function (t, e, r) {
    "use strict";

    (function (e, n, i) {
      var o = r(48);

      function s(t) {
        var e = this;
        this.next = null, this.entry = null, this.finish = function () {
          !function (t, e, r) {
            var n = t.entry;
            t.entry = null;

            for (; n;) {
              var i = n.callback;
              e.pendingcb--, i(r), n = n.next;
            }

            e.corkedRequestsFree ? e.corkedRequestsFree.next = t : e.corkedRequestsFree = t;
          }(e, t);
        };
      }

      t.exports = v;
      var a,
          u = !e.browser && ["v0.10", "v0.9."].indexOf(e.version.slice(0, 5)) > -1 ? n : o.nextTick;
      v.WritableState = b;
      var h = Object.create(r(40));
      h.inherits = r(0);

      var f = {
        deprecate: r(63)
      },
          c = r(108),
          l = r(2).Buffer,
          d = i.Uint8Array || function () {};

      var p,
          y = r(109);

      function m() {}

      function b(t, e) {
        a = a || r(26), t = t || {};
        var n = e instanceof a;
        this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.writableObjectMode);
        var i = t.highWaterMark,
            h = t.writableHighWaterMark,
            f = this.objectMode ? 16 : 16384;
        this.highWaterMark = i || 0 === i ? i : n && (h || 0 === h) ? h : f, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
        var c = !1 === t.decodeStrings;
        this.decodeStrings = !c, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (t) {
          !function (t, e) {
            var r = t._writableState,
                n = r.sync,
                i = r.writecb;
            if (function (t) {
              t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
            }(r), e) !function (t, e, r, n, i) {
              --e.pendingcb, r ? (o.nextTick(i, n), o.nextTick(O, t, e), t._writableState.errorEmitted = !0, t.emit("error", n)) : (i(n), t._writableState.errorEmitted = !0, t.emit("error", n), O(t, e));
            }(t, r, n, e, i);else {
              var s = M(r);
              s || r.corked || r.bufferProcessing || !r.bufferedRequest || _(t, r), n ? u(w, t, r, s, i) : w(t, r, s, i);
            }
          }(e, t);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new s(this);
      }

      function v(t) {
        if (a = a || r(26), !(p.call(v, this) || this instanceof a)) return new v(t);
        this._writableState = new b(t, this), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), c.call(this);
      }

      function g(t, e, r, n, i, o, s) {
        e.writelen = n, e.writecb = s, e.writing = !0, e.sync = !0, r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
      }

      function w(t, e, r, n) {
        r || function (t, e) {
          0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
        }(t, e), e.pendingcb--, n(), O(t, e);
      }

      function _(t, e) {
        e.bufferProcessing = !0;
        var r = e.bufferedRequest;

        if (t._writev && r && r.next) {
          var n = e.bufferedRequestCount,
              i = new Array(n),
              o = e.corkedRequestsFree;
          o.entry = r;

          for (var a = 0, u = !0; r;) {
            i[a] = r, r.isBuf || (u = !1), r = r.next, a += 1;
          }

          i.allBuffers = u, g(t, e, !0, e.length, i, "", o.finish), e.pendingcb++, e.lastBufferedRequest = null, o.next ? (e.corkedRequestsFree = o.next, o.next = null) : e.corkedRequestsFree = new s(e), e.bufferedRequestCount = 0;
        } else {
          for (; r;) {
            var h = r.chunk,
                f = r.encoding,
                c = r.callback;
            if (g(t, e, !1, e.objectMode ? 1 : h.length, h, f, c), r = r.next, e.bufferedRequestCount--, e.writing) break;
          }

          null === r && (e.lastBufferedRequest = null);
        }

        e.bufferedRequest = r, e.bufferProcessing = !1;
      }

      function M(t) {
        return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
      }

      function S(t, e) {
        t._final(function (r) {
          e.pendingcb--, r && t.emit("error", r), e.prefinished = !0, t.emit("prefinish"), O(t, e);
        });
      }

      function O(t, e) {
        var r = M(e);
        return r && (!function (t, e) {
          e.prefinished || e.finalCalled || ("function" == typeof t._final ? (e.pendingcb++, e.finalCalled = !0, o.nextTick(S, t, e)) : (e.prefinished = !0, t.emit("prefinish")));
        }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"))), r;
      }

      h.inherits(v, c), b.prototype.getBuffer = function () {
        for (var t = this.bufferedRequest, e = []; t;) {
          e.push(t), t = t.next;
        }

        return e;
      }, function () {
        try {
          Object.defineProperty(b.prototype, "buffer", {
            get: f.deprecate(function () {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch (t) {}
      }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance], Object.defineProperty(v, Symbol.hasInstance, {
        value: function value(t) {
          return !!p.call(this, t) || this === v && t && t._writableState instanceof b;
        }
      })) : p = function p(t) {
        return t instanceof this;
      }, v.prototype.pipe = function () {
        this.emit("error", new Error("Cannot pipe, not readable"));
      }, v.prototype.write = function (t, e, r) {
        var n,
            i = this._writableState,
            s = !1,
            a = !i.objectMode && (n = t, l.isBuffer(n) || n instanceof d);
        return a && !l.isBuffer(t) && (t = function (t) {
          return l.from(t);
        }(t)), "function" == typeof e && (r = e, e = null), a ? e = "buffer" : e || (e = i.defaultEncoding), "function" != typeof r && (r = m), i.ended ? function (t, e) {
          var r = new Error("write after end");
          t.emit("error", r), o.nextTick(e, r);
        }(this, r) : (a || function (t, e, r, n) {
          var i = !0,
              s = !1;
          return null === r ? s = new TypeError("May not write null values to stream") : "string" == typeof r || void 0 === r || e.objectMode || (s = new TypeError("Invalid non-string/buffer chunk")), s && (t.emit("error", s), o.nextTick(n, s), i = !1), i;
        }(this, i, t, r)) && (i.pendingcb++, s = function (t, e, r, n, i, o) {
          if (!r) {
            var s = function (t, e, r) {
              t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = l.from(e, r));
              return e;
            }(e, n, i);

            n !== s && (r = !0, i = "buffer", n = s);
          }

          var a = e.objectMode ? 1 : n.length;
          e.length += a;
          var u = e.length < e.highWaterMark;
          u || (e.needDrain = !0);

          if (e.writing || e.corked) {
            var h = e.lastBufferedRequest;
            e.lastBufferedRequest = {
              chunk: n,
              encoding: i,
              isBuf: r,
              callback: o,
              next: null
            }, h ? h.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
          } else g(t, e, !1, a, n, i, o);

          return u;
        }(this, i, a, t, e, r)), s;
      }, v.prototype.cork = function () {
        this._writableState.corked++;
      }, v.prototype.uncork = function () {
        var t = this._writableState;
        t.corked && (t.corked--, t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || _(this, t));
      }, v.prototype.setDefaultEncoding = function (t) {
        if ("string" == typeof t && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + t);
        return this._writableState.defaultEncoding = t, this;
      }, Object.defineProperty(v.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      }), v.prototype._write = function (t, e, r) {
        r(new Error("_write() is not implemented"));
      }, v.prototype._writev = null, v.prototype.end = function (t, e, r) {
        var n = this._writableState;
        "function" == typeof t ? (r = t, t = null, e = null) : "function" == typeof e && (r = e, e = null), null != t && this.write(t, e), n.corked && (n.corked = 1, this.uncork()), n.ending || n.finished || function (t, e, r) {
          e.ending = !0, O(t, e), r && (e.finished ? o.nextTick(r) : t.once("finish", r));
          e.ended = !0, t.writable = !1;
        }(this, n, r);
      }, Object.defineProperty(v.prototype, "destroyed", {
        get: function get() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        },
        set: function set(t) {
          this._writableState && (this._writableState.destroyed = t);
        }
      }), v.prototype.destroy = y.destroy, v.prototype._undestroy = y.undestroy, v.prototype._destroy = function (t, e) {
        this.end(), e(t);
      };
    }).call(this, r(5), r(110).setImmediate, r(7));
  }, function (t, e, r) {
    "use strict";

    var n = r(12);

    function i(t) {
      this.options = t, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
    }

    t.exports = i, i.prototype._init = function () {}, i.prototype.update = function (t) {
      return 0 === t.length ? [] : "decrypt" === this.type ? this._updateDecrypt(t) : this._updateEncrypt(t);
    }, i.prototype._buffer = function (t, e) {
      for (var r = Math.min(this.buffer.length - this.bufferOff, t.length - e), n = 0; n < r; n++) {
        this.buffer[this.bufferOff + n] = t[e + n];
      }

      return this.bufferOff += r, r;
    }, i.prototype._flushBuffer = function (t, e) {
      return this._update(this.buffer, 0, t, e), this.bufferOff = 0, this.blockSize;
    }, i.prototype._updateEncrypt = function (t) {
      var e = 0,
          r = 0,
          n = (this.bufferOff + t.length) / this.blockSize | 0,
          i = new Array(n * this.blockSize);
      0 !== this.bufferOff && (e += this._buffer(t, e), this.bufferOff === this.buffer.length && (r += this._flushBuffer(i, r)));

      for (var o = t.length - (t.length - e) % this.blockSize; e < o; e += this.blockSize) {
        this._update(t, e, i, r), r += this.blockSize;
      }

      for (; e < t.length; e++, this.bufferOff++) {
        this.buffer[this.bufferOff] = t[e];
      }

      return i;
    }, i.prototype._updateDecrypt = function (t) {
      for (var e = 0, r = 0, n = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1, i = new Array(n * this.blockSize); n > 0; n--) {
        e += this._buffer(t, e), r += this._flushBuffer(i, r);
      }

      return e += this._buffer(t, e), i;
    }, i.prototype.final = function (t) {
      var e, r;
      return t && (e = this.update(t)), r = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(), e ? e.concat(r) : r;
    }, i.prototype._pad = function (t, e) {
      if (0 === e) return !1;

      for (; e < t.length;) {
        t[e++] = 0;
      }

      return !0;
    }, i.prototype._finalEncrypt = function () {
      if (!this._pad(this.buffer, this.bufferOff)) return [];
      var t = new Array(this.blockSize);
      return this._update(this.buffer, 0, t, 0), t;
    }, i.prototype._unpad = function (t) {
      return t;
    }, i.prototype._finalDecrypt = function () {
      n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
      var t = new Array(this.blockSize);
      return this._flushBuffer(t, 0), this._unpad(t);
    };
  }, function (t, e, r) {
    var n = r(223),
        i = r(231),
        o = r(124);
    e.createCipher = e.Cipher = n.createCipher, e.createCipheriv = e.Cipheriv = n.createCipheriv, e.createDecipher = e.Decipher = i.createDecipher, e.createDecipheriv = e.Decipheriv = i.createDecipheriv, e.listCiphers = e.getCiphers = function () {
      return Object.keys(o);
    };
  }, function (t, e, r) {
    var n = {
      ECB: r(224),
      CBC: r(225),
      CFB: r(226),
      CFB8: r(227),
      CFB1: r(228),
      OFB: r(229),
      CTR: r(122),
      GCM: r(122)
    },
        i = r(124);

    for (var o in i) {
      i[o].module = n[i[o].mode];
    }

    t.exports = i;
  }, function (t, e, r) {
    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i;

    function o(t) {
      this.rand = t;
    }

    if (t.exports = function (t) {
      return i || (i = new o(null)), i.generate(t);
    }, t.exports.Rand = o, o.prototype.generate = function (t) {
      return this._rand(t);
    }, o.prototype._rand = function (t) {
      if (this.rand.getBytes) return this.rand.getBytes(t);

      for (var e = new Uint8Array(t), r = 0; r < e.length; r++) {
        e[r] = this.rand.getByte();
      }

      return e;
    }, "object" === ("undefined" == typeof self ? "undefined" : n(self))) self.crypto && self.crypto.getRandomValues ? o.prototype._rand = function (t) {
      var e = new Uint8Array(t);
      return self.crypto.getRandomValues(e), e;
    } : self.msCrypto && self.msCrypto.getRandomValues ? o.prototype._rand = function (t) {
      var e = new Uint8Array(t);
      return self.msCrypto.getRandomValues(e), e;
    } : "object" === ("undefined" == typeof window ? "undefined" : n(window)) && (o.prototype._rand = function () {
      throw new Error("Not implemented yet");
    });else try {
      var s = r(237);
      if ("function" != typeof s.randomBytes) throw new Error("Not supported");

      o.prototype._rand = function (t) {
        return s.randomBytes(t);
      };
    } catch (t) {}
  }, function (t, e, r) {
    /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
    var n = r(3),
        i = n.Buffer;

    function o(t, e) {
      for (var r in t) {
        e[r] = t[r];
      }
    }

    function s(t, e, r) {
      return i(t, e, r);
    }

    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function (t, e, r) {
      if ("number" == typeof t) throw new TypeError("Argument must not be a number");
      return i(t, e, r);
    }, s.alloc = function (t, e, r) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      var n = i(t);
      return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
    }, s.allocUnsafe = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return i(t);
    }, s.allocUnsafeSlow = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return n.SlowBuffer(t);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(32).codes.ERR_STREAM_PREMATURE_CLOSE;

    function i() {}

    t.exports = function t(e, r, o) {
      if ("function" == typeof r) return t(e, null, r);
      r || (r = {}), o = function (t) {
        var e = !1;
        return function () {
          if (!e) {
            e = !0;

            for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
              n[i] = arguments[i];
            }

            t.apply(this, n);
          }
        };
      }(o || i);

      var s = r.readable || !1 !== r.readable && e.readable,
          a = r.writable || !1 !== r.writable && e.writable,
          u = function u() {
        e.writable || f();
      },
          h = e._writableState && e._writableState.finished,
          f = function f() {
        a = !1, h = !0, s || o.call(e);
      },
          c = e._readableState && e._readableState.endEmitted,
          l = function l() {
        s = !1, c = !0, a || o.call(e);
      },
          d = function d(t) {
        o.call(e, t);
      },
          p = function p() {
        var t;
        return s && !c ? (e._readableState && e._readableState.ended || (t = new n()), o.call(e, t)) : a && !h ? (e._writableState && e._writableState.ended || (t = new n()), o.call(e, t)) : void 0;
      },
          y = function y() {
        e.req.on("finish", f);
      };

      return !function (t) {
        return t.setHeader && "function" == typeof t.abort;
      }(e) ? a && !e._writableState && (e.on("end", u), e.on("close", u)) : (e.on("complete", f), e.on("abort", p), e.req ? y() : e.on("request", y)), e.on("end", l), e.on("finish", f), !1 !== r.error && e.on("error", d), e.on("close", p), function () {
        e.removeListener("complete", f), e.removeListener("abort", p), e.removeListener("request", y), e.req && e.req.removeListener("finish", f), e.removeListener("end", u), e.removeListener("close", u), e.removeListener("finish", f), e.removeListener("end", l), e.removeListener("error", d), e.removeListener("close", p);
      };
    };
  }, function (t, e, r) {
    (function (e) {
      var n = r(76),
          i = r(28);

      function o(t) {
        var e,
            r = t.modulus.byteLength();

        do {
          e = new n(i(r));
        } while (e.cmp(t.modulus) >= 0 || !e.umod(t.prime1) || !e.umod(t.prime2));

        return e;
      }

      function s(t, r) {
        var i = function (t) {
          var e = o(t);
          return {
            blinder: e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),
            unblinder: e.invm(t.modulus)
          };
        }(r),
            s = r.modulus.byteLength(),
            a = new n(t).mul(i.blinder).umod(r.modulus),
            u = a.toRed(n.mont(r.prime1)),
            h = a.toRed(n.mont(r.prime2)),
            f = r.coefficient,
            c = r.prime1,
            l = r.prime2,
            d = u.redPow(r.exponent1).fromRed(),
            p = h.redPow(r.exponent2).fromRed(),
            y = d.isub(p).imul(f).umod(c).imul(l);

        return p.iadd(y).imul(i.unblinder).umod(r.modulus).toArrayLike(e, "be", s);
      }

      s.getr = o, t.exports = s;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(250).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void i(!1, "Invalid character in " + t);
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var o = 0, s = 0, a = Math.min(t.length, r), u = e; u < a; u++) {
            var h = t.charCodeAt(u) - 48;
            o *= n, s = h >= 49 ? h - 49 + 10 : h >= 17 ? h - 17 + 10 : h, i(h >= 0 && s < n, "Invalid character"), o += s;
          }

          return o;
        }

        function c(t, e) {
          t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red;
        }

        if (s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this._strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }

          this._strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this._strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype._move = function (t) {
          c(t, this);
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype._strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
          s.prototype[Symbol.for("nodejs.util.inspect.custom")] = l;
        } catch (t) {
          s.prototype.inspect = l;
        } else s.prototype.inspect = l;

        function l() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }

        var d = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            p = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            y = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? d[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = p[t],
                f = y[t];
            r = "";
            var c = this.clone();

            for (c.negative = 0; !c.isZero();) {
              var l = c.modrn(f).toString(t);
              r = (c = c.idivn(f)).isZero() ? l + r : d[h - l.length] + l + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16, 2);
        }, a && (s.prototype.toBuffer = function (t, e) {
          return this.toArrayLike(a, t, e);
        }), s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        };

        function m(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r._strip();
        }

        s.prototype.toArrayLike = function (t, e, r) {
          this._strip();

          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0");

          var s = function (t, e) {
            return t.allocUnsafe ? t.allocUnsafe(e) : new t(e);
          }(t, o);

          return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](s, n), s;
        }, s.prototype._toArrayLikeLE = function (t, e) {
          for (var r = 0, n = 0, i = 0, o = 0; i < this.length; i++) {
            var s = this.words[i] << o | n;
            t[r++] = 255 & s, r < t.length && (t[r++] = s >> 8 & 255), r < t.length && (t[r++] = s >> 16 & 255), 6 === o ? (r < t.length && (t[r++] = s >> 24 & 255), n = 0, o = 0) : (n = s >>> 24, o += 2);
          }

          if (r < t.length) for (t[r++] = n; r < t.length;) {
            t[r++] = 0;
          }
        }, s.prototype._toArrayLikeBE = function (t, e) {
          for (var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++) {
            var s = this.words[i] << o | n;
            t[r--] = 255 & s, r >= 0 && (t[r--] = s >> 8 & 255), r >= 0 && (t[r--] = s >> 16 & 255), 6 === o ? (r >= 0 && (t[r--] = s >> 24 & 255), n = 0, o = 0) : (n = s >>> 24, o += 2);
          }

          if (r >= 0) for (t[r--] = n; r >= 0;) {
            t[r--] = 0;
          }
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this._strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this._strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this._strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this._strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this._strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this._strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var b = function b(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function v(t, e, r) {
          r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

          for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
            var s = i;
            i = 0;

            for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
              var f = o - h,
                  c = (0 | t.words[f]) * (0 | e.words[h]),
                  l = 67108863 & c;
              a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
            }

            r.words[o] = a, n = s, s = i;
          }

          return 0 !== n ? r.words[o] = n : r.length--, r._strip();
        }

        function g(t, e, r) {
          return v(t, e, r);
        }

        function w(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (b = m), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? b(this, t, e) : r < 63 ? m(this, t, e) : r < 1024 ? v(this, t, e) : g(this, t, e);
        }, w.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, w.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, w.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, w.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, w.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, w.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, w.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, w.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, w.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, w.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), g(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          var e = t < 0;
          e && (t = -t), i("number" == typeof t), i(t < 67108864);

          for (var r = 0, n = 0; n < this.length; n++) {
            var o = (0 | this.words[n]) * t,
                s = (67108863 & o) + (67108863 & r);
            r >>= 26, r += o / 67108864 | 0, r += s >>> 26, this.words[n] = 67108863 & s;
          }

          return 0 !== r && (this.words[n] = r, this.length++), e ? this.ineg() : this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = t.words[n] >>> i & 1;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this._strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this._strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this._strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this._strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this._strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a._strip(), n._strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modrn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modrn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modrn = function (t) {
          var e = t < 0;
          e && (t = -t), i(t <= 67108863);

          for (var r = (1 << 26) % t, n = 0, o = this.length - 1; o >= 0; o--) {
            n = (r * n + (0 | this.words[o])) % t;
          }

          return e ? -n : n;
        }, s.prototype.modn = function (t) {
          return this.modrn(t);
        }, s.prototype.idivn = function (t) {
          var e = t < 0;
          e && (t = -t), i(t <= 67108863);

          for (var r = 0, n = this.length - 1; n >= 0; n--) {
            var o = (0 | this.words[n]) + 67108864 * r;
            this.words[n] = o / t | 0, r = o % t;
          }

          return this._strip(), e ? this.ineg() : this;
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this._strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new x(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var _ = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function M(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function S() {
          M.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function O() {
          M.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function A() {
          M.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function E() {
          M.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function x(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function k(t) {
          x.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        M.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, M.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, M.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, M.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(S, M), S.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, S.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(O, M), o(A, M), o(E, M), E.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (_[t]) return _[t];
          var e;
          if ("k256" === t) e = new S();else if ("p224" === t) e = new O();else if ("p192" === t) e = new A();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new E();
          }
          return _[t] = e, e;
        }, x.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, x.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, x.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : (c(t, t.umod(this.m)._forceRed(this)), t);
        }, x.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, x.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, x.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, x.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, x.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, x.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, x.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, x.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, x.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, x.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, x.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, x.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, x.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, x.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, x.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new k(t);
        }, o(k, x), k.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, k.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, k.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, k.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, k.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.version = r(251).version, n.utils = r(13), n.rand = r(72), n.curve = r(137), n.curves = r(78), n.ec = r(263), n.eddsa = r(267);
  }, function (t, e, r) {
    "use strict";

    var n,
        i = e,
        o = r(79),
        s = r(137),
        a = r(13).assert;

    function u(t) {
      "short" === t.type ? this.curve = new s.short(t) : "edwards" === t.type ? this.curve = new s.edwards(t) : this.curve = new s.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, a(this.g.validate(), "Invalid curve"), a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }

    function h(t, e) {
      Object.defineProperty(i, t, {
        configurable: !0,
        enumerable: !0,
        get: function get() {
          var r = new u(e);
          return Object.defineProperty(i, t, {
            configurable: !0,
            enumerable: !0,
            value: r
          }), r;
        }
      });
    }

    i.PresetCurve = u, h("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: o.sha256,
      gRed: !1,
      g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
    }), h("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: o.sha256,
      gRed: !1,
      g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
    }), h("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: o.sha256,
      gRed: !1,
      g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
    }), h("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: o.sha384,
      gRed: !1,
      g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
    }), h("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: o.sha512,
      gRed: !1,
      g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
    }), h("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: o.sha256,
      gRed: !1,
      g: ["9"]
    }), h("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: o.sha256,
      gRed: !1,
      g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
    });

    try {
      n = r(262);
    } catch (t) {
      n = void 0;
    }

    h("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: o.sha256,
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [{
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      }, {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }],
      gRed: !1,
      g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n]
    });
  }, function (t, e, r) {
    var n = e;
    n.utils = r(17), n.common = r(42), n.sha = r(256), n.ripemd = r(260), n.hmac = r(261), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var i,
          o = r(3),
          s = o.Buffer,
          a = {};

      for (i in o) {
        o.hasOwnProperty(i) && "SlowBuffer" !== i && "Buffer" !== i && (a[i] = o[i]);
      }

      var u = a.Buffer = {};

      for (i in s) {
        s.hasOwnProperty(i) && "allocUnsafe" !== i && "allocUnsafeSlow" !== i && (u[i] = s[i]);
      }

      if (a.Buffer.prototype = s.prototype, u.from && u.from !== Uint8Array.from || (u.from = function (t, e, r) {
        if ("number" == typeof t) throw new TypeError('The "value" argument must not be of type number. Received type ' + n(t));
        if (t && void 0 === t.length) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t));
        return s(t, e, r);
      }), u.alloc || (u.alloc = function (t, e, r) {
        if ("number" != typeof t) throw new TypeError('The "size" argument must be of type number. Received type ' + n(t));
        if (t < 0 || t >= 2 * (1 << 30)) throw new RangeError('The value "' + t + '" is invalid for option "size"');
        var i = s(t);
        return e && 0 !== e.length ? "string" == typeof r ? i.fill(e, r) : i.fill(e) : i.fill(0), i;
      }), !a.kStringMaxLength) try {
        a.kStringMaxLength = e.binding("buffer").kStringMaxLength;
      } catch (t) {}
      a.constants || (a.constants = {
        MAX_LENGTH: a.kMaxLength
      }, a.kStringMaxLength && (a.constants.MAX_STRING_LENGTH = a.kStringMaxLength)), t.exports = a;
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(82).Reporter,
        o = r(43).EncoderBuffer,
        s = r(43).DecoderBuffer,
        a = r(12),
        u = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"],
        h = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(u);

    function f(t, e, r) {
      var n = {};
      this._baseState = n, n.name = r, n.enc = t, n.parent = e || null, n.children = null, n.tag = null, n.args = null, n.reverseArgs = null, n.choice = null, n.optional = !1, n.any = !1, n.obj = !1, n.use = null, n.useDecoder = null, n.key = null, n.default = null, n.explicit = null, n.implicit = null, n.contains = null, n.parent || (n.children = [], this._wrap());
    }

    t.exports = f;
    var c = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
    f.prototype.clone = function () {
      var t = this._baseState,
          e = {};
      c.forEach(function (r) {
        e[r] = t[r];
      });
      var r = new this.constructor(e.parent);
      return r._baseState = e, r;
    }, f.prototype._wrap = function () {
      var t = this._baseState;
      h.forEach(function (e) {
        this[e] = function () {
          var r = new this.constructor(this);
          return t.children.push(r), r[e].apply(r, arguments);
        };
      }, this);
    }, f.prototype._init = function (t) {
      var e = this._baseState;
      a(null === e.parent), t.call(this), e.children = e.children.filter(function (t) {
        return t._baseState.parent === this;
      }, this), a.equal(e.children.length, 1, "Root node can have only one child");
    }, f.prototype._useArgs = function (t) {
      var e = this._baseState,
          r = t.filter(function (t) {
        return t instanceof this.constructor;
      }, this);
      t = t.filter(function (t) {
        return !(t instanceof this.constructor);
      }, this), 0 !== r.length && (a(null === e.children), e.children = r, r.forEach(function (t) {
        t._baseState.parent = this;
      }, this)), 0 !== t.length && (a(null === e.args), e.args = t, e.reverseArgs = t.map(function (t) {
        if ("object" !== n(t) || t.constructor !== Object) return t;
        var e = {};
        return Object.keys(t).forEach(function (r) {
          r == (0 | r) && (r |= 0);
          var n = t[r];
          e[n] = r;
        }), e;
      }));
    }, ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach(function (t) {
      f.prototype[t] = function () {
        var e = this._baseState;
        throw new Error(t + " not implemented for encoding: " + e.enc);
      };
    }), u.forEach(function (t) {
      f.prototype[t] = function () {
        var e = this._baseState,
            r = Array.prototype.slice.call(arguments);
        return a(null === e.tag), e.tag = t, this._useArgs(r), this;
      };
    }), f.prototype.use = function (t) {
      a(t);
      var e = this._baseState;
      return a(null === e.use), e.use = t, this;
    }, f.prototype.optional = function () {
      return this._baseState.optional = !0, this;
    }, f.prototype.def = function (t) {
      var e = this._baseState;
      return a(null === e.default), e.default = t, e.optional = !0, this;
    }, f.prototype.explicit = function (t) {
      var e = this._baseState;
      return a(null === e.explicit && null === e.implicit), e.explicit = t, this;
    }, f.prototype.implicit = function (t) {
      var e = this._baseState;
      return a(null === e.explicit && null === e.implicit), e.implicit = t, this;
    }, f.prototype.obj = function () {
      var t = this._baseState,
          e = Array.prototype.slice.call(arguments);
      return t.obj = !0, 0 !== e.length && this._useArgs(e), this;
    }, f.prototype.key = function (t) {
      var e = this._baseState;
      return a(null === e.key), e.key = t, this;
    }, f.prototype.any = function () {
      return this._baseState.any = !0, this;
    }, f.prototype.choice = function (t) {
      var e = this._baseState;
      return a(null === e.choice), e.choice = t, this._useArgs(Object.keys(t).map(function (e) {
        return t[e];
      })), this;
    }, f.prototype.contains = function (t) {
      var e = this._baseState;
      return a(null === e.use), e.contains = t, this;
    }, f.prototype._decode = function (t, e) {
      var r = this._baseState;
      if (null === r.parent) return t.wrapResult(r.children[0]._decode(t, e));
      var n,
          i = r.default,
          o = !0,
          a = null;

      if (null !== r.key && (a = t.enterKey(r.key)), r.optional) {
        var u = null;

        if (null !== r.explicit ? u = r.explicit : null !== r.implicit ? u = r.implicit : null !== r.tag && (u = r.tag), null !== u || r.any) {
          if (o = this._peekTag(t, u, r.any), t.isError(o)) return o;
        } else {
          var h = t.save();

          try {
            null === r.choice ? this._decodeGeneric(r.tag, t, e) : this._decodeChoice(t, e), o = !0;
          } catch (t) {
            o = !1;
          }

          t.restore(h);
        }
      }

      if (r.obj && o && (n = t.enterObject()), o) {
        if (null !== r.explicit) {
          var f = this._decodeTag(t, r.explicit);

          if (t.isError(f)) return f;
          t = f;
        }

        var c = t.offset;

        if (null === r.use && null === r.choice) {
          var l;
          r.any && (l = t.save());

          var d = this._decodeTag(t, null !== r.implicit ? r.implicit : r.tag, r.any);

          if (t.isError(d)) return d;
          r.any ? i = t.raw(l) : t = d;
        }

        if (e && e.track && null !== r.tag && e.track(t.path(), c, t.length, "tagged"), e && e.track && null !== r.tag && e.track(t.path(), t.offset, t.length, "content"), r.any || (i = null === r.choice ? this._decodeGeneric(r.tag, t, e) : this._decodeChoice(t, e)), t.isError(i)) return i;

        if (r.any || null !== r.choice || null === r.children || r.children.forEach(function (r) {
          r._decode(t, e);
        }), r.contains && ("octstr" === r.tag || "bitstr" === r.tag)) {
          var p = new s(i);
          i = this._getUse(r.contains, t._reporterState.obj)._decode(p, e);
        }
      }

      return r.obj && o && (i = t.leaveObject(n)), null === r.key || null === i && !0 !== o ? null !== a && t.exitKey(a) : t.leaveKey(a, r.key, i), i;
    }, f.prototype._decodeGeneric = function (t, e, r) {
      var n = this._baseState;
      return "seq" === t || "set" === t ? null : "seqof" === t || "setof" === t ? this._decodeList(e, t, n.args[0], r) : /str$/.test(t) ? this._decodeStr(e, t, r) : "objid" === t && n.args ? this._decodeObjid(e, n.args[0], n.args[1], r) : "objid" === t ? this._decodeObjid(e, null, null, r) : "gentime" === t || "utctime" === t ? this._decodeTime(e, t, r) : "null_" === t ? this._decodeNull(e, r) : "bool" === t ? this._decodeBool(e, r) : "objDesc" === t ? this._decodeStr(e, t, r) : "int" === t || "enum" === t ? this._decodeInt(e, n.args && n.args[0], r) : null !== n.use ? this._getUse(n.use, e._reporterState.obj)._decode(e, r) : e.error("unknown tag: " + t);
    }, f.prototype._getUse = function (t, e) {
      var r = this._baseState;
      return r.useDecoder = this._use(t, e), a(null === r.useDecoder._baseState.parent), r.useDecoder = r.useDecoder._baseState.children[0], r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(), r.useDecoder._baseState.implicit = r.implicit), r.useDecoder;
    }, f.prototype._decodeChoice = function (t, e) {
      var r = this._baseState,
          n = null,
          i = !1;
      return Object.keys(r.choice).some(function (o) {
        var s = t.save(),
            a = r.choice[o];

        try {
          var u = a._decode(t, e);

          if (t.isError(u)) return !1;
          n = {
            type: o,
            value: u
          }, i = !0;
        } catch (e) {
          return t.restore(s), !1;
        }

        return !0;
      }, this), i ? n : t.error("Choice not matched");
    }, f.prototype._createEncoderBuffer = function (t) {
      return new o(t, this.reporter);
    }, f.prototype._encode = function (t, e, r) {
      var n = this._baseState;

      if (null === n.default || n.default !== t) {
        var i = this._encodeValue(t, e, r);

        if (void 0 !== i && !this._skipDefault(i, e, r)) return i;
      }
    }, f.prototype._encodeValue = function (t, e, r) {
      var o = this._baseState;
      if (null === o.parent) return o.children[0]._encode(t, e || new i());
      var s = null;

      if (this.reporter = e, o.optional && void 0 === t) {
        if (null === o.default) return;
        t = o.default;
      }

      var a = null,
          u = !1;
      if (o.any) s = this._createEncoderBuffer(t);else if (o.choice) s = this._encodeChoice(t, e);else if (o.contains) a = this._getUse(o.contains, r)._encode(t, e), u = !0;else if (o.children) a = o.children.map(function (r) {
        if ("null_" === r._baseState.tag) return r._encode(null, e, t);
        if (null === r._baseState.key) return e.error("Child should have a key");
        var i = e.enterKey(r._baseState.key);
        if ("object" !== n(t)) return e.error("Child expected, but input is not object");

        var o = r._encode(t[r._baseState.key], e, t);

        return e.leaveKey(i), o;
      }, this).filter(function (t) {
        return t;
      }), a = this._createEncoderBuffer(a);else if ("seqof" === o.tag || "setof" === o.tag) {
        if (!o.args || 1 !== o.args.length) return e.error("Too many args for : " + o.tag);
        if (!Array.isArray(t)) return e.error("seqof/setof, but data is not Array");
        var h = this.clone();
        h._baseState.implicit = null, a = this._createEncoderBuffer(t.map(function (r) {
          var n = this._baseState;
          return this._getUse(n.args[0], t)._encode(r, e);
        }, h));
      } else null !== o.use ? s = this._getUse(o.use, r)._encode(t, e) : (a = this._encodePrimitive(o.tag, t), u = !0);

      if (!o.any && null === o.choice) {
        var f = null !== o.implicit ? o.implicit : o.tag,
            c = null === o.implicit ? "universal" : "context";
        null === f ? null === o.use && e.error("Tag could be omitted only for .use()") : null === o.use && (s = this._encodeComposite(f, u, c, a));
      }

      return null !== o.explicit && (s = this._encodeComposite(o.explicit, !1, "context", s)), s;
    }, f.prototype._encodeChoice = function (t, e) {
      var r = this._baseState,
          n = r.choice[t.type];
      return n || a(!1, t.type + " not found in " + JSON.stringify(Object.keys(r.choice))), n._encode(t.value, e);
    }, f.prototype._encodePrimitive = function (t, e) {
      var r = this._baseState;
      if (/str$/.test(t)) return this._encodeStr(e, t);
      if ("objid" === t && r.args) return this._encodeObjid(e, r.reverseArgs[0], r.args[1]);
      if ("objid" === t) return this._encodeObjid(e, null, null);
      if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
      if ("null_" === t) return this._encodeNull();
      if ("int" === t || "enum" === t) return this._encodeInt(e, r.args && r.reverseArgs[0]);
      if ("bool" === t) return this._encodeBool(e);
      if ("objDesc" === t) return this._encodeStr(e, t);
      throw new Error("Unsupported tag: " + t);
    }, f.prototype._isNumstr = function (t) {
      return /^[0-9 ]*$/.test(t);
    }, f.prototype._isPrintstr = function (t) {
      return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(t);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(0);

    function i(t) {
      this._reporterState = {
        obj: null,
        path: [],
        options: t || {},
        errors: []
      };
    }

    function o(t, e) {
      this.path = t, this.rethrow(e);
    }

    e.Reporter = i, i.prototype.isError = function (t) {
      return t instanceof o;
    }, i.prototype.save = function () {
      var t = this._reporterState;
      return {
        obj: t.obj,
        pathLen: t.path.length
      };
    }, i.prototype.restore = function (t) {
      var e = this._reporterState;
      e.obj = t.obj, e.path = e.path.slice(0, t.pathLen);
    }, i.prototype.enterKey = function (t) {
      return this._reporterState.path.push(t);
    }, i.prototype.exitKey = function (t) {
      var e = this._reporterState;
      e.path = e.path.slice(0, t - 1);
    }, i.prototype.leaveKey = function (t, e, r) {
      var n = this._reporterState;
      this.exitKey(t), null !== n.obj && (n.obj[e] = r);
    }, i.prototype.path = function () {
      return this._reporterState.path.join("/");
    }, i.prototype.enterObject = function () {
      var t = this._reporterState,
          e = t.obj;
      return t.obj = {}, e;
    }, i.prototype.leaveObject = function (t) {
      var e = this._reporterState,
          r = e.obj;
      return e.obj = t, r;
    }, i.prototype.error = function (t) {
      var e,
          r = this._reporterState,
          n = t instanceof o;
      if (e = n ? t : new o(r.path.map(function (t) {
        return "[" + JSON.stringify(t) + "]";
      }).join(""), t.message || t, t.stack), !r.options.partial) throw e;
      return n || r.errors.push(e), e;
    }, i.prototype.wrapResult = function (t) {
      var e = this._reporterState;
      return e.options.partial ? {
        result: this.isError(t) ? null : t,
        errors: e.errors
      } : t;
    }, n(o, Error), o.prototype.rethrow = function (t) {
      if (this.message = t + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, o), !this.stack) try {
        throw new Error(this.message);
      } catch (t) {
        this.stack = t.stack;
      }
      return this;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      var e = {};
      return Object.keys(t).forEach(function (r) {
        (0 | r) == r && (r |= 0);
        var n = t[r];
        e[n] = r;
      }), e;
    }

    e.tagClass = {
      0: "universal",
      1: "application",
      2: "context",
      3: "private"
    }, e.tagClassByName = n(e.tagClass), e.tag = {
      0: "end",
      1: "bool",
      2: "int",
      3: "bitstr",
      4: "octstr",
      5: "null_",
      6: "objid",
      7: "objDesc",
      8: "external",
      9: "real",
      10: "enum",
      11: "embed",
      12: "utf8str",
      13: "relativeOid",
      16: "seq",
      17: "set",
      18: "numstr",
      19: "printstr",
      20: "t61str",
      21: "videostr",
      22: "ia5str",
      23: "utctime",
      24: "gentime",
      25: "graphstr",
      26: "iso646str",
      27: "genstr",
      28: "unistr",
      29: "charstr",
      30: "bmpstr"
    }, e.tagByName = n(e.tag);
  }, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(286).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
            var a = t.charCodeAt(s) - 48;
            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
          }

          return i;
        }

        s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this.strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }
          this.strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this.strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype.strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, s.prototype.inspect = function () {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var c = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

        function p(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
        }

        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = l[t],
                f = d[t];
            r = "";
            var p = this.clone();

            for (p.negative = 0; !p.isZero();) {
              var y = p.modn(f).toString(t);
              r = (p = p.idivn(f)).isZero() ? y + r : c[h - y.length] + y + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16);
        }, s.prototype.toBuffer = function (t, e) {
          return i(void 0 !== a), this.toArrayLike(a, t, e);
        }, s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        }, s.prototype.toArrayLike = function (t, e, r) {
          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0"), this.strip();
          var s,
              a,
              u = "le" === e,
              h = new t(o),
              f = this.clone();

          if (u) {
            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[a] = s;
            }

            for (; a < o; a++) {
              h[a] = 0;
            }
          } else {
            for (a = 0; a < o - n; a++) {
              h[a] = 0;
            }

            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
            }
          }

          return h;
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this.strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this.strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this.strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var y = function y(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function m(t, e, r) {
          return new b().mulp(t, e, r);
        }

        function b(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (y = p), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? y(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? function (t, e, r) {
            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

            for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
              var s = i;
              i = 0;

              for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                var f = o - h,
                    c = (0 | t.words[f]) * (0 | e.words[h]),
                    l = 67108863 & c;
                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
              }

              r.words[o] = a, n = s, s = i;
            }

            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
          }(this, t, e) : m(this, t, e);
        }, b.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, b.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, b.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, b.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, b.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, b.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, b.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, b.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, b.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, b.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), m(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          i("number" == typeof t), i(t < 67108864);

          for (var e = 0, r = 0; r < this.length; r++) {
            var n = (0 | this.words[r]) * t,
                o = (67108863 & n) + (67108863 & e);
            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
          }

          return 0 !== e && (this.words[r] = e, this.length++), this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = (t.words[n] & 1 << i) >>> i;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this.strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this.strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this.strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this.strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this.strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modn = function (t) {
          i(t <= 67108863);

          for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) {
            r = (e * r + (0 | this.words[n])) % t;
          }

          return r;
        }, s.prototype.idivn = function (t) {
          i(t <= 67108863);

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = (0 | this.words[r]) + 67108864 * e;
            this.words[r] = n / t | 0, e = n % t;
          }

          return this.strip();
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this.strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new O(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var v = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function g(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function w() {
          g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function _() {
          g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function M() {
          g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function S() {
          g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function O(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function A(t) {
          O.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        g.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, g.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, g.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, g.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(w, g), w.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, w.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(_, g), o(M, g), o(S, g), S.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (v[t]) return v[t];
          var e;
          if ("k256" === t) e = new w();else if ("p224" === t) e = new _();else if ("p192" === t) e = new M();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new S();
          }
          return v[t] = e, e;
        }, O.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, O.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, O.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
        }, O.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, O.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, O.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, O.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, O.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, O.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, O.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, O.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, O.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, O.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, O.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, O.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, O.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, O.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, O.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new A(t);
        }, o(A, O), A.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, A.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, A.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e, r) {
    "use strict";

    t.exports = r(295);
  }, function (t, e, r) {
    "use strict";

    t.exports = new Set(["__proto__", "constructor", "prototype"]);
  }, function (t, e, r) {
    "use strict";

    var n = r(88);
    /*!
     * ignore
     */

    t.exports = function (t) {
      var e = null != this ? this.path : null;
      return n(t, e);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(21);
    /*!
     * Given a value, cast it to a boolean, or throw a `CastError` if the value
     * cannot be casted. `null` and `undefined` are considered valid.
     *
     * @param {Any} value
     * @param {String} [path] optional the path to set on the CastError
     * @return {Boolean|null|undefined}
     * @throws {CastError} if `value` is not one of the allowed values
     * @api private
     */

    t.exports = function (e, r) {
      if (t.exports.convertToTrue.has(e)) return !0;
      if (t.exports.convertToFalse.has(e)) return !1;
      if (null == e) return e;
      throw new n("boolean", e, r);
    }, t.exports.convertToTrue = new Set([!0, "true", 1, "1", "yes"]), t.exports.convertToFalse = new Set([!1, "false", 0, "0", "no"]);
  }, function (t, e, r) {
    "use strict";

    (function (n) {
      /*!
       * Module dependencies.
       */
      function i(t, e, r) {
        return e in t ? Object.defineProperty(t, e, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : t[e] = r, t;
      }

      function o(t) {
        return (o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      function s(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

        if (!r) {
          if (Array.isArray(t) || (r = function (t, e) {
            if (!t) return;
            if ("string" == typeof t) return a(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === r && t.constructor && (r = t.constructor.name);
            if ("Map" === r || "Set" === r) return Array.from(t);
            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return a(t, e);
          }(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);

            var _n5 = 0,
                i = function i() {};

            return {
              s: i,
              n: function n() {
                return _n5 >= t.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: t[_n5++]
                };
              },
              e: function e(t) {
                throw t;
              },
              f: i
            };
          }

          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }

        var o,
            s = !0,
            u = !1;
        return {
          s: function s() {
            r = r.call(t);
          },
          n: function n() {
            var t = r.next();
            return s = t.done, t;
          },
          e: function e(t) {
            u = !0, o = t;
          },
          f: function f() {
            try {
              s || null == r.return || r.return();
            } finally {
              if (u) throw o;
            }
          }
        };
      }

      function a(t, e) {
        (null == e || e > t.length) && (e = t.length);

        for (var r = 0, n = new Array(e); r < e; r++) {
          n[r] = t[r];
        }

        return n;
      }

      var u,
          h = r(11).EventEmitter,
          f = r(318),
          c = r(20),
          l = r(10),
          d = r(15),
          p = r(319),
          y = r(90),
          m = r(165),
          b = r(6),
          v = r(37),
          g = r(320),
          w = r(321),
          _ = r(160),
          M = r(85),
          S = r(24).get().ReadPreference,
          O = r(322),
          A = r(4),
          E = r(326),
          x = r(327).middlewareFunctions,
          k = r(167).middlewareFunctions,
          j = x.concat(k).reduce(function (t, e) {
        return t.add(e);
      }, new Set()),
          $ = 0;

      function P(t, e) {
        if (!(this instanceof P)) return new P(t, e);

        if (this.obj = t, this.paths = {}, this.aliases = {}, this.subpaths = {}, this.virtuals = {}, this.singleNestedPaths = {}, this.nested = {}, this.inherits = {}, this.callQueue = [], this._indexes = [], this.methods = {}, this.methodOptions = {}, this.statics = {}, this.tree = {}, this.query = {}, this.childSchemas = [], this.plugins = [], this.$id = ++$, this.mapPaths = [], this.s = {
          hooks: new f()
        }, this.options = this.defaultOptions(e), Array.isArray(t)) {
          var r,
              n = s(t);

          try {
            for (n.s(); !(r = n.n()).done;) {
              var i = r.value;
              this.add(i);
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }
        } else t && this.add(t);

        var o = t && t._id && A.isObject(t._id);
        !this.paths._id && this.options._id && !o && m(this), this.setupTimestamp(this.options.timestamps);
      }
      /*!
       * Create virtual properties with alias field
       */

      /*!
       * Inherit from EventEmitter.
       */


      P.prototype = Object.create(h.prototype), P.prototype.constructor = P, P.prototype.instanceOfSchema = !0,
      /*!
       * ignore
       */
      Object.defineProperty(P.prototype, "$schemaType", {
        configurable: !1,
        enumerable: !1,
        writable: !0
      }), Object.defineProperty(P.prototype, "childSchemas", {
        configurable: !1,
        enumerable: !0,
        writable: !0
      }), Object.defineProperty(P.prototype, "virtuals", {
        configurable: !1,
        enumerable: !0,
        writable: !0
      }), P.prototype.obj, P.prototype.paths, P.prototype.tree, P.prototype.clone = function () {
        var t = this,
            e = new (null == this.base ? P : this.base.Schema)({}, this._userProvidedOptions);
        return e.base = this.base, e.obj = this.obj, e.options = A.clone(this.options), e.callQueue = this.callQueue.map(function (t) {
          return t;
        }), e.methods = A.clone(this.methods), e.methodOptions = A.clone(this.methodOptions), e.statics = A.clone(this.statics), e.query = A.clone(this.query), e.plugins = Array.prototype.slice.call(this.plugins), e._indexes = A.clone(this._indexes), e.s.hooks = this.s.hooks.clone(), e.tree = A.clone(this.tree), e.paths = A.clone(this.paths), e.nested = A.clone(this.nested), e.subpaths = A.clone(this.subpaths), e.singleNestedPaths = A.clone(this.singleNestedPaths), e.childSchemas =
        /*!
         * ignore
         */
        function (t) {
          for (var e = [], r = 0, n = Object.keys(t.paths); r < n.length; r++) {
            var i = n[r],
                o = t.paths[i];
            (o.$isMongooseDocumentArray || o.$isSingleNested) && e.push({
              schema: o.schema,
              model: o.caster
            });
          }

          return e;
        }
        /*!
         * ignore
         */
        (e), e.virtuals = A.clone(this.virtuals), e.$globalPluginsApplied = this.$globalPluginsApplied, e.$isRootDiscriminator = this.$isRootDiscriminator, e.$implicitlyCreated = this.$implicitlyCreated, e.$id = ++$, e.$originalSchemaId = this.$id, e.mapPaths = [].concat(this.mapPaths), null != this.discriminatorMapping && (e.discriminatorMapping = Object.assign({}, this.discriminatorMapping)), null != this.discriminators && (e.discriminators = Object.assign({}, this.discriminators)), e.aliases = Object.assign({}, this.aliases), e.on("init", function (e) {
          return t.emit("init", e);
        }), e;
      }, P.prototype.pick = function (t, e) {
        var r = new P({}, e || this.options);
        if (!Array.isArray(t)) throw new c('Schema#pick() only accepts an array argument, got "' + o(t) + '"');
        var n,
            a = s(t);

        try {
          for (a.s(); !(n = a.n()).done;) {
            var u = n.value;
            if (this.nested[u]) r.add(i({}, u, b(this.tree, u)));else {
              var h = this.path(u);
              if (null == h) throw new c("Path `" + u + "` is not in the schema");
              r.add(i({}, u, h));
            }
          }
        } catch (t) {
          a.e(t);
        } finally {
          a.f();
        }

        return r;
      }, P.prototype.defaultOptions = function (t) {
        this._userProvidedOptions = null == t ? {} : A.clone(t);
        var e = b(this, "base.options", {}),
            r = !("strict" in e) || e.strict;
        if ((t = A.options({
          strict: r,
          strictQuery: "strict" in this._userProvidedOptions ? this._userProvidedOptions.strict : "strictQuery" in e ? e.strictQuery : r,
          bufferCommands: !0,
          capped: !1,
          versionKey: "__v",
          optimisticConcurrency: !1,
          minimize: !0,
          autoIndex: null,
          discriminatorKey: "__t",
          shardKey: null,
          read: null,
          validateBeforeSave: !0,
          _id: !0,
          id: !0,
          typeKey: "type"
        }, A.clone(t))).read && (t.read = S(t.read)), t.versionKey && "string" != typeof t.versionKey) throw new c("`versionKey` must be falsy or string, got `" + o(t.versionKey) + "`");
        if (t.optimisticConcurrency && !t.versionKey) throw new c("Must set `versionKey` if using `optimisticConcurrency`");
        return t;
      }, P.prototype.add = function (t, e) {
        if (t instanceof P || null != t && t.instanceOfSchema) return _(this, t), this;
        if (!1 === t._id && null == e && (this.options._id = !1), "__proto__." === (e = e || "") || "constructor." === e || "prototype." === e) return this;

        for (var r = 0, n = Object.keys(t); r < n.length; r++) {
          var i = n[r],
              o = e + i;
          if (null == t[i]) throw new TypeError("Invalid value for schema path `" + o + '`, got value "' + t[i] + '"');
          if ("_id" !== i || !1 !== t[i]) if (t[i] instanceof y || "VirtualType" === b(t[i], "constructor.name", null)) this.virtual(t[i]);else {
            if (Array.isArray(t[i]) && 1 === t[i].length && null == t[i][0]) throw new TypeError("Invalid value for schema Array path `" + o + '`, got value "' + t[i][0] + '"');
            if (A.isPOJO(t[i]) || t[i] instanceof d) {
              if (Object.keys(t[i]).length < 1) e && (this.nested[e.substr(0, e.length - 1)] = !0), this.path(o, t[i]);else if (t[i][this.options.typeKey] && ("type" !== this.options.typeKey || t[i].type instanceof Function || !t[i].type.type)) {
                var a = t[i][this.options.typeKey];

                if (A.isPOJO(a) && Object.keys(a).length > 0) {
                  e && (this.nested[e.substr(0, e.length - 1)] = !0);
                  var u = new P(a),
                      h = Object.assign({}, t[i], {
                    type: u
                  });
                  this.path(e + i, h);
                } else e && (this.nested[e.substr(0, e.length - 1)] = !0), this.path(e + i, t[i]);
              } else this.nested[o] = !0, this.add(t[i], o + ".");
            } else e && (this.nested[e.substr(0, e.length - 1)] = !0), this.path(e + i, t[i]);
          }
        }

        return function (t, e) {
          var r,
              n = s(e = e || Object.keys(t.paths));

          try {
            for (n.s(); !(r = n.n()).done;) {
              var i = r.value,
                  o = b(t.paths[i], "options");

              if (null != o) {
                var a = t.paths[i].path,
                    u = o.alias;

                if (u) {
                  if ("string" != typeof u) throw new Error("Invalid value for alias option on " + a + ", got " + u);
                  t.aliases[u] = a, t.virtual(u).get(function (t) {
                    return function () {
                      return "function" == typeof this.get ? this.get(t) : this[t];
                    };
                  }(a)).set(function (t) {
                    return function (e) {
                      return this.$set(t, e);
                    };
                  }(a));
                }
              }
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }
        }(this, Object.keys(t).map(function (t) {
          return e ? e + t : t;
        })), this;
      }, P.reserved = Object.create(null), P.prototype.reserved = P.reserved;
      var R = P.reserved;
      /*!
       * ignore
       */

      function B(t) {
        return /\.\d+/.test(t) ? t.replace(/\.\d+\./g, ".$.").replace(/\.\d+$/, ".$") : t;
      }
      /*!
       * ignore
       */


      function T(t, e) {
        if (0 === t.mapPaths.length) return null;
        var r,
            n = s(t.mapPaths);

        try {
          for (n.s(); !(r = n.n()).done;) {
            var i = r.value.path;
            if (new RegExp("^" + i.replace(/\.\$\*/g, "\\.[^.]+") + "$").test(e)) return t.paths[i];
          }
        } catch (t) {
          n.e(t);
        } finally {
          n.f();
        }

        return null;
      }
      /*!
       * ignore. Deprecated re: #6405
       */


      function I(t, e) {
        var r = e.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);
        if (r.length < 2) return t.paths.hasOwnProperty(r[0]) ? t.paths[r[0]] : "adhocOrUndefined";
        var n = t.path(r[0]),
            i = !1;
        if (!n) return "adhocOrUndefined";

        for (var o = r.length - 1, s = 1; s < r.length; ++s) {
          i = !1;
          var a = r[s];

          if (s === o && n && !/\D/.test(a)) {
            n = n.$isMongooseDocumentArray ? n.$embeddedSchemaType : n instanceof u.Array ? n.caster : void 0;
            break;
          }

          if (/\D/.test(a)) {
            if (!n || !n.schema) {
              n = void 0;
              break;
            }

            i = "nested" === n.schema.pathType(a), n = n.schema.path(a);
          } else n instanceof u.Array && s !== o && (n = n.caster);
        }

        return t.subpaths[e] = n, n ? "real" : i ? "nested" : "adhocOrUndefined";
      }
      /*!
       * ignore
       */


      R.prototype = R.emit = R.listeners = R.on = R.removeListener = R.collection = R.errors = R.get = R.init = R.isModified = R.isNew = R.populated = R.remove = R.save = R.toObject = R.validate = 1, R.collection = 1, P.prototype.path = function (t, e) {
        var r = B(t);

        if (void 0 === e) {
          var n = function (t, e, r) {
            if (t.paths.hasOwnProperty(e)) return t.paths[e];
            if (t.subpaths.hasOwnProperty(r)) return t.subpaths[r];
            if (t.singleNestedPaths.hasOwnProperty(r) && "object" === o(t.singleNestedPaths[r])) return t.singleNestedPaths[r];
            return null;
          }(this, t, r);

          if (null != n) return n;
          var i = T(this, t);
          return null != i ? i : null != (n = this.hasMixedParent(r)) ? n : /\.\d+\.?.*$/.test(t) ? function (t, e) {
            return I(t, e), t.subpaths[e];
          }(this, t) : void 0;
        }

        var a = t.split(".")[0];

        if (R[a] && !this.options.supressReservedKeysWarning) {
          var u = "`".concat(a, "` is a reserved schema pathname and may break some functionality. ") + "You are allowed to use it, but use at your own risk. To disable this warning pass `supressReservedKeysWarning` as a schema option.";
          A.warn(u);
        }

        "object" === o(e) && A.hasUserDefinedProperty(e, "ref") && E(e.ref, t);
        var h,
            f = t.split(/\./),
            c = f.pop(),
            d = this.tree,
            p = "",
            y = s(f);

        try {
          for (y.s(); !(h = y.n()).done;) {
            var m = h.value;

            if (p = p += (p.length > 0 ? "." : "") + m, d[m] || (this.nested[p] = !0, d[m] = {}), "object" !== o(d[m])) {
              var b = "Cannot set nested path `" + t + "`. Parent path `" + p + "` already set to type " + d[m].name + ".";
              throw new Error(b);
            }

            d = d[m];
          }
        } catch (t) {
          y.e(t);
        } finally {
          y.f();
        }

        d[c] = A.clone(e), this.paths[t] = this.interpretAsType(t, e, this.options);
        var v = this.paths[t];

        if (v.$isSchemaMap) {
          var g = t + ".$*";
          this.paths[g] = v.$__schemaType, this.mapPaths.push(this.paths[g]);
        }

        if (v.$isSingleNested) {
          for (var w = 0, _ = Object.keys(v.schema.paths); w < _.length; w++) {
            var M = _[w];
            this.singleNestedPaths[t + "." + M] = v.schema.paths[M];
          }

          for (var S = 0, O = Object.keys(v.schema.singleNestedPaths); S < O.length; S++) {
            var x = O[S];
            this.singleNestedPaths[t + "." + x] = v.schema.singleNestedPaths[x];
          }

          for (var k = 0, j = Object.keys(v.schema.subpaths); k < j.length; k++) {
            var $ = j[k];
            this.singleNestedPaths[t + "." + $] = v.schema.subpaths[$];
          }

          for (var P = 0, N = Object.keys(v.schema.nested); P < N.length; P++) {
            var D = N[P];
            this.singleNestedPaths[t + "." + D] = "nested";
          }

          Object.defineProperty(v.schema, "base", {
            configurable: !0,
            enumerable: !1,
            writable: !1,
            value: this.base
          }), v.caster.base = this.base, this.childSchemas.push({
            schema: v.schema,
            model: v.caster
          });
        } else v.$isMongooseDocumentArray && (Object.defineProperty(v.schema, "base", {
          configurable: !0,
          enumerable: !1,
          writable: !1,
          value: this.base
        }), v.casterConstructor.base = this.base, this.childSchemas.push({
          schema: v.schema,
          model: v.casterConstructor
        }));

        if (v.$isMongooseArray && v.caster instanceof l) {
          for (var C = t, L = v, q = []; L.$isMongooseArray;) {
            C += ".$", L.$isMongooseDocumentArray ? (L.$embeddedSchemaType._arrayPath = C, L.$embeddedSchemaType._arrayParentPath = t, L = L.$embeddedSchemaType.clone()) : (L.caster._arrayPath = C, L.caster._arrayParentPath = t, L = L.caster.clone()), L.path = C, q.push(L);
          }

          for (var U = 0, F = q; U < F.length; U++) {
            var z = F[U];
            this.subpaths[z.path] = z;
          }
        }

        if (v.$isMongooseDocumentArray) {
          for (var V = 0, K = Object.keys(v.schema.paths); V < K.length; V++) {
            var H = K[V],
                W = v.schema.paths[H];
            this.subpaths[t + "." + H] = W, "object" === o(W) && null != W && (W.$isUnderneathDocArray = !0);
          }

          for (var Z = 0, J = Object.keys(v.schema.subpaths); Z < J.length; Z++) {
            var Y = J[Z],
                G = v.schema.subpaths[Y];
            this.subpaths[t + "." + Y] = G, "object" === o(G) && null != G && (G.$isUnderneathDocArray = !0);
          }

          for (var Q = 0, X = Object.keys(v.schema.singleNestedPaths); Q < X.length; Q++) {
            var tt = X[Q],
                et = v.schema.singleNestedPaths[tt];
            this.subpaths[t + "." + tt] = et, "object" === o(et) && null != et && (et.$isUnderneathDocArray = !0);
          }
        }

        return this;
      }, Object.defineProperty(P.prototype, "base", {
        configurable: !0,
        enumerable: !1,
        writable: !0,
        value: null
      }), P.prototype.interpretAsType = function (t, e, r) {
        if (e instanceof l) {
          if (e.path === t) return e;
          var s = e.clone();
          return s.path = t, s;
        }

        var a = null != this.base ? this.base.Schema.Types : P.Types;

        if (!(A.isPOJO(e) || e instanceof d) && "Object" !== A.getFunctionName(e.constructor)) {
          var u = e;
          (e = {})[r.typeKey] = u;
        }

        var h,
            f = e[r.typeKey] && (e[r.typeKey] instanceof Function || "type" !== r.typeKey || !e.type.type) ? e[r.typeKey] : {};
        if (A.isPOJO(f) || "mixed" === f) return new a.Mixed(t, e);

        if (Array.isArray(f) || f === Array || "array" === f || f === a.Array) {
          var c = f === Array || "array" === f ? e.cast || e.of : f[0];

          if (c && c.instanceOfSchema) {
            if (!(c instanceof P)) throw new TypeError("Schema for array path `" + t + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`.");
            return new a.DocumentArray(t, c, e);
          }

          if (c && c[r.typeKey] && c[r.typeKey].instanceOfSchema) {
            if (!(c[r.typeKey] instanceof P)) throw new TypeError("Schema for array path `" + t + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`.");
            return new a.DocumentArray(t, c[r.typeKey], e, c);
          }

          if (Array.isArray(c)) return new a.Array(t, this.interpretAsType(t, c, r), e);
          var p = null == c || !c[r.typeKey] || "type" === r.typeKey && c.type.type ? c : c[r.typeKey];
          if ("string" == typeof c) c = a[c.charAt(0).toUpperCase() + c.substring(1)];else if (A.isPOJO(p)) {
            if (Object.keys(p).length) {
              var y = {
                minimize: r.minimize
              };
              r.typeKey && (y.typeKey = r.typeKey), r.hasOwnProperty("strict") && (y.strict = r.strict), this._userProvidedOptions.hasOwnProperty("_id") ? y._id = this._userProvidedOptions._id : null != P.Types.DocumentArray.defaultOptions._id && (y._id = P.Types.DocumentArray.defaultOptions._id);
              var m = new P(p, y);
              return m.$implicitlyCreated = !0, new a.DocumentArray(t, m, e);
            }

            return new a.Array(t, a.Mixed, e);
          }

          if (c) {
            if ("ClockDate" === (h = "string" == typeof (f = !c[r.typeKey] || "type" === r.typeKey && c.type.type ? c : c[r.typeKey]) ? f : f.schemaName || A.getFunctionName(f)) && (h = "Date"), void 0 === h) throw new TypeError("Invalid schema configuration: " + "Could not determine the embedded type for array `".concat(t, "`. ") + "See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
            if (!a.hasOwnProperty(h)) throw new TypeError("Invalid schema configuration: " + "`".concat(h, "` is not a valid type within the array `").concat(t, "`.") + "See http://bit.ly/mongoose-schematypes for a list of valid schema types.");
          }

          return new a.Array(t, c || a.Mixed, e, r);
        }

        if (f && f.instanceOfSchema) return new a.Subdocument(f, t, e);
        if ((h = n.isBuffer(f) ? "Buffer" : "function" == typeof f || "object" === o(f) ? f.schemaName || A.getFunctionName(f) : null == f ? "" + f : f.toString()) && (h = h.charAt(0).toUpperCase() + h.substring(1)), "ObjectID" === h && (h = "ObjectId"), "ClockDate" === h && (h = "Date"), void 0 === h) throw new TypeError("Invalid schema configuration: `".concat(t, "` schematype definition is ") + "invalid. See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
        if (null == a[h]) throw new TypeError("Invalid schema configuration: `".concat(h, "` is not ") + "a valid type at path `".concat(t, "`. See ") + "http://bit.ly/mongoose-schematypes for a list of valid schema types.");
        var b = new a[h](t, e);
        return b.$isSchemaMap &&
        /*!
         * ignore
         */
        function (t, e, r, n, o) {
          var s = r + ".$*",
              a = {
            type: {}
          };

          if (A.hasUserDefinedProperty(n, "of")) {
            var u = A.isPOJO(n.of) && Object.keys(n.of).length > 0 && !A.hasUserDefinedProperty(n.of, t.options.typeKey);
            a = u ? i({}, t.options.typeKey, new P(n.of)) : A.isPOJO(n.of) ? Object.assign({}, n.of) : i({}, t.options.typeKey, n.of), A.hasUserDefinedProperty(n, "ref") && (a.ref = n.ref);
          }

          e.$__schemaType = t.interpretAsType(s, a, o);
        }(this, b, t, e, r), b;
      }, P.prototype.eachPath = function (t) {
        for (var e = Object.keys(this.paths), r = e.length, n = 0; n < r; ++n) {
          t(e[n], this.paths[e[n]]);
        }

        return this;
      }, P.prototype.requiredPaths = function (t) {
        if (this._requiredpaths && !t) return this._requiredpaths;

        for (var e = Object.keys(this.paths), r = e.length, n = []; r--;) {
          var i = e[r];
          this.paths[i].isRequired && n.push(i);
        }

        return this._requiredpaths = n, this._requiredpaths;
      }, P.prototype.indexedPaths = function () {
        return this._indexedpaths || (this._indexedpaths = this.indexes()), this._indexedpaths;
      }, P.prototype.pathType = function (t) {
        var e = B(t);
        if (this.paths.hasOwnProperty(t)) return "real";
        if (this.virtuals.hasOwnProperty(t)) return "virtual";
        if (this.nested.hasOwnProperty(t)) return "nested";
        if (this.subpaths.hasOwnProperty(e) || this.subpaths.hasOwnProperty(t)) return "real";
        var r = this.singleNestedPaths.hasOwnProperty(e) || this.singleNestedPaths.hasOwnProperty(t);
        return r ? "nested" === r ? "nested" : "real" : null != T(this, t) ? "real" : /\.\d+\.|\.\d+$/.test(t) ? I(this, t) : "adhocOrUndefined";
      }, P.prototype.hasMixedParent = function (t) {
        var e = t.split(/\./g);
        t = "";

        for (var r = 0; r < e.length; ++r) {
          if (t = r > 0 ? t + "." + e[r] : e[r], this.paths.hasOwnProperty(t) && this.paths[t] instanceof u.Mixed) return this.paths[t];
        }

        return null;
      }, P.prototype.setupTimestamp = function (t) {
        return O(this, t);
      }, P.prototype.queue = function (t, e) {
        return this.callQueue.push([t, e]), this;
      }, P.prototype.pre = function (t) {
        if (t instanceof RegExp) {
          var e,
              r = Array.prototype.slice.call(arguments, 1),
              n = s(j);

          try {
            for (n.s(); !(e = n.n()).done;) {
              var i = e.value;
              t.test(i) && this.pre.apply(this, [i].concat(r));
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }

          return this;
        }

        if (Array.isArray(t)) {
          var o,
              a = Array.prototype.slice.call(arguments, 1),
              u = s(t);

          try {
            for (u.s(); !(o = u.n()).done;) {
              var h = o.value;
              this.pre.apply(this, [h].concat(a));
            }
          } catch (t) {
            u.e(t);
          } finally {
            u.f();
          }

          return this;
        }

        return this.s.hooks.pre.apply(this.s.hooks, arguments), this;
      }, P.prototype.post = function (t) {
        if (t instanceof RegExp) {
          var e,
              r = Array.prototype.slice.call(arguments, 1),
              n = s(j);

          try {
            for (n.s(); !(e = n.n()).done;) {
              var i = e.value;
              t.test(i) && this.post.apply(this, [i].concat(r));
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }

          return this;
        }

        if (Array.isArray(t)) {
          var o,
              a = Array.prototype.slice.call(arguments, 1),
              u = s(t);

          try {
            for (u.s(); !(o = u.n()).done;) {
              var h = o.value;
              this.post.apply(this, [h].concat(a));
            }
          } catch (t) {
            u.e(t);
          } finally {
            u.f();
          }

          return this;
        }

        return this.s.hooks.post.apply(this.s.hooks, arguments), this;
      }, P.prototype.plugin = function (t, e) {
        if ("function" != typeof t) throw new Error('First param to `schema.plugin()` must be a function, got "' + o(t) + '"');

        if (e && e.deduplicate) {
          var r,
              n = s(this.plugins);

          try {
            for (n.s(); !(r = n.n()).done;) {
              if (r.value.fn === t) return this;
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }
        }

        return this.plugins.push({
          fn: t,
          opts: e
        }), t(this, e), this;
      }, P.prototype.method = function (t, e, r) {
        if ("string" != typeof t) for (var n in t) {
          this.methods[n] = t[n], this.methodOptions[n] = A.clone(r);
        } else this.methods[t] = e, this.methodOptions[t] = A.clone(r);
        return this;
      }, P.prototype.static = function (t, e) {
        if ("string" != typeof t) for (var r in t) {
          this.statics[r] = t[r];
        } else this.statics[t] = e;
        return this;
      }, P.prototype.index = function (t, e) {
        return t || (t = {}), e || (e = {}), e.expires && A.expires(e), this._indexes.push([t, e]), this;
      }, P.prototype.set = function (t, e, r) {
        if (1 === arguments.length) return this.options[t];

        switch (t) {
          case "read":
            this.options[t] = S(e, r), this._userProvidedOptions[t] = this.options[t];
            break;

          case "timestamps":
            this.setupTimestamp(e), this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
            break;

          case "_id":
            this.options[t] = e, this._userProvidedOptions[t] = this.options[t], e && !this.paths._id ? m(this) : !e && null != this.paths._id && this.paths._id.auto && this.remove("_id");
            break;

          default:
            this.options[t] = e, this._userProvidedOptions[t] = this.options[t];
        }

        return this;
      }, P.prototype.get = function (t) {
        return this.options[t];
      };
      var N = "2d 2dsphere hashed text".split(" ");
      /*!
       * ignore
       */

      function D(t, e) {
        var r,
            n = e.split("."),
            i = n.pop(),
            o = t.tree,
            a = s(n);

        try {
          for (a.s(); !(r = a.n()).done;) {
            o = o[r.value];
          }
        } catch (t) {
          a.e(t);
        } finally {
          a.f();
        }

        delete o[i];
      }
      /*!
       * ignore
       */


      function C(t) {
        return t.startsWith("$[") && t.endsWith("]");
      }
      /*!
       * Called by `compile()` _right before_ compiling. Good for making any changes to
       * the schema that should respect options set by plugins, like `id`
       */


      Object.defineProperty(P, "indexTypes", {
        get: function get() {
          return N;
        },
        set: function set() {
          throw new Error("Cannot overwrite Schema.indexTypes");
        }
      }), P.prototype.indexes = function () {
        return g(this);
      }, P.prototype.virtual = function (t, e) {
        if (t instanceof y || "VirtualType" === v(t)) return this.virtual(t.path, t.options);

        if (e = new p(e), A.hasUserDefinedProperty(e, ["ref", "refPath"])) {
          if (null == e.localField) throw new Error("Reference virtuals require `localField` option");
          if (null == e.foreignField) throw new Error("Reference virtuals require `foreignField` option");
          this.pre("init", function (r) {
            if (M.has(t, r)) {
              var n = M.get(t, r);
              this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), e.justOne || e.count ? this.$$populatedVirtuals[t] = Array.isArray(n) ? n[0] : n : this.$$populatedVirtuals[t] = Array.isArray(n) ? n : null == n ? [] : [n], M.unset(t, r);
            }
          });
          var r = this.virtual(t);
          r.options = e, r.set(function (r) {
            this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), e.justOne || e.count ? (this.$$populatedVirtuals[t] = Array.isArray(r) ? r[0] : r, "object" !== o(this.$$populatedVirtuals[t]) && (this.$$populatedVirtuals[t] = e.count ? r : null)) : (this.$$populatedVirtuals[t] = Array.isArray(r) ? r : null == r ? [] : [r], this.$$populatedVirtuals[t] = this.$$populatedVirtuals[t].filter(function (t) {
              return t && "object" === o(t);
            }));
          }), "function" == typeof e.get && r.get(e.get);

          for (var n = t.split("."), i = n[0], s = 0; s < n.length - 1; ++s) {
            if (null != this.paths[i] && this.paths[i].$isMongooseDocumentArray) {
              var a = n.slice(s + 1).join(".");
              this.paths[i].schema.virtual(a, e);
              break;
            }

            i += "." + n[s + 1];
          }

          return r;
        }

        var u = this.virtuals,
            h = t.split(".");
        if ("real" === this.pathType(t)) throw new Error('Virtual path "' + t + '" conflicts with a real path in the schema');
        return u[t] = h.reduce(function (r, n, i) {
          return r[n] || (r[n] = i === h.length - 1 ? new y(e, t) : {}), r[n];
        }, this.tree), u[t];
      }, P.prototype.virtualpath = function (t) {
        return this.virtuals.hasOwnProperty(t) ? this.virtuals[t] : null;
      }, P.prototype.remove = function (t) {
        return "string" == typeof t && (t = [t]), Array.isArray(t) && t.forEach(function (t) {
          if (null != this.path(t) || this.nested[t]) {
            if (this.nested[t]) {
              var e,
                  r = s(Object.keys(this.paths).concat(Object.keys(this.nested)));

              try {
                for (r.s(); !(e = r.n()).done;) {
                  var n = e.value;
                  n.startsWith(t + ".") && (delete this.paths[n], delete this.nested[n], D(this, n));
                }
              } catch (t) {
                r.e(t);
              } finally {
                r.f();
              }

              return delete this.nested[t], void D(this, t);
            }

            delete this.paths[t], D(this, t);
          }
        }, this), this;
      }, P.prototype.loadClass = function (t, e) {
        return t === Object.prototype || t === Function.prototype || t.prototype.hasOwnProperty("$isMongooseModelPrototype") || (this.loadClass(Object.getPrototypeOf(t), e), e || Object.getOwnPropertyNames(t).forEach(function (e) {
          if (!e.match(/^(length|name|prototype|constructor|__proto__)$/)) {
            var r = Object.getOwnPropertyDescriptor(t, e);
            r.hasOwnProperty("value") && this.static(e, r.value);
          }
        }, this), Object.getOwnPropertyNames(t.prototype).forEach(function (r) {
          if (!r.match(/^(constructor)$/)) {
            var n = Object.getOwnPropertyDescriptor(t.prototype, r);
            e || "function" == typeof n.value && this.method(r, n.value), "function" == typeof n.get && (this.virtuals[r] && (this.virtuals[r].getters = []), this.virtual(r).get(n.get)), "function" == typeof n.set && (this.virtuals[r] && (this.virtuals[r].setters = []), this.virtual(r).set(n.set));
          }
        }, this)), this;
      },
      /*!
       * ignore
       */
      P.prototype._getSchema = function (t) {
        var e = this.path(t),
            r = [];
        if (e) return e.$fullPath = t, e;

        for (var n = t.split("."), i = 0; i < n.length; ++i) {
          ("$" === n[i] || C(n[i])) && (n[i] = "0");
        }

        return function t(e, n) {
          for (var i, o, s = e.length + 1; s--;) {
            if (o = e.slice(0, s).join("."), i = n.path(o)) {
              if (r.push(o), i.caster) {
                if (i.caster instanceof u.Mixed) return i.caster.$fullPath = r.join("."), i.caster;

                if (s !== e.length && i.schema) {
                  var a = void 0;
                  return "$" === e[s] || C(e[s]) ? s + 1 === e.length ? i : ((a = t(e.slice(s + 1), i.schema)) && (a.$isUnderneathDocArray = a.$isUnderneathDocArray || !i.schema.$isSingleNested), a) : ((a = t(e.slice(s), i.schema)) && (a.$isUnderneathDocArray = a.$isUnderneathDocArray || !i.schema.$isSingleNested), a);
                }
              } else if (i.$isSchemaMap) {
                return s >= e.length ? i : s + 1 >= e.length ? i.$__schemaType : t(e.slice(s + 1), i.$__schemaType.schema);
              }

              return i.$fullPath = r.join("."), i;
            }
          }
        }(n, this);
      },
      /*!
       * ignore
       */
      P.prototype._getPathType = function (t) {
        if (this.path(t)) return "real";
        return function t(e, r) {
          for (var n, i, o = e.length + 1; o--;) {
            if (i = e.slice(0, o).join("."), n = r.path(i)) return n.caster ? n.caster instanceof u.Mixed ? {
              schema: n,
              pathType: "mixed"
            } : o !== e.length && n.schema ? "$" === e[o] || C(e[o]) ? o === e.length - 1 ? {
              schema: n,
              pathType: "nested"
            } : t(e.slice(o + 1), n.schema) : t(e.slice(o), n.schema) : {
              schema: n,
              pathType: n.$isSingleNested ? "nested" : "array"
            } : {
              schema: n,
              pathType: "real"
            };
            if (o === e.length && r.nested[i]) return {
              schema: r,
              pathType: "nested"
            };
          }

          return {
            schema: n || r,
            pathType: "undefined"
          };
        }(t.split("."), this);
      }, P.prototype._preCompile = function () {
        w(this);
      },
      /*!
       * Module exports.
       */
      t.exports = e = P, P.Types = u = r(91),
      /*!
       * ignore
       */
      e.ObjectId = u.ObjectId;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n6 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n6 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n6++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o = r(4);

    function s(t, e) {
      this.path = e, this.getters = [], this.setters = [], this.options = Object.assign({}, t);
    }

    s.prototype._applyDefaultGetters = function () {
      if (!(this.getters.length > 0 || this.setters.length > 0)) {
        var t = "$" + this.path;
        this.getters.push(function () {
          return this[t];
        }), this.setters.push(function (e) {
          this[t] = e;
        });
      }
    },
    /*!
     * ignore
     */
    s.prototype.clone = function () {
      var t = new s(this.options, this.path);
      return t.getters = [].concat(this.getters), t.setters = [].concat(this.setters), t;
    }, s.prototype.get = function (t) {
      return this.getters.push(t), this;
    }, s.prototype.set = function (t) {
      return this.setters.push(t), this;
    }, s.prototype.applyGetters = function (t, e) {
      o.hasUserDefinedProperty(this.options, ["ref", "refPath"]) && e.$$populatedVirtuals && e.$$populatedVirtuals.hasOwnProperty(this.path) && (t = e.$$populatedVirtuals[this.path]);
      var r,
          i = t,
          s = n(this.getters);

      try {
        for (s.s(); !(r = s.n()).done;) {
          i = r.value.call(e, i, this, e);
        }
      } catch (t) {
        s.e(t);
      } finally {
        s.f();
      }

      return i;
    }, s.prototype.applySetters = function (t, e) {
      var r,
          i = t,
          o = n(this.setters);

      try {
        for (o.s(); !(r = o.n()).done;) {
          i = r.value.call(e, i, this, e);
        }
      } catch (t) {
        o.e(t);
      } finally {
        o.f();
      }

      return i;
    },
    /*!
     * exports
     */
    t.exports = s;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module exports.
     */

    e.String = r(329), e.Number = r(169), e.Boolean = r(333), e.DocumentArray = r(334), e.Subdocument = r(341), e.Array = r(92), e.Buffer = r(343), e.Date = r(345), e.ObjectId = r(348), e.Mixed = r(46), e.Decimal128 = e.Decimal = r(350), e.Map = r(352), e.Oid = e.ObjectId, e.Object = e.Mixed, e.Bool = e.Boolean, e.ObjectID = e.ObjectId;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n7 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n7 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n7++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o,
        s,
        a = r(87),
        u = r(163),
        h = r(20),
        f = r(335),
        c = r(10),
        l = c.CastError,
        d = r(46),
        p = r(336),
        y = r(337),
        m = r(6),
        b = r(173),
        v = r(9),
        g = r(4),
        w = r(58).castToNumber,
        _ = r(174),
        M = r(59),
        S = Symbol("mongoose#isNestedArray"),
        O = Object.freeze({});

    function A(t, e, n, i) {
      s || (s = r(60).Embedded);
      var o,
          a,
          u = "type";

      if (i && i.typeKey && (u = i.typeKey), this.schemaOptions = i, e) {
        var h = {};
        g.isPOJO(e) && (e[u] ? (delete (h = g.clone(e))[u], e = e[u]) : e = d), null != n && null != n.ref && null == h.ref && (h.ref = n.ref), e === Object && (e = d);
        var f = "string" == typeof e ? e : g.getFunctionName(e),
            l = r(91),
            p = l.hasOwnProperty(f) ? l[f] : e;
        if (this.casterConstructor = p, this.casterConstructor instanceof A && (this.casterConstructor[S] = !0), "function" != typeof p || p.$isArraySubdocument || p.$isSchemaMap) this.caster = p, this.caster instanceof s || (this.caster.path = t);else {
          var y = this.caster instanceof s ? null : t;
          this.caster = new p(y, h);
        }
        this.$embeddedSchemaType = this.caster;
      }

      if (this.$isMongooseArray = !0, c.call(this, t, n, "Array"), null != this.defaultValue && (o = this.defaultValue, a = "function" == typeof o), !("defaultValue" in this) || void 0 !== this.defaultValue) {
        var m = function m() {
          var t = [];
          return a ? t = o.call(this) : null != o && (t = t.concat(o)), t;
        };

        m.$runBeforeSetters = !a, this.default(m);
      }
    }

    A.schemaName = "Array", A.options = {
      castNonArrays: !0
    },
    /*!
     * ignore
     */
    A.defaultOptions = {}, A.set = c.set,
    /*!
     * Inherits from SchemaType.
     */
    A.prototype = Object.create(c.prototype), A.prototype.constructor = A, A.prototype.OptionsConstructor = f,
    /*!
     * ignore
     */
    A._checkRequired = c.prototype.checkRequired, A.checkRequired = c.checkRequired, A.prototype.checkRequired = function (t, e) {
      return c._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : A.checkRequired())(t);
    }, A.prototype.enum = function () {
      for (var t = this;;) {
        var e = m(t, "caster.instance");

        if ("Array" !== e) {
          if ("String" !== e && "Number" !== e) throw new Error("`enum` can only be set on an array of strings or numbers , not " + e);
          break;
        }

        t = t.caster;
      }

      var r = arguments;
      return !Array.isArray(arguments) && g.isObject(arguments) && (r = g.object.vals(r)), t.caster.enum.apply(t.caster, r), this;
    }, A.prototype.applyGetters = function (t, e) {
      if (null != e && null != e.$__ && e.$populated(this.path)) return t;
      var r = c.prototype.applyGetters.call(this, t, e);
      if (Array.isArray(r)) for (var n = r.isMongooseArrayProxy ? r.__array : r, i = n.length, o = 0; o < i; ++o) {
        n[o] = this.caster.applyGetters(n[o], e);
      }
      return r;
    }, A.prototype._applySetters = function (t, e, r, n) {
      if (this.casterConstructor.$isMongooseArray && A.options.castNonArrays && !this[S]) {
        for (var i = 0, o = this; null != o && o.$isMongooseArray && !o.$isMongooseDocumentArray;) {
          ++i, o = o.casterConstructor;
        }

        if (null != t && t.length > 0) {
          var s = p(t);
          if (s.min === s.max && s.max < i && s.containsNonArrayItem) for (var a = s.max; a < i; ++a) {
            t = [t];
          }
        }
      }

      return c.prototype._applySetters.call(this, t, e, r, n);
    }, A.prototype.cast = function (t, e, n, i, s) {
      var a, u;

      if (o || (o = r(60).Array), Array.isArray(t)) {
        if (!t.length && e) {
          var h = e.schema.indexedPaths(),
              f = this.path;

          for (a = 0, u = h.length; a < u; ++a) {
            var c = h[a][0][f];
            if ("2dsphere" === c || "2d" === c) return;
          }

          var p = this.path.endsWith(".coordinates") ? this.path.substr(0, this.path.lastIndexOf(".")) : null;
          if (null != p) for (a = 0, u = h.length; a < u; ++a) {
            if ("2dsphere" === h[a][0][p]) return;
          }
        }

        s = s || O;
        var y = t.isMongooseArrayProxy ? t.__array : t;
        if (y = (t = o(y, s.path || this._arrayPath || this.path, e, this)).__array, n && null != e && null != e.$__ && e.$populated(this.path)) return t;
        var m = this.caster,
            b = m.$isMongooseArray;
        if (m && this.casterConstructor !== d) try {
          var g = y.length;

          for (a = 0; a < g; a++) {
            var w = {};
            b && (null != s.arrayPath || null != m._arrayParentPath) && (w.arrayPathIndex = a), y[a] = m.applySetters(y[a], e, n, void 0, w);
          }
        } catch (e) {
          throw new l("[" + e.kind + "]", v.inspect(t), this.path + "." + a, e, this);
        }
        return t;
      }

      if (n || A.options.castNonArrays) return e && n && e.markModified(this.path), this.cast([t], e, n);
      throw new l("Array", v.inspect(t), this.path, null, this);
    },
    /*!
     * ignore
     */
    A.prototype._castForPopulate = function (t, e) {
      if (o || (o = r(60).Array), Array.isArray(t)) {
        var n,
            i = t.__array ? t.__array : t,
            s = i.length,
            a = this.caster;
        if (a && this.casterConstructor !== d) try {
          for (n = 0; n < s; n++) {
            var u = {};
            a.$isMongooseArray && null != a._arrayParentPath && (u.arrayPathIndex = n), i[n] = a.cast(i[n], e, !1, void 0, u);
          }
        } catch (e) {
          throw new l("[" + e.kind + "]", v.inspect(t), this.path + "." + n, e, this);
        }
        return t;
      }

      throw new l("Array", v.inspect(t), this.path, null, this);
    }, A.prototype.$toObject = A.prototype.toObject,
    /*!
     * Ignore
     */
    A.prototype.discriminator = function (t, e) {
      for (var r = this; r.$isMongooseArray && !r.$isMongooseDocumentArray;) {
        if (null == (r = r.casterConstructor) || "function" == typeof r) throw new h("You can only add an embedded discriminator on a document array, " + this.path + " is a plain array");
      }

      return r.discriminator(t, e);
    },
    /*!
     * ignore
     */
    A.prototype.clone = function () {
      var t = Object.assign({}, this.options),
          e = new this.constructor(this.path, this.caster, t, this.schemaOptions);
      return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e;
    }, A.prototype.castForQuery = function (t, e) {
      var r,
          n,
          i = this;

      if (2 === arguments.length) {
        if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with Array.");
        n = r.call(this, e);
      } else {
        n = t;
        var o = this.casterConstructor;
        if (n && o.discriminators && o.schema && o.schema.options && o.schema.options.discriminatorKey) if ("string" == typeof n[o.schema.options.discriminatorKey] && o.discriminators[n[o.schema.options.discriminatorKey]]) o = o.discriminators[n[o.schema.options.discriminatorKey]];else {
          var s = M(o.discriminators, n[o.schema.options.discriminatorKey]);
          s && (o = s);
        }
        var a = this.casterConstructor.prototype,
            u = a && (a.castForQuery || a.cast);
        !u && o.castForQuery && (u = o.castForQuery);
        var h = this.caster;
        Array.isArray(n) ? (this.setters.reverse().forEach(function (t) {
          n = t.call(i, n, i);
        }), n = n.map(function (t) {
          return g.isObject(t) && t.$elemMatch ? t : u ? t = u.call(h, t) : null != t ? t = new o(t) : t;
        })) : u ? n = u.call(h, n) : null != n && (n = new o(n));
      }

      return n;
    };
    var E = A.prototype.$conditionalHandlers = {};

    function x(t) {
      return function (e) {
        if (!Array.isArray(e)) throw new TypeError("conditional " + t + " requires an array");
        var r,
            i = [],
            o = n(e);

        try {
          for (o.s(); !(r = o.n()).done;) {
            var s = r.value;
            i.push(y(this.casterConstructor.schema, s));
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }

        return i;
      };
    }

    E.$all = function (t) {
      return Array.isArray(t) || (t = [t]), t = t.map(function (t) {
        if (g.isObject(t)) {
          var e = {};
          return e[this.path] = t, y(this.casterConstructor.schema, e)[this.path];
        }

        return t;
      }, this), this.castForQuery(t);
    }, E.$options = String, E.$elemMatch = function (t) {
      for (var e = Object.keys(t), r = e.length, n = 0; n < r; ++n) {
        var i = e[n],
            o = t[i];
        b(i) && null != o && (t[i] = this.castForQuery(i, o));
      }

      var s = m(this, "casterConstructor.schema.options.discriminatorKey"),
          a = m(this, "casterConstructor.schema.discriminators", {});
      return null != s && null != t[s] && null != a[t[s]] ? y(a[t[s]], t) : y(this.casterConstructor.schema, t);
    }, E.$geoIntersects = _.cast$geoIntersects, E.$or = x("$or"), E.$and = x("$and"), E.$nor = x("$nor"), E.$near = E.$nearSphere = _.cast$near, E.$within = E.$geoWithin = _.cast$within, E.$size = E.$minDistance = E.$maxDistance = w, E.$exists = a, E.$type = u, E.$eq = E.$gt = E.$gte = E.$lt = E.$lte = E.$ne = E.$regex = A.prototype.castForQuery, E.$nin = c.prototype.$conditionalHandlers.$nin, E.$in = c.prototype.$conditionalHandlers.$in,
    /*!
     * Module exports.
     */
    t.exports = A;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function n(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

        if (!r) {
          if (Array.isArray(t) || (r = function (t, e) {
            if (!t) return;
            if ("string" == typeof t) return i(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === r && t.constructor && (r = t.constructor.name);
            if ("Map" === r || "Set" === r) return Array.from(t);
            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
          }(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);

            var _n8 = 0,
                o = function o() {};

            return {
              s: o,
              n: function n() {
                return _n8 >= t.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: t[_n8++]
                };
              },
              e: function e(t) {
                throw t;
              },
              f: o
            };
          }

          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }

        var s,
            a = !0,
            u = !1;
        return {
          s: function s() {
            r = r.call(t);
          },
          n: function n() {
            var t = r.next();
            return a = t.done, t;
          },
          e: function e(t) {
            u = !0, s = t;
          },
          f: function f() {
            try {
              a || null == r.return || r.return();
            } finally {
              if (u) throw s;
            }
          }
        };
      }

      function i(t, e) {
        (null == e || e > t.length) && (e = t.length);

        for (var r = 0, n = new Array(e); r < e; r++) {
          n[r] = t[r];
        }

        return n;
      }

      var o = r(14),
          s = r(47),
          a = r(20),
          u = r(18),
          h = r(176),
          f = r(6),
          c = r(38).internalToObjectOptions,
          l = r(4),
          d = r(1).arrayAtomicsSymbol,
          p = r(1).arrayParentSymbol,
          y = r(1).arrayPathSymbol,
          m = r(1).arraySchemaSymbol,
          b = r(1).populateModelSymbol,
          v = Symbol("mongoose#Array#sliced"),
          g = Array.prototype.push,
          w = {
        $__getAtomics: function $__getAtomics() {
          var t = [],
              e = Object.keys(this[d] || {}),
              r = e.length,
              n = Object.assign({}, c, {
            _isNested: !0
          });
          if (0 === r) return t[0] = ["$set", this.toObject(n)], t;

          for (; r--;) {
            var i = e[r],
                o = this[d][i];
            l.isMongooseObject(o) ? o = o.toObject(n) : Array.isArray(o) ? o = this.toObject.call(o, n) : null != o && Array.isArray(o.$each) ? o.$each = this.toObject.call(o.$each, n) : null != o && "function" == typeof o.valueOf && (o = o.valueOf()), "$addToSet" === i && (o = {
              $each: o
            }), t.push([i, o]);
          }

          return t;
        },

        /*!
           * ignore
           */
        $atomics: function $atomics() {
          return this[d];
        },

        /*!
           * ignore
           */
        $parent: function $parent() {
          return this[p];
        },

        /*!
           * ignore
           */
        $path: function $path() {
          return this[y];
        },
        $shift: function $shift() {
          if (this._registerAtomic("$pop", -1), this._markModified(), !this._shifted) return this._shifted = !0, [].shift.call(this);
        },
        $pop: function $pop() {
          if (this._registerAtomic("$pop", 1), this._markModified(), !this._popped) return this._popped = !0, [].pop.call(this);
        },

        /*!
           * ignore
           */
        $schema: function $schema() {
          return this[m];
        },
        _cast: function _cast(t) {
          var r,
              n = !1,
              i = this[p];
          return i && (n = i.$populated(this[y], !0)), n && null != t ? (r = n.options[b], (e.isBuffer(t) || t instanceof u || !l.isObject(t)) && (t = {
            _id: t
          }), t.schema && t.schema.discriminatorMapping && void 0 !== t.schema.discriminatorMapping.key || (t = new r(t)), this[m].caster.applySetters(t, i, !0)) : this[m].caster.applySetters(t, i, !1);
        },
        _mapCast: function _mapCast(t, e) {
          return this._cast(t, this.length + e);
        },
        _markModified: function _markModified(t) {
          var e,
              r = this[p];

          if (r) {
            if (e = this[y], arguments.length && (e = e + "." + t), null != e && e.endsWith(".$")) return this;
            r.markModified(e, arguments.length > 0 ? t : r);
          }

          return this;
        },
        _registerAtomic: function _registerAtomic(t, e) {
          if (!this[v]) {
            if ("$set" === t) return this[d] = {
              $set: e
            }, h(this[p], this[y]), this._markModified(), this;
            var r,
                n = this[d];

            if ("$pop" === t && !("$pop" in n)) {
              var i = this;
              this[p].once("save", function () {
                i._popped = i._shifted = null;
              });
            }

            if (n.$set || Object.keys(n).length && !(t in n)) return this[d] = {
              $set: this
            }, this;
            if ("$pullAll" === t || "$addToSet" === t) n[t] || (n[t] = []), n[t] = n[t].concat(e);else if ("$pullDocs" === t) {
              var o = n.$pull || (n.$pull = {});
              e[0] instanceof s ? (r = o.$or || (o.$or = []), Array.prototype.push.apply(r, e.map(function (t) {
                return t.toObject({
                  transform: !1,
                  virtuals: !1
                });
              }))) : (r = o._id || (o._id = {
                $in: []
              })).$in = r.$in.concat(e);
            } else "$push" === t ? (n.$push = n.$push || {
              $each: []
            }, null != e && l.hasUserDefinedProperty(e, "$each") ? n.$push = e : n.$push.$each = n.$push.$each.concat(e)) : n[t] = e;
            return this;
          }
        },
        addToSet: function addToSet() {
          _(this, arguments);

          var t = [].map.call(arguments, this._mapCast, this);
          t = this[m].applySetters(t, this[p]);
          var e = [],
              r = "";
          t[0] instanceof s ? r = "doc" : t[0] instanceof Date && (r = "date");
          var n = t.isMongooseArrayProxy ? t.__array : this,
              i = this.isMongooseArrayProxy ? this.__array : this;
          return n.forEach(function (t) {
            var n,
                o = +t;

            switch (r) {
              case "doc":
                n = this.some(function (e) {
                  return e.equals(t);
                });
                break;

              case "date":
                n = this.some(function (t) {
                  return +t === o;
                });
                break;

              default:
                n = ~this.indexOf(t);
            }

            n || (i.push(t), this._registerAtomic("$addToSet", t), this._markModified(), [].push.call(e, t));
          }, this), e;
        },
        hasAtomics: function hasAtomics() {
          return l.isPOJO(this[d]) ? Object.keys(this[d]).length : 0;
        },
        includes: function includes(t, e) {
          return -1 !== this.indexOf(t, e);
        },
        indexOf: function indexOf(t, e) {
          t instanceof u && (t = t.toString()), e = null == e ? 0 : e;

          for (var r = this.length, n = e; n < r; ++n) {
            if (t == this[n]) return n;
          }

          return -1;
        },
        inspect: function inspect() {
          return JSON.stringify(this);
        },
        nonAtomicPush: function nonAtomicPush() {
          var t = [].map.call(arguments, this._mapCast, this),
              e = [].push.apply(this, t);
          return this._registerAtomic("$set", this), this._markModified(), e;
        },
        pop: function pop() {
          var t = [].pop.call(this);
          return this._registerAtomic("$set", this), this._markModified(), t;
        },
        pull: function pull() {
          for (var t, e = [].map.call(arguments, this._cast, this), r = this[p].get(this[y]), n = r.length; n--;) {
            if ((t = r[n]) instanceof o) {
              var i = e.some(function (e) {
                return t.equals(e);
              });
              i && [].splice.call(r, n, 1);
            } else ~r.indexOf.call(e, t) && [].splice.call(r, n, 1);
          }

          return e[0] instanceof s ? this._registerAtomic("$pullDocs", e.map(function (t) {
            return t.$__getValue("_id") || t;
          })) : this._registerAtomic("$pullAll", e), this._markModified(), h(this[p], this[y]) > 0 && this._registerAtomic("$set", this), this;
        },
        push: function push() {
          var t = arguments,
              e = t,
              r = null != t[0] && l.hasUserDefinedProperty(t[0], "$each"),
              n = this.isMongooseArrayProxy ? this.__array : this;
          if (r && (e = t[0], t = t[0].$each), null == this[m]) return g.apply(this, t);

          _(this, t);

          var i,
              o = this[p];
          t = [].map.call(t, this._mapCast, this), t = this[m].applySetters(t, o, void 0, void 0, {
            skipDocumentArrayCast: !0
          });
          var s = this[d];

          if (r) {
            if (e.$each = t, f(s, "$push.$each.length", 0) > 0 && s.$push.$position != e.$position) throw new a("Cannot call `Array#push()` multiple times with different `$position`");
            null != e.$position ? ([].splice.apply(n, [e.$position, 0].concat(t)), i = this.length) : i = [].push.apply(n, t);
          } else {
            if (f(s, "$push.$each.length", 0) > 0 && null != s.$push.$position) throw new a("Cannot call `Array#push()` multiple times with different `$position`");
            e = t, i = [].push.apply(n, t);
          }

          return this._registerAtomic("$push", e), this._markModified(), i;
        },
        remove: function remove() {
          return this.pull.apply(this, arguments);
        },
        set: function set(t, e, r) {
          var n = this.__array;
          if (r) return n[t] = e, this;

          var i = w._cast.call(this, e, t);

          return n[t] = i, w._markModified.call(this, t), this;
        },
        shift: function shift() {
          var t = this.isMongooseArrayProxy ? this.__array : this,
              e = [].shift.call(t);
          return this._registerAtomic("$set", this), this._markModified(), e;
        },
        sort: function sort() {
          var t = this.isMongooseArrayProxy ? this.__array : this,
              e = [].sort.apply(t, arguments);
          return this._registerAtomic("$set", this), e;
        },
        splice: function splice() {
          var t,
              e = this.isMongooseArrayProxy ? this.__array : this;

          if (_(this, Array.prototype.slice.call(arguments, 2)), arguments.length) {
            var r;
            if (null == this[m]) r = arguments;else {
              r = [];

              for (var n = 0; n < arguments.length; ++n) {
                r[n] = n < 2 ? arguments[n] : this._cast(arguments[n], arguments[0] + (n - 2));
              }
            }
            t = [].splice.apply(e, r), this._registerAtomic("$set", this);
          }

          return t;
        },

        /*!
           * ignore
           */
        toBSON: function toBSON() {
          return this.toObject(c);
        },
        toObject: function toObject(t) {
          var e = this.isMongooseArrayProxy ? this.__array : this;
          return t && t.depopulate ? ((t = l.clone(t))._isNested = !0, [].concat(e).map(function (e) {
            return e instanceof o ? e.toObject(t) : e;
          })) : [].concat(e);
        },
        $toObject: function $toObject() {
          return this.constructor.prototype.toObject.apply(this, arguments);
        },
        unshift: function unshift() {
          var t;
          _(this, arguments), null == this[m] ? t = arguments : (t = [].map.call(arguments, this._cast, this), t = this[m].applySetters(t, this[p]));
          var e = this.isMongooseArrayProxy ? this.__array : this;
          return [].unshift.apply(e, t), this._registerAtomic("$set", this), this._markModified(), this.length;
        }
      };
      /*!
       * ignore
       */

      function _(t, e) {
        var r,
            i,
            s,
            a = null == t ? null : f(t[m], "caster.options.ref", null);
        0 === t.length && e.length > 0 &&
        /*!
         * ignore
         */
        function (t, e) {
          if (!e) return !1;
          var r,
              i = n(t);

          try {
            for (i.s(); !(r = i.n()).done;) {
              var s = r.value;
              if (null == s) return !1;
              var a = s.constructor;
              if (!(s instanceof o) || a.modelName !== e && a.baseModelName !== e) return !1;
            }
          } catch (t) {
            i.e(t);
          } finally {
            i.f();
          }

          return !0;
        }(e, a) && t[p].$populated(t[y], [], (r = {}, i = b, s = e[0].constructor, i in r ? Object.defineProperty(r, i, {
          value: s,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : r[i] = s, r));
      }

      for (var M = function M() {
        var t = O[S];
        if (null == Array.prototype[t]) return "continue";

        w[t] = function () {
          var e = this.isMongooseArrayProxy ? this.__array : this,
              r = [].concat(e);
          return r[t].apply(r, arguments);
        };
      }, S = 0, O = ["filter", "flat", "flatMap", "map", "slice"]; S < O.length; S++) {
        M();
      }

      t.exports = w;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    var n = r(14),
        i = r(45),
        o = r(38).internalToObjectOptions,
        s = r(54),
        a = r(9),
        u = r(4);

    function h(t, e, r, i, o) {
      if (null != r) {
        var s = {
          isNew: r.isNew
        };
        "defaults" in r.$__ && (s.defaults = r.$__.defaults), o = Object.assign({}, s, o);
      }

      null != o && null != o.path && (this.$basePath = o.path), n.call(this, t, e, i, o), delete this.$__.priorDoc;
    }

    t.exports = h, h.prototype = Object.create(n.prototype), Object.defineProperty(h.prototype, "$isSubdocument", {
      configurable: !1,
      writable: !1,
      value: !0
    }), Object.defineProperty(h.prototype, "$isSingleNested", {
      configurable: !1,
      writable: !1,
      value: !0
    }),
    /*!
     * ignore
     */
    h.prototype.toBSON = function () {
      return this.toObject(o);
    }, h.prototype.save = function (t, e) {
      var r = this;
      return "function" == typeof t && (e = t, t = {}), (t = t || {}).suppressWarning || u.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), s(e, function (t) {
        r.$__save(t);
      });
    },
    /*!
     * Given a path relative to this document, return the path relative
     * to the top-level document.
     */
    h.prototype.$__fullPath = function (t) {
      return this.$__.fullPath || this.ownerDocument(), t ? this.$__.fullPath + "." + t : this.$__.fullPath;
    },
    /*!
     * Given a path relative to this document, return the path relative
     * to the top-level document.
     */
    h.prototype.$__pathRelativeToParent = function (t) {
      return null == t ? this.$basePath : [this.$basePath, t].join(".");
    }, h.prototype.$__save = function (t) {
      var e = this;
      return i(function () {
        return t(null, e);
      });
    },
    /*!
     * ignore
     */
    h.prototype.$isValid = function (t) {
      var e = this.$parent(),
          r = this.$__pathRelativeToParent(t);
      return null != e && null != r ? e.$isValid(r) : n.prototype.$isValid.call(this, t);
    },
    /*!
     * ignore
     */
    h.prototype.markModified = function (t) {
      n.prototype.markModified.call(this, t);
      var e = this.$parent(),
          r = this.$__pathRelativeToParent(t);

      if (null != e && null != r) {
        var i = this.$__pathRelativeToParent().replace(/\.$/, "");
        e.isDirectModified(i) || this.isNew || this.$__parent.markModified(r, this);
      }
    },
    /*!
     * ignore
     */
    h.prototype.isModified = function (t, e) {
      var r = this,
          i = this.$parent();
      return null != i ? (Array.isArray(t) || "string" == typeof t ? t = (t = Array.isArray(t) ? t : t.split(" ")).map(function (t) {
        return r.$__pathRelativeToParent(t);
      }).filter(function (t) {
        return null != t;
      }) : t || (t = this.$__pathRelativeToParent()), i.$isModified(t, e)) : n.prototype.isModified.call(this, t, e);
    }, h.prototype.$markValid = function (t) {
      n.prototype.$markValid.call(this, t);
      var e = this.$parent(),
          r = this.$__pathRelativeToParent(t);
      null != e && null != r && e.$markValid(r);
    },
    /*!
     * ignore
     */
    h.prototype.invalidate = function (t, e, r) {
      n.prototype.invalidate.call(this, t, e, r);
      var i = this.$parent(),
          o = this.$__pathRelativeToParent(t);
      if (null != i && null != o) i.invalidate(o, e, r);else if ("cast" === e.kind || "CastError" === e.name || null == o) throw e;
      return this.ownerDocument().$__.validationError;
    },
    /*!
     * ignore
     */
    h.prototype.$ignore = function (t) {
      n.prototype.$ignore.call(this, t);
      var e = this.$parent(),
          r = this.$__pathRelativeToParent(t);
      null != e && null != r && e.$ignore(r);
    }, h.prototype.ownerDocument = function () {
      if (this.$__.ownerDocument) return this.$__.ownerDocument;

      for (var t = this, e = [], r = new Set([t]); "function" == typeof t.$__pathRelativeToParent;) {
        e.unshift(t.$__pathRelativeToParent(void 0, !0));
        var n = t.$parent();
        if (null == n) break;
        if (t = n, r.has(t)) throw new Error("Infinite subdocument loop: subdoc with _id " + t._id + " is a parent of itself");
        r.add(t);
      }

      return this.$__.fullPath = e.join("."), this.$__.ownerDocument = t, this.$__.ownerDocument;
    }, h.prototype.parent = function () {
      return this.$__parent;
    }, h.prototype.$parent = h.prototype.parent,
    /*!
     * no-op for hooks
     */
    h.prototype.$__remove = function (t) {
      if (null != t) return t(null, this);
    }, h.prototype.$__removeFromParent = function () {
      this.$__parent.set(this.$basePath, null);
    }, h.prototype.remove = function (t, e) {
      return "function" == typeof t && (e = t, t = null),
      /*!
       * Registers remove event listeners for triggering
       * on subdocuments.
       *
       * @param {Subdocument} sub
       * @api private
       */
      function (t) {
        var e = t.ownerDocument();

        function r() {
          e.$removeListener("save", r), e.$removeListener("remove", r), t.emit("remove", t), t.constructor.emit("remove", t), e = t = null;
        }

        e.$on("save", r), e.$on("remove", r);
      }(this), t && t.noop || this.$__removeFromParent(), this.$__remove(e);
    },
    /*!
     * ignore
     */
    h.prototype.populate = function () {
      throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.nested.populate("path")`, use `doc.populate("nested.path")`');
    }, h.prototype.inspect = function () {
      return this.toObject({
        transform: !1,
        virtuals: !1,
        flattenDecimals: !1
      });
    }, a.inspect.custom && (
    /*!
      * Avoid Node deprecation warning DEP0079
      */
    h.prototype[a.inspect.custom] = h.prototype.inspect);
  }, function (t, e, r) {
    "use strict";

    var n,
        i = r(1).documentSchemaSymbol,
        o = r(6),
        s = r(38).internalToObjectOptions,
        a = r(4),
        u = r(1).getSymbol,
        h = r(1).scopeSymbol;
    /*!
     * Compiles schemas.
     */

    function f(t, e, i, o) {
      n = n || r(14);

      for (var s = 0, u = Object.keys(t); s < u.length; s++) {
        var h = u[s],
            f = t[h];
        c({
          prop: h,
          subprops: a.isPOJO(f) && Object.keys(f).length && (!f[o.typeKey] || "type" === o.typeKey && f.type.type) ? f : null,
          prototype: e,
          prefix: i,
          options: o
        });
      }
    }
    /*!
     * Defines the accessor named prop on the incoming prototype.
     */


    function c(t) {
      var e = t.prop,
          c = t.subprops,
          l = t.prototype,
          d = t.prefix,
          p = t.options;
      n = n || r(14);
      var y = (d ? d + "." : "") + e;
      d = d || "", c ? Object.defineProperty(l, e, {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          var t,
              e,
              r = this;

          if (this.$__.getters || (this.$__.getters = {}), !this.$__.getters[y]) {
            var s = Object.create(n.prototype, (t = this, e = {}, Object.getOwnPropertyNames(t).forEach(function (r) {
              -1 === ["isNew", "$__", "$errors", "errors", "_doc", "$locals", "$op", "__parentArray", "__index", "$isDocumentArrayElement"].indexOf(r) || (e[r] = Object.getOwnPropertyDescriptor(t, r), e[r].enumerable = !1);
            }), e));
            d || (s.$__[h] = this), s.$__.nestedPath = y, Object.defineProperty(s, "schema", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: l.schema
            }), Object.defineProperty(s, "$__schema", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: l.schema
            }), Object.defineProperty(s, i, {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: l.schema
            }), Object.defineProperty(s, "toObject", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: function value() {
                return a.clone(r.get(y, null, {
                  virtuals: o(this, "schema.options.toObject.virtuals", null)
                }));
              }
            }), Object.defineProperty(s, "$__get", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: function value() {
                return r.get(y, null, {
                  virtuals: o(this, "schema.options.toObject.virtuals", null)
                });
              }
            }), Object.defineProperty(s, "toJSON", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: function value() {
                return r.get(y, null, {
                  virtuals: o(r, "schema.options.toJSON.virtuals", null)
                });
              }
            }), Object.defineProperty(s, "$__isNested", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: !0
            });
            var u = Object.freeze({
              minimize: !0,
              virtuals: !1,
              getters: !1,
              transform: !1
            });
            Object.defineProperty(s, "$isEmpty", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: function value() {
                return 0 === Object.keys(this.get(y, null, u) || {}).length;
              }
            }), Object.defineProperty(s, "$__parent", {
              enumerable: !1,
              configurable: !0,
              writable: !1,
              value: this
            }), f(c, s, y, p), this.$__.getters[y] = s;
          }

          return this.$__.getters[y];
        },
        set: function set(t) {
          null != t && t.$__isNested ? t = t.$__get() : t instanceof n && !t.$__isNested && (t = t.$toObject(s)), (this.$__[h] || this).$set(y, t);
        }
      }) : Object.defineProperty(l, e, {
        enumerable: !0,
        configurable: !0,
        get: function get() {
          return this[u].call(this.$__[h] || this, y);
        },
        set: function set(t) {
          this.$set.call(this.$__[h] || this, y, t);
        }
      });
    }
    /*!
     * exports
     */


    e.compile = f, e.defineKey = c;
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    t.exports = function (t) {
      return null == t || "object" !== n(t) || !("$meta" in t) && !("$slice" in t);
    };
  }, function (t, e) {
    var r = {}.toString;

    t.exports = Array.isArray || function (t) {
      return "[object Array]" == r.call(t);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(191).Buffer,
        i = r(192).Transform;

    function o(t) {
      i.call(this), this._block = n.allocUnsafe(t), this._blockSize = t, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = !1;
    }

    r(0)(o, i), o.prototype._transform = function (t, e, r) {
      var n = null;

      try {
        this.update(t, e);
      } catch (t) {
        n = t;
      }

      r(n);
    }, o.prototype._flush = function (t) {
      var e = null;

      try {
        this.push(this.digest());
      } catch (t) {
        e = t;
      }

      t(e);
    }, o.prototype.update = function (t, e) {
      if (function (t, e) {
        if (!n.isBuffer(t) && "string" != typeof t) throw new TypeError(e + " must be a string or a buffer");
      }(t, "Data"), this._finalized) throw new Error("Digest already called");
      n.isBuffer(t) || (t = n.from(t, e));

      for (var r = this._block, i = 0; this._blockOffset + t.length - i >= this._blockSize;) {
        for (var o = this._blockOffset; o < this._blockSize;) {
          r[o++] = t[i++];
        }

        this._update(), this._blockOffset = 0;
      }

      for (; i < t.length;) {
        r[this._blockOffset++] = t[i++];
      }

      for (var s = 0, a = 8 * t.length; a > 0; ++s) {
        this._length[s] += a, (a = this._length[s] / 4294967296 | 0) > 0 && (this._length[s] -= 4294967296 * a);
      }

      return this;
    }, o.prototype._update = function () {
      throw new Error("_update is not implemented");
    }, o.prototype.digest = function (t) {
      if (this._finalized) throw new Error("Digest already called");
      this._finalized = !0;

      var e = this._digest();

      void 0 !== t && (e = e.toString(t)), this._block.fill(0), this._blockOffset = 0;

      for (var r = 0; r < 4; ++r) {
        this._length[r] = 0;
      }

      return e;
    }, o.prototype._digest = function () {
      throw new Error("_digest is not implemented");
    }, t.exports = o;
  }, function (t, e, r) {
    "use strict";

    (function (e, n) {
      var i;
      t.exports = A, A.ReadableState = O;
      r(11).EventEmitter;

      var o = function o(t, e) {
        return t.listeners(e).length;
      },
          s = r(100),
          a = r(3).Buffer,
          u = e.Uint8Array || function () {};

      var h,
          f = r(193);
      h = f && f.debuglog ? f.debuglog("stream") : function () {};
      var c,
          l,
          d,
          p = r(194),
          y = r(101),
          m = r(102).getHighWaterMark,
          b = r(29).codes,
          v = b.ERR_INVALID_ARG_TYPE,
          g = b.ERR_STREAM_PUSH_AFTER_EOF,
          w = b.ERR_METHOD_NOT_IMPLEMENTED,
          _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
      r(0)(A, s);
      var M = y.errorOrDestroy,
          S = ["error", "close", "destroy", "pause", "resume"];

      function O(t, e, n) {
        i = i || r(30), t = t || {}, "boolean" != typeof n && (n = e instanceof i), this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode), this.highWaterMark = m(this, t, "readableHighWaterMark", n), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (c || (c = r(25).StringDecoder), this.decoder = new c(t.encoding), this.encoding = t.encoding);
      }

      function A(t) {
        if (i = i || r(30), !(this instanceof A)) return new A(t);
        var e = this instanceof i;
        this._readableState = new O(t, this, e), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), s.call(this);
      }

      function E(t, e, r, n, i) {
        h("readableAddChunk", e);
        var o,
            s = t._readableState;
        if (null === e) s.reading = !1, function (t, e) {
          if (h("onEofChunk"), e.ended) return;

          if (e.decoder) {
            var r = e.decoder.end();
            r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
          }

          e.ended = !0, e.sync ? j(t) : (e.needReadable = !1, e.emittedReadable || (e.emittedReadable = !0, $(t)));
        }(t, s);else if (i || (o = function (t, e) {
          var r;
          n = e, a.isBuffer(n) || n instanceof u || "string" == typeof e || void 0 === e || t.objectMode || (r = new v("chunk", ["string", "Buffer", "Uint8Array"], e));
          var n;
          return r;
        }(s, e)), o) M(t, o);else if (s.objectMode || e && e.length > 0) {
          if ("string" == typeof e || s.objectMode || Object.getPrototypeOf(e) === a.prototype || (e = function (t) {
            return a.from(t);
          }(e)), n) s.endEmitted ? M(t, new _()) : x(t, s, e, !0);else if (s.ended) M(t, new g());else {
            if (s.destroyed) return !1;
            s.reading = !1, s.decoder && !r ? (e = s.decoder.write(e), s.objectMode || 0 !== e.length ? x(t, s, e, !1) : P(t, s)) : x(t, s, e, !1);
          }
        } else n || (s.reading = !1, P(t, s));
        return !s.ended && (s.length < s.highWaterMark || 0 === s.length);
      }

      function x(t, e, r, n) {
        e.flowing && 0 === e.length && !e.sync ? (e.awaitDrain = 0, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && j(t)), P(t, e);
      }

      Object.defineProperty(A.prototype, "destroyed", {
        enumerable: !1,
        get: function get() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        },
        set: function set(t) {
          this._readableState && (this._readableState.destroyed = t);
        }
      }), A.prototype.destroy = y.destroy, A.prototype._undestroy = y.undestroy, A.prototype._destroy = function (t, e) {
        e(t);
      }, A.prototype.push = function (t, e) {
        var r,
            n = this._readableState;
        return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = a.from(t, e), e = ""), r = !0), E(this, t, e, !1, r);
      }, A.prototype.unshift = function (t) {
        return E(this, t, null, !0, !1);
      }, A.prototype.isPaused = function () {
        return !1 === this._readableState.flowing;
      }, A.prototype.setEncoding = function (t) {
        c || (c = r(25).StringDecoder);
        var e = new c(t);
        this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;

        for (var n = this._readableState.buffer.head, i = ""; null !== n;) {
          i += e.write(n.data), n = n.next;
        }

        return this._readableState.buffer.clear(), "" !== i && this._readableState.buffer.push(i), this._readableState.length = i.length, this;
      };

      function k(t, e) {
        return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function (t) {
          return t >= 1073741824 ? t = 1073741824 : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
        }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));
      }

      function j(t) {
        var e = t._readableState;
        h("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = !1, e.emittedReadable || (h("emitReadable", e.flowing), e.emittedReadable = !0, n.nextTick($, t));
      }

      function $(t) {
        var e = t._readableState;
        h("emitReadable_", e.destroyed, e.length, e.ended), e.destroyed || !e.length && !e.ended || (t.emit("readable"), e.emittedReadable = !1), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, N(t);
      }

      function P(t, e) {
        e.readingMore || (e.readingMore = !0, n.nextTick(R, t, e));
      }

      function R(t, e) {
        for (; !e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && 0 === e.length);) {
          var r = e.length;
          if (h("maybeReadMore read 0"), t.read(0), r === e.length) break;
        }

        e.readingMore = !1;
      }

      function B(t) {
        var e = t._readableState;
        e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && !e.paused ? e.flowing = !0 : t.listenerCount("data") > 0 && t.resume();
      }

      function T(t) {
        h("readable nexttick read 0"), t.read(0);
      }

      function I(t, e) {
        h("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = !1, t.emit("resume"), N(t), e.flowing && !e.reading && t.read(0);
      }

      function N(t) {
        var e = t._readableState;

        for (h("flow", e.flowing); e.flowing && null !== t.read();) {
          ;
        }
      }

      function D(t, e) {
        return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.first() : e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r);
        var r;
      }

      function C(t) {
        var e = t._readableState;
        h("endReadable", e.endEmitted), e.endEmitted || (e.ended = !0, n.nextTick(L, e, t));
      }

      function L(t, e) {
        if (h("endReadableNT", t.endEmitted, t.length), !t.endEmitted && 0 === t.length && (t.endEmitted = !0, e.readable = !1, e.emit("end"), t.autoDestroy)) {
          var r = e._writableState;
          (!r || r.autoDestroy && r.finished) && e.destroy();
        }
      }

      function q(t, e) {
        for (var r = 0, n = t.length; r < n; r++) {
          if (t[r] === e) return r;
        }

        return -1;
      }

      A.prototype.read = function (t) {
        h("read", t), t = parseInt(t, 10);
        var e = this._readableState,
            r = t;
        if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && ((0 !== e.highWaterMark ? e.length >= e.highWaterMark : e.length > 0) || e.ended)) return h("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? C(this) : j(this), null;
        if (0 === (t = k(t, e)) && e.ended) return 0 === e.length && C(this), null;
        var n,
            i = e.needReadable;
        return h("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && h("length less than watermark", i = !0), e.ended || e.reading ? h("reading or ended", i = !1) : i && (h("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = k(r, e))), null === (n = t > 0 ? D(t, e) : null) ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.awaitDrain = 0), 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && C(this)), null !== n && this.emit("data", n), n;
      }, A.prototype._read = function (t) {
        M(this, new w("_read()"));
      }, A.prototype.pipe = function (t, e) {
        var r = this,
            i = this._readableState;

        switch (i.pipesCount) {
          case 0:
            i.pipes = t;
            break;

          case 1:
            i.pipes = [i.pipes, t];
            break;

          default:
            i.pipes.push(t);
        }

        i.pipesCount += 1, h("pipe count=%d opts=%j", i.pipesCount, e);
        var s = (!e || !1 !== e.end) && t !== n.stdout && t !== n.stderr ? u : m;

        function a(e, n) {
          h("onunpipe"), e === r && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, h("cleanup"), t.removeListener("close", p), t.removeListener("finish", y), t.removeListener("drain", f), t.removeListener("error", d), t.removeListener("unpipe", a), r.removeListener("end", u), r.removeListener("end", m), r.removeListener("data", l), c = !0, !i.awaitDrain || t._writableState && !t._writableState.needDrain || f());
        }

        function u() {
          h("onend"), t.end();
        }

        i.endEmitted ? n.nextTick(s) : r.once("end", s), t.on("unpipe", a);

        var f = function (t) {
          return function () {
            var e = t._readableState;
            h("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && o(t, "data") && (e.flowing = !0, N(t));
          };
        }(r);

        t.on("drain", f);
        var c = !1;

        function l(e) {
          h("ondata");
          var n = t.write(e);
          h("dest.write", n), !1 === n && ((1 === i.pipesCount && i.pipes === t || i.pipesCount > 1 && -1 !== q(i.pipes, t)) && !c && (h("false write response, pause", i.awaitDrain), i.awaitDrain++), r.pause());
        }

        function d(e) {
          h("onerror", e), m(), t.removeListener("error", d), 0 === o(t, "error") && M(t, e);
        }

        function p() {
          t.removeListener("finish", y), m();
        }

        function y() {
          h("onfinish"), t.removeListener("close", p), m();
        }

        function m() {
          h("unpipe"), r.unpipe(t);
        }

        return r.on("data", l), function (t, e, r) {
          if ("function" == typeof t.prependListener) return t.prependListener(e, r);
          t._events && t._events[e] ? Array.isArray(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]] : t.on(e, r);
        }(t, "error", d), t.once("close", p), t.once("finish", y), t.emit("pipe", r), i.flowing || (h("pipe resume"), r.resume()), t;
      }, A.prototype.unpipe = function (t) {
        var e = this._readableState,
            r = {
          hasUnpiped: !1
        };
        if (0 === e.pipesCount) return this;
        if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;

        if (!t) {
          var n = e.pipes,
              i = e.pipesCount;
          e.pipes = null, e.pipesCount = 0, e.flowing = !1;

          for (var o = 0; o < i; o++) {
            n[o].emit("unpipe", this, {
              hasUnpiped: !1
            });
          }

          return this;
        }

        var s = q(e.pipes, t);
        return -1 === s || (e.pipes.splice(s, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
      }, A.prototype.on = function (t, e) {
        var r = s.prototype.on.call(this, t, e),
            i = this._readableState;
        return "data" === t ? (i.readableListening = this.listenerCount("readable") > 0, !1 !== i.flowing && this.resume()) : "readable" === t && (i.endEmitted || i.readableListening || (i.readableListening = i.needReadable = !0, i.flowing = !1, i.emittedReadable = !1, h("on readable", i.length, i.reading), i.length ? j(this) : i.reading || n.nextTick(T, this))), r;
      }, A.prototype.addListener = A.prototype.on, A.prototype.removeListener = function (t, e) {
        var r = s.prototype.removeListener.call(this, t, e);
        return "readable" === t && n.nextTick(B, this), r;
      }, A.prototype.removeAllListeners = function (t) {
        var e = s.prototype.removeAllListeners.apply(this, arguments);
        return "readable" !== t && void 0 !== t || n.nextTick(B, this), e;
      }, A.prototype.resume = function () {
        var t = this._readableState;
        return t.flowing || (h("resume"), t.flowing = !t.readableListening, function (t, e) {
          e.resumeScheduled || (e.resumeScheduled = !0, n.nextTick(I, t, e));
        }(this, t)), t.paused = !1, this;
      }, A.prototype.pause = function () {
        return h("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (h("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
      }, A.prototype.wrap = function (t) {
        var e = this,
            r = this._readableState,
            n = !1;

        for (var i in t.on("end", function () {
          if (h("wrapped end"), r.decoder && !r.ended) {
            var t = r.decoder.end();
            t && t.length && e.push(t);
          }

          e.push(null);
        }), t.on("data", function (i) {
          (h("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (e.push(i) || (n = !0, t.pause()));
        }), t) {
          void 0 === this[i] && "function" == typeof t[i] && (this[i] = function (e) {
            return function () {
              return t[e].apply(t, arguments);
            };
          }(i));
        }

        for (var o = 0; o < S.length; o++) {
          t.on(S[o], this.emit.bind(this, S[o]));
        }

        return this._read = function (e) {
          h("wrapped _read", e), n && (n = !1, t.resume());
        }, this;
      }, "function" == typeof Symbol && (A.prototype[Symbol.asyncIterator] = function () {
        return void 0 === l && (l = r(197)), l(this);
      }), Object.defineProperty(A.prototype, "readableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._readableState.highWaterMark;
        }
      }), Object.defineProperty(A.prototype, "readableBuffer", {
        enumerable: !1,
        get: function get() {
          return this._readableState && this._readableState.buffer;
        }
      }), Object.defineProperty(A.prototype, "readableFlowing", {
        enumerable: !1,
        get: function get() {
          return this._readableState.flowing;
        },
        set: function set(t) {
          this._readableState && (this._readableState.flowing = t);
        }
      }), A._fromList = D, Object.defineProperty(A.prototype, "readableLength", {
        enumerable: !1,
        get: function get() {
          return this._readableState.length;
        }
      }), "function" == typeof Symbol && (A.from = function (t, e) {
        return void 0 === d && (d = r(198)), d(A, t, e);
      });
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    t.exports = r(11).EventEmitter;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function r(t, e) {
        i(t, e), n(t);
      }

      function n(t) {
        t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
      }

      function i(t, e) {
        t.emit("error", e);
      }

      t.exports = {
        destroy: function destroy(t, o) {
          var s = this,
              a = this._readableState && this._readableState.destroyed,
              u = this._writableState && this._writableState.destroyed;
          return a || u ? (o ? o(t) : t && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, e.nextTick(i, this, t)) : e.nextTick(i, this, t)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function (t) {
            !o && t ? s._writableState ? s._writableState.errorEmitted ? e.nextTick(n, s) : (s._writableState.errorEmitted = !0, e.nextTick(r, s, t)) : e.nextTick(r, s, t) : o ? (e.nextTick(n, s), o(t)) : e.nextTick(n, s);
          }), this);
        },
        undestroy: function undestroy() {
          this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
        },
        errorOrDestroy: function errorOrDestroy(t, e) {
          var r = t._readableState,
              n = t._writableState;
          r && r.autoDestroy || n && n.autoDestroy ? t.destroy(e) : t.emit("error", e);
        }
      };
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";

    var n = r(29).codes.ERR_INVALID_OPT_VALUE;
    t.exports = {
      getHighWaterMark: function getHighWaterMark(t, e, r, i) {
        var o = function (t, e, r) {
          return null != t.highWaterMark ? t.highWaterMark : e ? t[r] : null;
        }(e, i, r);

        if (null != o) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0) throw new n(i ? r : "highWaterMark", o);
          return Math.floor(o);
        }

        return t.objectMode ? 16 : 16384;
      }
    };
  }, function (t, e, r) {
    "use strict";

    (function (e, n) {
      function i(t) {
        var e = this;
        this.next = null, this.entry = null, this.finish = function () {
          !function (t, e, r) {
            var n = t.entry;
            t.entry = null;

            for (; n;) {
              var i = n.callback;
              e.pendingcb--, i(r), n = n.next;
            }

            e.corkedRequestsFree.next = t;
          }(e, t);
        };
      }

      var o;
      t.exports = A, A.WritableState = O;

      var s = {
        deprecate: r(63)
      },
          a = r(100),
          u = r(3).Buffer,
          h = e.Uint8Array || function () {};

      var f,
          c = r(101),
          l = r(102).getHighWaterMark,
          d = r(29).codes,
          p = d.ERR_INVALID_ARG_TYPE,
          y = d.ERR_METHOD_NOT_IMPLEMENTED,
          m = d.ERR_MULTIPLE_CALLBACK,
          b = d.ERR_STREAM_CANNOT_PIPE,
          v = d.ERR_STREAM_DESTROYED,
          g = d.ERR_STREAM_NULL_VALUES,
          w = d.ERR_STREAM_WRITE_AFTER_END,
          _ = d.ERR_UNKNOWN_ENCODING,
          M = c.errorOrDestroy;

      function S() {}

      function O(t, e, s) {
        o = o || r(30), t = t || {}, "boolean" != typeof s && (s = e instanceof o), this.objectMode = !!t.objectMode, s && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = l(this, t, "writableHighWaterMark", s), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
        var a = !1 === t.decodeStrings;
        this.decodeStrings = !a, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (t) {
          !function (t, e) {
            var r = t._writableState,
                i = r.sync,
                o = r.writecb;
            if ("function" != typeof o) throw new m();
            if (function (t) {
              t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
            }(r), e) !function (t, e, r, i, o) {
              --e.pendingcb, r ? (n.nextTick(o, i), n.nextTick(P, t, e), t._writableState.errorEmitted = !0, M(t, i)) : (o(i), t._writableState.errorEmitted = !0, M(t, i), P(t, e));
            }(t, r, i, e, o);else {
              var s = j(r) || t.destroyed;
              s || r.corked || r.bufferProcessing || !r.bufferedRequest || k(t, r), i ? n.nextTick(x, t, r, s, o) : x(t, r, s, o);
            }
          }(e, t);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
      }

      function A(t) {
        var e = this instanceof (o = o || r(30));
        if (!e && !f.call(A, this)) return new A(t);
        this._writableState = new O(t, this, e), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), a.call(this);
      }

      function E(t, e, r, n, i, o, s) {
        e.writelen = n, e.writecb = s, e.writing = !0, e.sync = !0, e.destroyed ? e.onwrite(new v("write")) : r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
      }

      function x(t, e, r, n) {
        r || function (t, e) {
          0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
        }(t, e), e.pendingcb--, n(), P(t, e);
      }

      function k(t, e) {
        e.bufferProcessing = !0;
        var r = e.bufferedRequest;

        if (t._writev && r && r.next) {
          var n = e.bufferedRequestCount,
              o = new Array(n),
              s = e.corkedRequestsFree;
          s.entry = r;

          for (var a = 0, u = !0; r;) {
            o[a] = r, r.isBuf || (u = !1), r = r.next, a += 1;
          }

          o.allBuffers = u, E(t, e, !0, e.length, o, "", s.finish), e.pendingcb++, e.lastBufferedRequest = null, s.next ? (e.corkedRequestsFree = s.next, s.next = null) : e.corkedRequestsFree = new i(e), e.bufferedRequestCount = 0;
        } else {
          for (; r;) {
            var h = r.chunk,
                f = r.encoding,
                c = r.callback;
            if (E(t, e, !1, e.objectMode ? 1 : h.length, h, f, c), r = r.next, e.bufferedRequestCount--, e.writing) break;
          }

          null === r && (e.lastBufferedRequest = null);
        }

        e.bufferedRequest = r, e.bufferProcessing = !1;
      }

      function j(t) {
        return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
      }

      function $(t, e) {
        t._final(function (r) {
          e.pendingcb--, r && M(t, r), e.prefinished = !0, t.emit("prefinish"), P(t, e);
        });
      }

      function P(t, e) {
        var r = j(e);

        if (r && (function (t, e) {
          e.prefinished || e.finalCalled || ("function" != typeof t._final || e.destroyed ? (e.prefinished = !0, t.emit("prefinish")) : (e.pendingcb++, e.finalCalled = !0, n.nextTick($, t, e)));
        }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"), e.autoDestroy))) {
          var i = t._readableState;
          (!i || i.autoDestroy && i.endEmitted) && t.destroy();
        }

        return r;
      }

      r(0)(A, a), O.prototype.getBuffer = function () {
        for (var t = this.bufferedRequest, e = []; t;) {
          e.push(t), t = t.next;
        }

        return e;
      }, function () {
        try {
          Object.defineProperty(O.prototype, "buffer", {
            get: s.deprecate(function () {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch (t) {}
      }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (f = Function.prototype[Symbol.hasInstance], Object.defineProperty(A, Symbol.hasInstance, {
        value: function value(t) {
          return !!f.call(this, t) || this === A && t && t._writableState instanceof O;
        }
      })) : f = function f(t) {
        return t instanceof this;
      }, A.prototype.pipe = function () {
        M(this, new b());
      }, A.prototype.write = function (t, e, r) {
        var i,
            o = this._writableState,
            s = !1,
            a = !o.objectMode && (i = t, u.isBuffer(i) || i instanceof h);
        return a && !u.isBuffer(t) && (t = function (t) {
          return u.from(t);
        }(t)), "function" == typeof e && (r = e, e = null), a ? e = "buffer" : e || (e = o.defaultEncoding), "function" != typeof r && (r = S), o.ending ? function (t, e) {
          var r = new w();
          M(t, r), n.nextTick(e, r);
        }(this, r) : (a || function (t, e, r, i) {
          var o;
          return null === r ? o = new g() : "string" == typeof r || e.objectMode || (o = new p("chunk", ["string", "Buffer"], r)), !o || (M(t, o), n.nextTick(i, o), !1);
        }(this, o, t, r)) && (o.pendingcb++, s = function (t, e, r, n, i, o) {
          if (!r) {
            var s = function (t, e, r) {
              t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = u.from(e, r));
              return e;
            }(e, n, i);

            n !== s && (r = !0, i = "buffer", n = s);
          }

          var a = e.objectMode ? 1 : n.length;
          e.length += a;
          var h = e.length < e.highWaterMark;
          h || (e.needDrain = !0);

          if (e.writing || e.corked) {
            var f = e.lastBufferedRequest;
            e.lastBufferedRequest = {
              chunk: n,
              encoding: i,
              isBuf: r,
              callback: o,
              next: null
            }, f ? f.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
          } else E(t, e, !1, a, n, i, o);

          return h;
        }(this, o, a, t, e, r)), s;
      }, A.prototype.cork = function () {
        this._writableState.corked++;
      }, A.prototype.uncork = function () {
        var t = this._writableState;
        t.corked && (t.corked--, t.writing || t.corked || t.bufferProcessing || !t.bufferedRequest || k(this, t));
      }, A.prototype.setDefaultEncoding = function (t) {
        if ("string" == typeof t && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1)) throw new _(t);
        return this._writableState.defaultEncoding = t, this;
      }, Object.defineProperty(A.prototype, "writableBuffer", {
        enumerable: !1,
        get: function get() {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(A.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      }), A.prototype._write = function (t, e, r) {
        r(new y("_write()"));
      }, A.prototype._writev = null, A.prototype.end = function (t, e, r) {
        var i = this._writableState;
        return "function" == typeof t ? (r = t, t = null, e = null) : "function" == typeof e && (r = e, e = null), null != t && this.write(t, e), i.corked && (i.corked = 1, this.uncork()), i.ending || function (t, e, r) {
          e.ending = !0, P(t, e), r && (e.finished ? n.nextTick(r) : t.once("finish", r));
          e.ended = !0, t.writable = !1;
        }(this, i, r), this;
      }, Object.defineProperty(A.prototype, "writableLength", {
        enumerable: !1,
        get: function get() {
          return this._writableState.length;
        }
      }), Object.defineProperty(A.prototype, "destroyed", {
        enumerable: !1,
        get: function get() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        },
        set: function set(t) {
          this._writableState && (this._writableState.destroyed = t);
        }
      }), A.prototype.destroy = c.destroy, A.prototype._undestroy = c.undestroy, A.prototype._destroy = function (t, e) {
        e(t);
      };
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    "use strict";

    t.exports = f;
    var n = r(29).codes,
        i = n.ERR_METHOD_NOT_IMPLEMENTED,
        o = n.ERR_MULTIPLE_CALLBACK,
        s = n.ERR_TRANSFORM_ALREADY_TRANSFORMING,
        a = n.ERR_TRANSFORM_WITH_LENGTH_0,
        u = r(30);

    function h(t, e) {
      var r = this._transformState;
      r.transforming = !1;
      var n = r.writecb;
      if (null === n) return this.emit("error", new o());
      r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
      var i = this._readableState;
      i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
    }

    function f(t) {
      if (!(this instanceof f)) return new f(t);
      u.call(this, t), this._transformState = {
        afterTransform: h.bind(this),
        needTransform: !1,
        transforming: !1,
        writecb: null,
        writechunk: null,
        writeencoding: null
      }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", c);
    }

    function c() {
      var t = this;
      "function" != typeof this._flush || this._readableState.destroyed ? l(this, null, null) : this._flush(function (e, r) {
        l(t, e, r);
      });
    }

    function l(t, e, r) {
      if (e) return t.emit("error", e);
      if (null != r && t.push(r), t._writableState.length) throw new a();
      if (t._transformState.transforming) throw new s();
      return t.push(null);
    }

    r(0)(f, u), f.prototype.push = function (t, e) {
      return this._transformState.needTransform = !1, u.prototype.push.call(this, t, e);
    }, f.prototype._transform = function (t, e, r) {
      r(new i("_transform()"));
    }, f.prototype._write = function (t, e, r) {
      var n = this._transformState;

      if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
        var i = this._readableState;
        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
      }
    }, f.prototype._read = function (t) {
      var e = this._transformState;
      null === e.writechunk || e.transforming ? e.needTransform = !0 : (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform));
    }, f.prototype._destroy = function (t, e) {
      u.prototype._destroy.call(this, t, function (t) {
        e(t);
      });
    };
  }, function (t, e, r) {
    var n = r(0),
        i = r(31),
        o = r(2).Buffer,
        s = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
        a = new Array(64);

    function u() {
      this.init(), this._w = a, i.call(this, 64, 56);
    }

    function h(t, e, r) {
      return r ^ t & (e ^ r);
    }

    function f(t, e, r) {
      return t & e | r & (t | e);
    }

    function c(t) {
      return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10);
    }

    function l(t) {
      return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7);
    }

    function d(t) {
      return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3;
    }

    n(u, i), u.prototype.init = function () {
      return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
    }, u.prototype._update = function (t) {
      for (var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, a = 0 | this._d, u = 0 | this._e, p = 0 | this._f, y = 0 | this._g, m = 0 | this._h, b = 0; b < 16; ++b) {
        r[b] = t.readInt32BE(4 * b);
      }

      for (; b < 64; ++b) {
        r[b] = 0 | (((e = r[b - 2]) >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10) + r[b - 7] + d(r[b - 15]) + r[b - 16];
      }

      for (var v = 0; v < 64; ++v) {
        var g = m + l(u) + h(u, p, y) + s[v] + r[v] | 0,
            w = c(n) + f(n, i, o) | 0;
        m = y, y = p, p = u, u = a + g | 0, a = o, o = i, i = n, n = g + w | 0;
      }

      this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = a + this._d | 0, this._e = u + this._e | 0, this._f = p + this._f | 0, this._g = y + this._g | 0, this._h = m + this._h | 0;
    }, u.prototype._hash = function () {
      var t = o.allocUnsafe(32);
      return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t;
    }, t.exports = u;
  }, function (t, e, r) {
    var n = r(0),
        i = r(31),
        o = r(2).Buffer,
        s = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591],
        a = new Array(160);

    function u() {
      this.init(), this._w = a, i.call(this, 128, 112);
    }

    function h(t, e, r) {
      return r ^ t & (e ^ r);
    }

    function f(t, e, r) {
      return t & e | r & (t | e);
    }

    function c(t, e) {
      return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25);
    }

    function l(t, e) {
      return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23);
    }

    function d(t, e) {
      return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7;
    }

    function p(t, e) {
      return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25);
    }

    function y(t, e) {
      return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6;
    }

    function m(t, e) {
      return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26);
    }

    function b(t, e) {
      return t >>> 0 < e >>> 0 ? 1 : 0;
    }

    n(u, i), u.prototype.init = function () {
      return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
    }, u.prototype._update = function (t) {
      for (var e = this._w, r = 0 | this._ah, n = 0 | this._bh, i = 0 | this._ch, o = 0 | this._dh, a = 0 | this._eh, u = 0 | this._fh, v = 0 | this._gh, g = 0 | this._hh, w = 0 | this._al, _ = 0 | this._bl, M = 0 | this._cl, S = 0 | this._dl, O = 0 | this._el, A = 0 | this._fl, E = 0 | this._gl, x = 0 | this._hl, k = 0; k < 32; k += 2) {
        e[k] = t.readInt32BE(4 * k), e[k + 1] = t.readInt32BE(4 * k + 4);
      }

      for (; k < 160; k += 2) {
        var j = e[k - 30],
            $ = e[k - 30 + 1],
            P = d(j, $),
            R = p($, j),
            B = y(j = e[k - 4], $ = e[k - 4 + 1]),
            T = m($, j),
            I = e[k - 14],
            N = e[k - 14 + 1],
            D = e[k - 32],
            C = e[k - 32 + 1],
            L = R + N | 0,
            q = P + I + b(L, R) | 0;
        q = (q = q + B + b(L = L + T | 0, T) | 0) + D + b(L = L + C | 0, C) | 0, e[k] = q, e[k + 1] = L;
      }

      for (var U = 0; U < 160; U += 2) {
        q = e[U], L = e[U + 1];
        var F = f(r, n, i),
            z = f(w, _, M),
            V = c(r, w),
            K = c(w, r),
            H = l(a, O),
            W = l(O, a),
            Z = s[U],
            J = s[U + 1],
            Y = h(a, u, v),
            G = h(O, A, E),
            Q = x + W | 0,
            X = g + H + b(Q, x) | 0;
        X = (X = (X = X + Y + b(Q = Q + G | 0, G) | 0) + Z + b(Q = Q + J | 0, J) | 0) + q + b(Q = Q + L | 0, L) | 0;
        var tt = K + z | 0,
            et = V + F + b(tt, K) | 0;
        g = v, x = E, v = u, E = A, u = a, A = O, a = o + X + b(O = S + Q | 0, S) | 0, o = i, S = M, i = n, M = _, n = r, _ = w, r = X + et + b(w = Q + tt | 0, Q) | 0;
      }

      this._al = this._al + w | 0, this._bl = this._bl + _ | 0, this._cl = this._cl + M | 0, this._dl = this._dl + S | 0, this._el = this._el + O | 0, this._fl = this._fl + A | 0, this._gl = this._gl + E | 0, this._hl = this._hl + x | 0, this._ah = this._ah + r + b(this._al, w) | 0, this._bh = this._bh + n + b(this._bl, _) | 0, this._ch = this._ch + i + b(this._cl, M) | 0, this._dh = this._dh + o + b(this._dl, S) | 0, this._eh = this._eh + a + b(this._el, O) | 0, this._fh = this._fh + u + b(this._fl, A) | 0, this._gh = this._gh + v + b(this._gl, E) | 0, this._hh = this._hh + g + b(this._hl, x) | 0;
    }, u.prototype._hash = function () {
      var t = o.allocUnsafe(64);

      function e(e, r, n) {
        t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4);
      }

      return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), e(this._gh, this._gl, 48), e(this._hh, this._hl, 56), t;
    }, t.exports = u;
  }, function (t, e, r) {
    "use strict";

    (function (e, n) {
      var i = r(48);
      t.exports = g;
      var o,
          s = r(97);
      g.ReadableState = v;
      r(11).EventEmitter;

      var a = function a(t, e) {
        return t.listeners(e).length;
      },
          u = r(108),
          h = r(2).Buffer,
          f = e.Uint8Array || function () {};

      var c = Object.create(r(40));
      c.inherits = r(0);
      var l = r(206),
          d = void 0;
      d = l && l.debuglog ? l.debuglog("stream") : function () {};
      var p,
          y = r(207),
          m = r(109);
      c.inherits(g, u);
      var b = ["error", "close", "destroy", "pause", "resume"];

      function v(t, e) {
        t = t || {};
        var n = e instanceof (o = o || r(26));
        this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode);
        var i = t.highWaterMark,
            s = t.readableHighWaterMark,
            a = this.objectMode ? 16 : 16384;
        this.highWaterMark = i || 0 === i ? i : n && (s || 0 === s) ? s : a, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new y(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (p || (p = r(25).StringDecoder), this.decoder = new p(t.encoding), this.encoding = t.encoding);
      }

      function g(t) {
        if (o = o || r(26), !(this instanceof g)) return new g(t);
        this._readableState = new v(t, this), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), u.call(this);
      }

      function w(t, e, r, n, i) {
        var o,
            s = t._readableState;
        null === e ? (s.reading = !1, function (t, e) {
          if (e.ended) return;

          if (e.decoder) {
            var r = e.decoder.end();
            r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
          }

          e.ended = !0, S(t);
        }(t, s)) : (i || (o = function (t, e) {
          var r;
          n = e, h.isBuffer(n) || n instanceof f || "string" == typeof e || void 0 === e || t.objectMode || (r = new TypeError("Invalid non-string/buffer chunk"));
          var n;
          return r;
        }(s, e)), o ? t.emit("error", o) : s.objectMode || e && e.length > 0 ? ("string" == typeof e || s.objectMode || Object.getPrototypeOf(e) === h.prototype || (e = function (t) {
          return h.from(t);
        }(e)), n ? s.endEmitted ? t.emit("error", new Error("stream.unshift() after end event")) : _(t, s, e, !0) : s.ended ? t.emit("error", new Error("stream.push() after EOF")) : (s.reading = !1, s.decoder && !r ? (e = s.decoder.write(e), s.objectMode || 0 !== e.length ? _(t, s, e, !1) : A(t, s)) : _(t, s, e, !1))) : n || (s.reading = !1));
        return function (t) {
          return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length);
        }(s);
      }

      function _(t, e, r, n) {
        e.flowing && 0 === e.length && !e.sync ? (t.emit("data", r), t.read(0)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && S(t)), A(t, e);
      }

      Object.defineProperty(g.prototype, "destroyed", {
        get: function get() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        },
        set: function set(t) {
          this._readableState && (this._readableState.destroyed = t);
        }
      }), g.prototype.destroy = m.destroy, g.prototype._undestroy = m.undestroy, g.prototype._destroy = function (t, e) {
        this.push(null), e(t);
      }, g.prototype.push = function (t, e) {
        var r,
            n = this._readableState;
        return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = h.from(t, e), e = ""), r = !0), w(this, t, e, !1, r);
      }, g.prototype.unshift = function (t) {
        return w(this, t, null, !0, !1);
      }, g.prototype.isPaused = function () {
        return !1 === this._readableState.flowing;
      }, g.prototype.setEncoding = function (t) {
        return p || (p = r(25).StringDecoder), this._readableState.decoder = new p(t), this._readableState.encoding = t, this;
      };

      function M(t, e) {
        return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function (t) {
          return t >= 8388608 ? t = 8388608 : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
        }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));
      }

      function S(t) {
        var e = t._readableState;
        e.needReadable = !1, e.emittedReadable || (d("emitReadable", e.flowing), e.emittedReadable = !0, e.sync ? i.nextTick(O, t) : O(t));
      }

      function O(t) {
        d("emit readable"), t.emit("readable"), j(t);
      }

      function A(t, e) {
        e.readingMore || (e.readingMore = !0, i.nextTick(E, t, e));
      }

      function E(t, e) {
        for (var r = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (d("maybeReadMore read 0"), t.read(0), r !== e.length);) {
          r = e.length;
        }

        e.readingMore = !1;
      }

      function x(t) {
        d("readable nexttick read 0"), t.read(0);
      }

      function k(t, e) {
        e.reading || (d("resume read 0"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, t.emit("resume"), j(t), e.flowing && !e.reading && t.read(0);
      }

      function j(t) {
        var e = t._readableState;

        for (d("flow", e.flowing); e.flowing && null !== t.read();) {
          ;
        }
      }

      function $(t, e) {
        return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length), e.buffer.clear()) : r = function (t, e, r) {
          var n;
          t < e.head.data.length ? (n = e.head.data.slice(0, t), e.head.data = e.head.data.slice(t)) : n = t === e.head.data.length ? e.shift() : r ? function (t, e) {
            var r = e.head,
                n = 1,
                i = r.data;
            t -= i.length;

            for (; r = r.next;) {
              var o = r.data,
                  s = t > o.length ? o.length : t;

              if (s === o.length ? i += o : i += o.slice(0, t), 0 === (t -= s)) {
                s === o.length ? (++n, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, r.data = o.slice(s));
                break;
              }

              ++n;
            }

            return e.length -= n, i;
          }(t, e) : function (t, e) {
            var r = h.allocUnsafe(t),
                n = e.head,
                i = 1;
            n.data.copy(r), t -= n.data.length;

            for (; n = n.next;) {
              var o = n.data,
                  s = t > o.length ? o.length : t;

              if (o.copy(r, r.length - t, 0, s), 0 === (t -= s)) {
                s === o.length ? (++i, n.next ? e.head = n.next : e.head = e.tail = null) : (e.head = n, n.data = o.slice(s));
                break;
              }

              ++i;
            }

            return e.length -= i, r;
          }(t, e);
          return n;
        }(t, e.buffer, e.decoder), r);
        var r;
      }

      function P(t) {
        var e = t._readableState;
        if (e.length > 0) throw new Error('"endReadable()" called on non-empty stream');
        e.endEmitted || (e.ended = !0, i.nextTick(R, e, t));
      }

      function R(t, e) {
        t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit("end"));
      }

      function B(t, e) {
        for (var r = 0, n = t.length; r < n; r++) {
          if (t[r] === e) return r;
        }

        return -1;
      }

      g.prototype.read = function (t) {
        d("read", t), t = parseInt(t, 10);
        var e = this._readableState,
            r = t;
        if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) return d("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? P(this) : S(this), null;
        if (0 === (t = M(t, e)) && e.ended) return 0 === e.length && P(this), null;
        var n,
            i = e.needReadable;
        return d("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && d("length less than watermark", i = !0), e.ended || e.reading ? d("reading or ended", i = !1) : i && (d("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = M(r, e))), null === (n = t > 0 ? $(t, e) : null) ? (e.needReadable = !0, t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && P(this)), null !== n && this.emit("data", n), n;
      }, g.prototype._read = function (t) {
        this.emit("error", new Error("_read() is not implemented"));
      }, g.prototype.pipe = function (t, e) {
        var r = this,
            o = this._readableState;

        switch (o.pipesCount) {
          case 0:
            o.pipes = t;
            break;

          case 1:
            o.pipes = [o.pipes, t];
            break;

          default:
            o.pipes.push(t);
        }

        o.pipesCount += 1, d("pipe count=%d opts=%j", o.pipesCount, e);
        var u = (!e || !1 !== e.end) && t !== n.stdout && t !== n.stderr ? f : g;

        function h(e, n) {
          d("onunpipe"), e === r && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, d("cleanup"), t.removeListener("close", b), t.removeListener("finish", v), t.removeListener("drain", c), t.removeListener("error", m), t.removeListener("unpipe", h), r.removeListener("end", f), r.removeListener("end", g), r.removeListener("data", y), l = !0, !o.awaitDrain || t._writableState && !t._writableState.needDrain || c());
        }

        function f() {
          d("onend"), t.end();
        }

        o.endEmitted ? i.nextTick(u) : r.once("end", u), t.on("unpipe", h);

        var c = function (t) {
          return function () {
            var e = t._readableState;
            d("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && a(t, "data") && (e.flowing = !0, j(t));
          };
        }(r);

        t.on("drain", c);
        var l = !1;
        var p = !1;

        function y(e) {
          d("ondata"), p = !1, !1 !== t.write(e) || p || ((1 === o.pipesCount && o.pipes === t || o.pipesCount > 1 && -1 !== B(o.pipes, t)) && !l && (d("false write response, pause", r._readableState.awaitDrain), r._readableState.awaitDrain++, p = !0), r.pause());
        }

        function m(e) {
          d("onerror", e), g(), t.removeListener("error", m), 0 === a(t, "error") && t.emit("error", e);
        }

        function b() {
          t.removeListener("finish", v), g();
        }

        function v() {
          d("onfinish"), t.removeListener("close", b), g();
        }

        function g() {
          d("unpipe"), r.unpipe(t);
        }

        return r.on("data", y), function (t, e, r) {
          if ("function" == typeof t.prependListener) return t.prependListener(e, r);
          t._events && t._events[e] ? s(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]] : t.on(e, r);
        }(t, "error", m), t.once("close", b), t.once("finish", v), t.emit("pipe", r), o.flowing || (d("pipe resume"), r.resume()), t;
      }, g.prototype.unpipe = function (t) {
        var e = this._readableState,
            r = {
          hasUnpiped: !1
        };
        if (0 === e.pipesCount) return this;
        if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;

        if (!t) {
          var n = e.pipes,
              i = e.pipesCount;
          e.pipes = null, e.pipesCount = 0, e.flowing = !1;

          for (var o = 0; o < i; o++) {
            n[o].emit("unpipe", this, r);
          }

          return this;
        }

        var s = B(e.pipes, t);
        return -1 === s || (e.pipes.splice(s, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
      }, g.prototype.on = function (t, e) {
        var r = u.prototype.on.call(this, t, e);
        if ("data" === t) !1 !== this._readableState.flowing && this.resume();else if ("readable" === t) {
          var n = this._readableState;
          n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0, n.emittedReadable = !1, n.reading ? n.length && S(this) : i.nextTick(x, this));
        }
        return r;
      }, g.prototype.addListener = g.prototype.on, g.prototype.resume = function () {
        var t = this._readableState;
        return t.flowing || (d("resume"), t.flowing = !0, function (t, e) {
          e.resumeScheduled || (e.resumeScheduled = !0, i.nextTick(k, t, e));
        }(this, t)), this;
      }, g.prototype.pause = function () {
        return d("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (d("pause"), this._readableState.flowing = !1, this.emit("pause")), this;
      }, g.prototype.wrap = function (t) {
        var e = this,
            r = this._readableState,
            n = !1;

        for (var i in t.on("end", function () {
          if (d("wrapped end"), r.decoder && !r.ended) {
            var t = r.decoder.end();
            t && t.length && e.push(t);
          }

          e.push(null);
        }), t.on("data", function (i) {
          (d("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (e.push(i) || (n = !0, t.pause()));
        }), t) {
          void 0 === this[i] && "function" == typeof t[i] && (this[i] = function (e) {
            return function () {
              return t[e].apply(t, arguments);
            };
          }(i));
        }

        for (var o = 0; o < b.length; o++) {
          t.on(b[o], this.emit.bind(this, b[o]));
        }

        return this._read = function (e) {
          d("wrapped _read", e), n && (n = !1, t.resume());
        }, this;
      }, Object.defineProperty(g.prototype, "readableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._readableState.highWaterMark;
        }
      }), g._fromList = $;
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    t.exports = r(11).EventEmitter;
  }, function (t, e, r) {
    "use strict";

    var n = r(48);

    function i(t, e) {
      t.emit("error", e);
    }

    t.exports = {
      destroy: function destroy(t, e) {
        var r = this,
            o = this._readableState && this._readableState.destroyed,
            s = this._writableState && this._writableState.destroyed;
        return o || s ? (e ? e(t) : !t || this._writableState && this._writableState.errorEmitted || n.nextTick(i, this, t), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function (t) {
          !e && t ? (n.nextTick(i, r, t), r._writableState && (r._writableState.errorEmitted = !0)) : e && e(t);
        }), this);
      },
      undestroy: function undestroy() {
        this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
      }
    };
  }, function (t, e, r) {
    (function (t) {
      var n = void 0 !== t && t || "undefined" != typeof self && self || window,
          i = Function.prototype.apply;

      function o(t, e) {
        this._id = t, this._clearFn = e;
      }

      e.setTimeout = function () {
        return new o(i.call(setTimeout, n, arguments), clearTimeout);
      }, e.setInterval = function () {
        return new o(i.call(setInterval, n, arguments), clearInterval);
      }, e.clearTimeout = e.clearInterval = function (t) {
        t && t.close();
      }, o.prototype.unref = o.prototype.ref = function () {}, o.prototype.close = function () {
        this._clearFn.call(n, this._id);
      }, e.enroll = function (t, e) {
        clearTimeout(t._idleTimeoutId), t._idleTimeout = e;
      }, e.unenroll = function (t) {
        clearTimeout(t._idleTimeoutId), t._idleTimeout = -1;
      }, e._unrefActive = e.active = function (t) {
        clearTimeout(t._idleTimeoutId);
        var e = t._idleTimeout;
        e >= 0 && (t._idleTimeoutId = setTimeout(function () {
          t._onTimeout && t._onTimeout();
        }, e));
      }, r(209), e.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== t && t.setImmediate || this && this.setImmediate, e.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== t && t.clearImmediate || this && this.clearImmediate;
    }).call(this, r(7));
  }, function (t, e, r) {
    "use strict";

    t.exports = s;
    var n = r(26),
        i = Object.create(r(40));

    function o(t, e) {
      var r = this._transformState;
      r.transforming = !1;
      var n = r.writecb;
      if (!n) return this.emit("error", new Error("write callback called multiple times"));
      r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
      var i = this._readableState;
      i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
    }

    function s(t) {
      if (!(this instanceof s)) return new s(t);
      n.call(this, t), this._transformState = {
        afterTransform: o.bind(this),
        needTransform: !1,
        transforming: !1,
        writecb: null,
        writechunk: null,
        writeencoding: null
      }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", a);
    }

    function a() {
      var t = this;
      "function" == typeof this._flush ? this._flush(function (e, r) {
        u(t, e, r);
      }) : u(this, null, null);
    }

    function u(t, e, r) {
      if (e) return t.emit("error", e);
      if (null != r && t.push(r), t._writableState.length) throw new Error("Calling transform done when ws.length != 0");
      if (t._transformState.transforming) throw new Error("Calling transform done when still transforming");
      return t.push(null);
    }

    i.inherits = r(0), i.inherits(s, n), s.prototype.push = function (t, e) {
      return this._transformState.needTransform = !1, n.prototype.push.call(this, t, e);
    }, s.prototype._transform = function (t, e, r) {
      throw new Error("_transform() is not implemented");
    }, s.prototype._write = function (t, e, r) {
      var n = this._transformState;

      if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
        var i = this._readableState;
        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
      }
    }, s.prototype._read = function (t) {
      var e = this._transformState;
      null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0;
    }, s.prototype._destroy = function (t, e) {
      var r = this;

      n.prototype._destroy.call(this, t, function (t) {
        e(t), r.emit("close");
      });
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(215),
        o = r(22),
        s = r(2).Buffer,
        a = r(113),
        u = r(65),
        h = r(66),
        f = s.alloc(128);

    function c(t, e) {
      o.call(this, "digest"), "string" == typeof e && (e = s.from(e));
      var r = "sha512" === t || "sha384" === t ? 128 : 64;
      (this._alg = t, this._key = e, e.length > r) ? e = ("rmd160" === t ? new u() : h(t)).update(e).digest() : e.length < r && (e = s.concat([e, f], r));

      for (var n = this._ipad = s.allocUnsafe(r), i = this._opad = s.allocUnsafe(r), a = 0; a < r; a++) {
        n[a] = 54 ^ e[a], i[a] = 92 ^ e[a];
      }

      this._hash = "rmd160" === t ? new u() : h(t), this._hash.update(n);
    }

    n(c, o), c.prototype._update = function (t) {
      this._hash.update(t);
    }, c.prototype._final = function () {
      var t = this._hash.digest();

      return ("rmd160" === this._alg ? new u() : h(this._alg)).update(this._opad).update(t).digest();
    }, t.exports = function (t, e) {
      return "rmd160" === (t = t.toLowerCase()) || "ripemd160" === t ? new c("rmd160", e) : "md5" === t ? new i(a, e) : new c(t, e);
    };
  }, function (t, e, r) {
    var n = r(62);

    t.exports = function (t) {
      return new n().update(t).digest();
    };
  }, function (t) {
    t.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');
  }, function (t, e, r) {
    e.pbkdf2 = r(217), e.pbkdf2Sync = r(118);
  }, function (t, e) {
    var r = Math.pow(2, 30) - 1;

    t.exports = function (t, e) {
      if ("number" != typeof t) throw new TypeError("Iterations not a number");
      if (t < 0) throw new TypeError("Bad iterations");
      if ("number" != typeof e) throw new TypeError("Key length not a number");
      if (e < 0 || e > r || e != e) throw new TypeError("Bad key length");
    };
  }, function (t, e, r) {
    (function (e, r) {
      var n;
      if (e.process && e.process.browser) n = "utf-8";else if (e.process && e.process.version) {
        n = parseInt(r.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary";
      } else n = "utf-8";
      t.exports = n;
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    var n = r(113),
        i = r(65),
        o = r(66),
        s = r(2).Buffer,
        a = r(116),
        u = r(117),
        h = r(119),
        f = s.alloc(128),
        c = {
      md5: 16,
      sha1: 20,
      sha224: 28,
      sha256: 32,
      sha384: 48,
      sha512: 64,
      rmd160: 20,
      ripemd160: 20
    };

    function l(t, e, r) {
      var a = function (t) {
        function e(e) {
          return o(t).update(e).digest();
        }

        return "rmd160" === t || "ripemd160" === t ? function (t) {
          return new i().update(t).digest();
        } : "md5" === t ? n : e;
      }(t),
          u = "sha512" === t || "sha384" === t ? 128 : 64;

      e.length > u ? e = a(e) : e.length < u && (e = s.concat([e, f], u));

      for (var h = s.allocUnsafe(u + c[t]), l = s.allocUnsafe(u + c[t]), d = 0; d < u; d++) {
        h[d] = 54 ^ e[d], l[d] = 92 ^ e[d];
      }

      var p = s.allocUnsafe(u + r + 4);
      h.copy(p, 0, 0, u), this.ipad1 = p, this.ipad2 = h, this.opad = l, this.alg = t, this.blocksize = u, this.hash = a, this.size = c[t];
    }

    l.prototype.run = function (t, e) {
      return t.copy(e, this.blocksize), this.hash(e).copy(this.opad, this.blocksize), this.hash(this.opad);
    }, t.exports = function (t, e, r, n, i) {
      a(r, n);
      var o = new l(i = i || "sha1", t = h(t, u, "Password"), (e = h(e, u, "Salt")).length),
          f = s.allocUnsafe(n),
          d = s.allocUnsafe(e.length + 4);
      e.copy(d, 0, 0, e.length);

      for (var p = 0, y = c[i], m = Math.ceil(n / y), b = 1; b <= m; b++) {
        d.writeUInt32BE(b, e.length);

        for (var v = o.run(d, o.ipad1), g = v, w = 1; w < r; w++) {
          g = o.run(g, o.ipad2);

          for (var _ = 0; _ < y; _++) {
            v[_] ^= g[_];
          }
        }

        v.copy(f, p), p += y;
      }

      return f;
    };
  }, function (t, e, r) {
    var n = r(2).Buffer;

    t.exports = function (t, e, r) {
      if (n.isBuffer(t)) return t;
      if ("string" == typeof t) return n.from(t, e);
      if (ArrayBuffer.isView(t)) return n.from(t.buffer);
      throw new TypeError(r + " must be a string, a Buffer, a typed array or a DataView");
    };
  }, function (t, e, r) {
    "use strict";

    e.readUInt32BE = function (t, e) {
      return (t[0 + e] << 24 | t[1 + e] << 16 | t[2 + e] << 8 | t[3 + e]) >>> 0;
    }, e.writeUInt32BE = function (t, e, r) {
      t[0 + r] = e >>> 24, t[1 + r] = e >>> 16 & 255, t[2 + r] = e >>> 8 & 255, t[3 + r] = 255 & e;
    }, e.ip = function (t, e, r, n) {
      for (var i = 0, o = 0, s = 6; s >= 0; s -= 2) {
        for (var a = 0; a <= 24; a += 8) {
          i <<= 1, i |= e >>> a + s & 1;
        }

        for (a = 0; a <= 24; a += 8) {
          i <<= 1, i |= t >>> a + s & 1;
        }
      }

      for (s = 6; s >= 0; s -= 2) {
        for (a = 1; a <= 25; a += 8) {
          o <<= 1, o |= e >>> a + s & 1;
        }

        for (a = 1; a <= 25; a += 8) {
          o <<= 1, o |= t >>> a + s & 1;
        }
      }

      r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
    }, e.rip = function (t, e, r, n) {
      for (var i = 0, o = 0, s = 0; s < 4; s++) {
        for (var a = 24; a >= 0; a -= 8) {
          i <<= 1, i |= e >>> a + s & 1, i <<= 1, i |= t >>> a + s & 1;
        }
      }

      for (s = 4; s < 8; s++) {
        for (a = 24; a >= 0; a -= 8) {
          o <<= 1, o |= e >>> a + s & 1, o <<= 1, o |= t >>> a + s & 1;
        }
      }

      r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
    }, e.pc1 = function (t, e, r, n) {
      for (var i = 0, o = 0, s = 7; s >= 5; s--) {
        for (var a = 0; a <= 24; a += 8) {
          i <<= 1, i |= e >> a + s & 1;
        }

        for (a = 0; a <= 24; a += 8) {
          i <<= 1, i |= t >> a + s & 1;
        }
      }

      for (a = 0; a <= 24; a += 8) {
        i <<= 1, i |= e >> a + s & 1;
      }

      for (s = 1; s <= 3; s++) {
        for (a = 0; a <= 24; a += 8) {
          o <<= 1, o |= e >> a + s & 1;
        }

        for (a = 0; a <= 24; a += 8) {
          o <<= 1, o |= t >> a + s & 1;
        }
      }

      for (a = 0; a <= 24; a += 8) {
        o <<= 1, o |= t >> a + s & 1;
      }

      r[n + 0] = i >>> 0, r[n + 1] = o >>> 0;
    }, e.r28shl = function (t, e) {
      return t << e & 268435455 | t >>> 28 - e;
    };
    var n = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
    e.pc2 = function (t, e, r, i) {
      for (var o = 0, s = 0, a = n.length >>> 1, u = 0; u < a; u++) {
        o <<= 1, o |= t >>> n[u] & 1;
      }

      for (u = a; u < n.length; u++) {
        s <<= 1, s |= e >>> n[u] & 1;
      }

      r[i + 0] = o >>> 0, r[i + 1] = s >>> 0;
    }, e.expand = function (t, e, r) {
      var n = 0,
          i = 0;
      n = (1 & t) << 5 | t >>> 27;

      for (var o = 23; o >= 15; o -= 4) {
        n <<= 6, n |= t >>> o & 63;
      }

      for (o = 11; o >= 3; o -= 4) {
        i |= t >>> o & 63, i <<= 6;
      }

      i |= (31 & t) << 1 | t >>> 31, e[r + 0] = n >>> 0, e[r + 1] = i >>> 0;
    };
    var i = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];

    e.substitute = function (t, e) {
      for (var r = 0, n = 0; n < 4; n++) {
        r <<= 4, r |= i[64 * n + (t >>> 18 - 6 * n & 63)];
      }

      for (n = 0; n < 4; n++) {
        r <<= 4, r |= i[256 + 64 * n + (e >>> 18 - 6 * n & 63)];
      }

      return r >>> 0;
    };

    var o = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
    e.permute = function (t) {
      for (var e = 0, r = 0; r < o.length; r++) {
        e <<= 1, e |= t >>> o[r] & 1;
      }

      return e >>> 0;
    }, e.padSplit = function (t, e, r) {
      for (var n = t.toString(2); n.length < e;) {
        n = "0" + n;
      }

      for (var i = [], o = 0; o < e; o += r) {
        i.push(n.slice(o, o + r));
      }

      return i.join(" ");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(12),
        i = r(0),
        o = r(120),
        s = r(69);

    function a() {
      this.tmp = new Array(2), this.keys = null;
    }

    function u(t) {
      s.call(this, t);
      var e = new a();
      this._desState = e, this.deriveKeys(e, t.key);
    }

    i(u, s), t.exports = u, u.create = function (t) {
      return new u(t);
    };
    var h = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
    u.prototype.deriveKeys = function (t, e) {
      t.keys = new Array(32), n.equal(e.length, this.blockSize, "Invalid key length");
      var r = o.readUInt32BE(e, 0),
          i = o.readUInt32BE(e, 4);
      o.pc1(r, i, t.tmp, 0), r = t.tmp[0], i = t.tmp[1];

      for (var s = 0; s < t.keys.length; s += 2) {
        var a = h[s >>> 1];
        r = o.r28shl(r, a), i = o.r28shl(i, a), o.pc2(r, i, t.keys, s);
      }
    }, u.prototype._update = function (t, e, r, n) {
      var i = this._desState,
          s = o.readUInt32BE(t, e),
          a = o.readUInt32BE(t, e + 4);
      o.ip(s, a, i.tmp, 0), s = i.tmp[0], a = i.tmp[1], "encrypt" === this.type ? this._encrypt(i, s, a, i.tmp, 0) : this._decrypt(i, s, a, i.tmp, 0), s = i.tmp[0], a = i.tmp[1], o.writeUInt32BE(r, s, n), o.writeUInt32BE(r, a, n + 4);
    }, u.prototype._pad = function (t, e) {
      for (var r = t.length - e, n = e; n < t.length; n++) {
        t[n] = r;
      }

      return !0;
    }, u.prototype._unpad = function (t) {
      for (var e = t[t.length - 1], r = t.length - e; r < t.length; r++) {
        n.equal(t[r], e);
      }

      return t.slice(0, t.length - e);
    }, u.prototype._encrypt = function (t, e, r, n, i) {
      for (var s = e, a = r, u = 0; u < t.keys.length; u += 2) {
        var h = t.keys[u],
            f = t.keys[u + 1];
        o.expand(a, t.tmp, 0), h ^= t.tmp[0], f ^= t.tmp[1];
        var c = o.substitute(h, f),
            l = a;
        a = (s ^ o.permute(c)) >>> 0, s = l;
      }

      o.rip(a, s, n, i);
    }, u.prototype._decrypt = function (t, e, r, n, i) {
      for (var s = r, a = e, u = t.keys.length - 2; u >= 0; u -= 2) {
        var h = t.keys[u],
            f = t.keys[u + 1];
        o.expand(s, t.tmp, 0), h ^= t.tmp[0], f ^= t.tmp[1];
        var c = o.substitute(h, f),
            l = s;
        s = (a ^ o.permute(c)) >>> 0, a = l;
      }

      o.rip(s, a, n, i);
    };
  }, function (t, e, r) {
    var n = r(41),
        i = r(2).Buffer,
        o = r(123);

    function s(t) {
      var e = t._cipher.encryptBlockRaw(t._prev);

      return o(t._prev), e;
    }

    e.encrypt = function (t, e) {
      var r = Math.ceil(e.length / 16),
          o = t._cache.length;
      t._cache = i.concat([t._cache, i.allocUnsafe(16 * r)]);

      for (var a = 0; a < r; a++) {
        var u = s(t),
            h = o + 16 * a;
        t._cache.writeUInt32BE(u[0], h + 0), t._cache.writeUInt32BE(u[1], h + 4), t._cache.writeUInt32BE(u[2], h + 8), t._cache.writeUInt32BE(u[3], h + 12);
      }

      var f = t._cache.slice(0, e.length);

      return t._cache = t._cache.slice(e.length), n(e, f);
    };
  }, function (t, e) {
    t.exports = function (t) {
      for (var e, r = t.length; r--;) {
        if (255 !== (e = t.readUInt8(r))) {
          e++, t.writeUInt8(e, r);
          break;
        }

        t.writeUInt8(0, r);
      }
    };
  }, function (t) {
    t.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
  }, function (t, e, r) {
    var n = r(49),
        i = r(2).Buffer,
        o = r(22),
        s = r(0),
        a = r(230),
        u = r(41),
        h = r(123);

    function f(t, e, r, s) {
      o.call(this);
      var u = i.alloc(4, 0);
      this._cipher = new n.AES(e);

      var f = this._cipher.encryptBlock(u);

      this._ghash = new a(f), r = function (t, e, r) {
        if (12 === e.length) return t._finID = i.concat([e, i.from([0, 0, 0, 1])]), i.concat([e, i.from([0, 0, 0, 2])]);
        var n = new a(r),
            o = e.length,
            s = o % 16;
        n.update(e), s && (s = 16 - s, n.update(i.alloc(s, 0))), n.update(i.alloc(8, 0));
        var u = 8 * o,
            f = i.alloc(8);
        f.writeUIntBE(u, 0, 8), n.update(f), t._finID = n.state;
        var c = i.from(t._finID);
        return h(c), c;
      }(this, r, f), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = s, this._alen = 0, this._len = 0, this._mode = t, this._authTag = null, this._called = !1;
    }

    s(f, o), f.prototype._update = function (t) {
      if (!this._called && this._alen) {
        var e = 16 - this._alen % 16;
        e < 16 && (e = i.alloc(e, 0), this._ghash.update(e));
      }

      this._called = !0;

      var r = this._mode.encrypt(this, t);

      return this._decrypt ? this._ghash.update(t) : this._ghash.update(r), this._len += t.length, r;
    }, f.prototype._final = function () {
      if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
      var t = u(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
      if (this._decrypt && function (t, e) {
        var r = 0;
        t.length !== e.length && r++;

        for (var n = Math.min(t.length, e.length), i = 0; i < n; ++i) {
          r += t[i] ^ e[i];
        }

        return r;
      }(t, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
      this._authTag = t, this._cipher.scrub();
    }, f.prototype.getAuthTag = function () {
      if (this._decrypt || !i.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
      return this._authTag;
    }, f.prototype.setAuthTag = function (t) {
      if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
      this._authTag = t;
    }, f.prototype.setAAD = function (t) {
      if (this._called) throw new Error("Attempting to set AAD in unsupported state");
      this._ghash.update(t), this._alen += t.length;
    }, t.exports = f;
  }, function (t, e, r) {
    var n = r(49),
        i = r(2).Buffer,
        o = r(22);

    function s(t, e, r, s) {
      o.call(this), this._cipher = new n.AES(e), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = s, this._mode = t;
    }

    r(0)(s, o), s.prototype._update = function (t) {
      return this._mode.encrypt(this, t, this._decrypt);
    }, s.prototype._final = function () {
      this._cipher.scrub();
    }, t.exports = s;
  }, function (t, e, r) {
    var n = r(28);
    t.exports = v, v.simpleSieve = m, v.fermatTest = b;
    var i = r(128),
        o = new i(24),
        s = new (r(129))(),
        a = new i(1),
        u = new i(2),
        h = new i(5),
        f = (new i(16), new i(8), new i(10)),
        c = new i(3),
        l = (new i(7), new i(11)),
        d = new i(4),
        p = (new i(12), null);

    function y() {
      if (null !== p) return p;
      var t = [];
      t[0] = 2;

      for (var e = 1, r = 3; r < 1048576; r += 2) {
        for (var n = Math.ceil(Math.sqrt(r)), i = 0; i < e && t[i] <= n && r % t[i] != 0; i++) {
          ;
        }

        e !== i && t[i] <= n || (t[e++] = r);
      }

      return p = t, t;
    }

    function m(t) {
      for (var e = y(), r = 0; r < e.length; r++) {
        if (0 === t.modn(e[r])) return 0 === t.cmpn(e[r]);
      }

      return !0;
    }

    function b(t) {
      var e = i.mont(t);
      return 0 === u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1);
    }

    function v(t, e) {
      if (t < 16) return new i(2 === e || 5 === e ? [140, 123] : [140, 39]);
      var r, p;

      for (e = new i(e);;) {
        for (r = new i(n(Math.ceil(t / 8))); r.bitLength() > t;) {
          r.ishrn(1);
        }

        if (r.isEven() && r.iadd(a), r.testn(1) || r.iadd(u), e.cmp(u)) {
          if (!e.cmp(h)) for (; r.mod(f).cmp(c);) {
            r.iadd(d);
          }
        } else for (; r.mod(o).cmp(l);) {
          r.iadd(d);
        }

        if (m(p = r.shrn(1)) && m(r) && b(p) && b(r) && s.test(p) && s.test(r)) return r;
      }
    }
  }, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(234).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
            var a = t.charCodeAt(s) - 48;
            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
          }

          return i;
        }

        s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this.strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }
          this.strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this.strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype.strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, s.prototype.inspect = function () {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var c = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

        function p(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
        }

        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = l[t],
                f = d[t];
            r = "";
            var p = this.clone();

            for (p.negative = 0; !p.isZero();) {
              var y = p.modn(f).toString(t);
              r = (p = p.idivn(f)).isZero() ? y + r : c[h - y.length] + y + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16);
        }, s.prototype.toBuffer = function (t, e) {
          return i(void 0 !== a), this.toArrayLike(a, t, e);
        }, s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        }, s.prototype.toArrayLike = function (t, e, r) {
          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0"), this.strip();
          var s,
              a,
              u = "le" === e,
              h = new t(o),
              f = this.clone();

          if (u) {
            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[a] = s;
            }

            for (; a < o; a++) {
              h[a] = 0;
            }
          } else {
            for (a = 0; a < o - n; a++) {
              h[a] = 0;
            }

            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
            }
          }

          return h;
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this.strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this.strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this.strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var y = function y(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function m(t, e, r) {
          return new b().mulp(t, e, r);
        }

        function b(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (y = p), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? y(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? function (t, e, r) {
            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

            for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
              var s = i;
              i = 0;

              for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                var f = o - h,
                    c = (0 | t.words[f]) * (0 | e.words[h]),
                    l = 67108863 & c;
                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
              }

              r.words[o] = a, n = s, s = i;
            }

            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
          }(this, t, e) : m(this, t, e);
        }, b.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, b.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, b.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, b.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, b.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, b.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, b.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, b.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, b.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, b.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), m(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          i("number" == typeof t), i(t < 67108864);

          for (var e = 0, r = 0; r < this.length; r++) {
            var n = (0 | this.words[r]) * t,
                o = (67108863 & n) + (67108863 & e);
            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
          }

          return 0 !== e && (this.words[r] = e, this.length++), this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = (t.words[n] & 1 << i) >>> i;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this.strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this.strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this.strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this.strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this.strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modn = function (t) {
          i(t <= 67108863);

          for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) {
            r = (e * r + (0 | this.words[n])) % t;
          }

          return r;
        }, s.prototype.idivn = function (t) {
          i(t <= 67108863);

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = (0 | this.words[r]) + 67108864 * e;
            this.words[r] = n / t | 0, e = n % t;
          }

          return this.strip();
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this.strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new O(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var v = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function g(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function w() {
          g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function _() {
          g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function M() {
          g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function S() {
          g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function O(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function A(t) {
          O.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        g.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, g.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, g.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, g.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(w, g), w.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, w.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(_, g), o(M, g), o(S, g), S.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (v[t]) return v[t];
          var e;
          if ("k256" === t) e = new w();else if ("p224" === t) e = new _();else if ("p192" === t) e = new M();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new S();
          }
          return v[t] = e, e;
        }, O.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, O.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, O.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
        }, O.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, O.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, O.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, O.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, O.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, O.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, O.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, O.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, O.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, O.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, O.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, O.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, O.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, O.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, O.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new A(t);
        }, o(A, O), A.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, A.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, A.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e, r) {
    var n = r(235),
        i = r(72);

    function o(t) {
      this.rand = t || new i.Rand();
    }

    t.exports = o, o.create = function (t) {
      return new o(t);
    }, o.prototype._randbelow = function (t) {
      var e = t.bitLength(),
          r = Math.ceil(e / 8);

      do {
        var i = new n(this.rand.generate(r));
      } while (i.cmp(t) >= 0);

      return i;
    }, o.prototype._randrange = function (t, e) {
      var r = e.sub(t);
      return t.add(this._randbelow(r));
    }, o.prototype.test = function (t, e, r) {
      var i = t.bitLength(),
          o = n.mont(t),
          s = new n(1).toRed(o);
      e || (e = Math.max(1, i / 48 | 0));

      for (var a = t.subn(1), u = 0; !a.testn(u); u++) {
        ;
      }

      for (var h = t.shrn(u), f = a.toRed(o); e > 0; e--) {
        var c = this._randrange(new n(2), a);

        r && r(c);
        var l = c.toRed(o).redPow(h);

        if (0 !== l.cmp(s) && 0 !== l.cmp(f)) {
          for (var d = 1; d < u; d++) {
            if (0 === (l = l.redSqr()).cmp(s)) return !1;
            if (0 === l.cmp(f)) break;
          }

          if (d === u) return !1;
        }
      }

      return !0;
    }, o.prototype.getDivisor = function (t, e) {
      var r = t.bitLength(),
          i = n.mont(t),
          o = new n(1).toRed(i);
      e || (e = Math.max(1, r / 48 | 0));

      for (var s = t.subn(1), a = 0; !s.testn(a); a++) {
        ;
      }

      for (var u = t.shrn(a), h = s.toRed(i); e > 0; e--) {
        var f = this._randrange(new n(2), s),
            c = t.gcd(f);

        if (0 !== c.cmpn(1)) return c;
        var l = f.toRed(i).redPow(u);

        if (0 !== l.cmp(o) && 0 !== l.cmp(h)) {
          for (var d = 1; d < a; d++) {
            if (0 === (l = l.redSqr()).cmp(o)) return l.fromRed().subn(1).gcd(t);
            if (0 === l.cmp(h)) break;
          }

          if (d === a) return (l = l.redSqr()).fromRed().subn(1).gcd(t);
        }
      }

      return !1;
    };
  }, function (t, e, r) {
    "use strict";

    (function (e, n) {
      var i;
      t.exports = A, A.ReadableState = O;
      r(11).EventEmitter;

      var o = function o(t, e) {
        return t.listeners(e).length;
      },
          s = r(131),
          a = r(3).Buffer,
          u = e.Uint8Array || function () {};

      var h,
          f = r(242);
      h = f && f.debuglog ? f.debuglog("stream") : function () {};
      var c,
          l,
          d,
          p = r(243),
          y = r(132),
          m = r(133).getHighWaterMark,
          b = r(32).codes,
          v = b.ERR_INVALID_ARG_TYPE,
          g = b.ERR_STREAM_PUSH_AFTER_EOF,
          w = b.ERR_METHOD_NOT_IMPLEMENTED,
          _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
      r(0)(A, s);
      var M = y.errorOrDestroy,
          S = ["error", "close", "destroy", "pause", "resume"];

      function O(t, e, n) {
        i = i || r(33), t = t || {}, "boolean" != typeof n && (n = e instanceof i), this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode), this.highWaterMark = m(this, t, "readableHighWaterMark", n), this.buffer = new p(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (c || (c = r(25).StringDecoder), this.decoder = new c(t.encoding), this.encoding = t.encoding);
      }

      function A(t) {
        if (i = i || r(33), !(this instanceof A)) return new A(t);
        var e = this instanceof i;
        this._readableState = new O(t, this, e), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), s.call(this);
      }

      function E(t, e, r, n, i) {
        h("readableAddChunk", e);
        var o,
            s = t._readableState;
        if (null === e) s.reading = !1, function (t, e) {
          if (h("onEofChunk"), e.ended) return;

          if (e.decoder) {
            var r = e.decoder.end();
            r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
          }

          e.ended = !0, e.sync ? j(t) : (e.needReadable = !1, e.emittedReadable || (e.emittedReadable = !0, $(t)));
        }(t, s);else if (i || (o = function (t, e) {
          var r;
          n = e, a.isBuffer(n) || n instanceof u || "string" == typeof e || void 0 === e || t.objectMode || (r = new v("chunk", ["string", "Buffer", "Uint8Array"], e));
          var n;
          return r;
        }(s, e)), o) M(t, o);else if (s.objectMode || e && e.length > 0) {
          if ("string" == typeof e || s.objectMode || Object.getPrototypeOf(e) === a.prototype || (e = function (t) {
            return a.from(t);
          }(e)), n) s.endEmitted ? M(t, new _()) : x(t, s, e, !0);else if (s.ended) M(t, new g());else {
            if (s.destroyed) return !1;
            s.reading = !1, s.decoder && !r ? (e = s.decoder.write(e), s.objectMode || 0 !== e.length ? x(t, s, e, !1) : P(t, s)) : x(t, s, e, !1);
          }
        } else n || (s.reading = !1, P(t, s));
        return !s.ended && (s.length < s.highWaterMark || 0 === s.length);
      }

      function x(t, e, r, n) {
        e.flowing && 0 === e.length && !e.sync ? (e.awaitDrain = 0, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && j(t)), P(t, e);
      }

      Object.defineProperty(A.prototype, "destroyed", {
        enumerable: !1,
        get: function get() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        },
        set: function set(t) {
          this._readableState && (this._readableState.destroyed = t);
        }
      }), A.prototype.destroy = y.destroy, A.prototype._undestroy = y.undestroy, A.prototype._destroy = function (t, e) {
        e(t);
      }, A.prototype.push = function (t, e) {
        var r,
            n = this._readableState;
        return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = a.from(t, e), e = ""), r = !0), E(this, t, e, !1, r);
      }, A.prototype.unshift = function (t) {
        return E(this, t, null, !0, !1);
      }, A.prototype.isPaused = function () {
        return !1 === this._readableState.flowing;
      }, A.prototype.setEncoding = function (t) {
        c || (c = r(25).StringDecoder);
        var e = new c(t);
        this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;

        for (var n = this._readableState.buffer.head, i = ""; null !== n;) {
          i += e.write(n.data), n = n.next;
        }

        return this._readableState.buffer.clear(), "" !== i && this._readableState.buffer.push(i), this._readableState.length = i.length, this;
      };

      function k(t, e) {
        return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function (t) {
          return t >= 1073741824 ? t = 1073741824 : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
        }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));
      }

      function j(t) {
        var e = t._readableState;
        h("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = !1, e.emittedReadable || (h("emitReadable", e.flowing), e.emittedReadable = !0, n.nextTick($, t));
      }

      function $(t) {
        var e = t._readableState;
        h("emitReadable_", e.destroyed, e.length, e.ended), e.destroyed || !e.length && !e.ended || (t.emit("readable"), e.emittedReadable = !1), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, N(t);
      }

      function P(t, e) {
        e.readingMore || (e.readingMore = !0, n.nextTick(R, t, e));
      }

      function R(t, e) {
        for (; !e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && 0 === e.length);) {
          var r = e.length;
          if (h("maybeReadMore read 0"), t.read(0), r === e.length) break;
        }

        e.readingMore = !1;
      }

      function B(t) {
        var e = t._readableState;
        e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && !e.paused ? e.flowing = !0 : t.listenerCount("data") > 0 && t.resume();
      }

      function T(t) {
        h("readable nexttick read 0"), t.read(0);
      }

      function I(t, e) {
        h("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = !1, t.emit("resume"), N(t), e.flowing && !e.reading && t.read(0);
      }

      function N(t) {
        var e = t._readableState;

        for (h("flow", e.flowing); e.flowing && null !== t.read();) {
          ;
        }
      }

      function D(t, e) {
        return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.first() : e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r);
        var r;
      }

      function C(t) {
        var e = t._readableState;
        h("endReadable", e.endEmitted), e.endEmitted || (e.ended = !0, n.nextTick(L, e, t));
      }

      function L(t, e) {
        if (h("endReadableNT", t.endEmitted, t.length), !t.endEmitted && 0 === t.length && (t.endEmitted = !0, e.readable = !1, e.emit("end"), t.autoDestroy)) {
          var r = e._writableState;
          (!r || r.autoDestroy && r.finished) && e.destroy();
        }
      }

      function q(t, e) {
        for (var r = 0, n = t.length; r < n; r++) {
          if (t[r] === e) return r;
        }

        return -1;
      }

      A.prototype.read = function (t) {
        h("read", t), t = parseInt(t, 10);
        var e = this._readableState,
            r = t;
        if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && ((0 !== e.highWaterMark ? e.length >= e.highWaterMark : e.length > 0) || e.ended)) return h("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? C(this) : j(this), null;
        if (0 === (t = k(t, e)) && e.ended) return 0 === e.length && C(this), null;
        var n,
            i = e.needReadable;
        return h("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && h("length less than watermark", i = !0), e.ended || e.reading ? h("reading or ended", i = !1) : i && (h("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = k(r, e))), null === (n = t > 0 ? D(t, e) : null) ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.awaitDrain = 0), 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && C(this)), null !== n && this.emit("data", n), n;
      }, A.prototype._read = function (t) {
        M(this, new w("_read()"));
      }, A.prototype.pipe = function (t, e) {
        var r = this,
            i = this._readableState;

        switch (i.pipesCount) {
          case 0:
            i.pipes = t;
            break;

          case 1:
            i.pipes = [i.pipes, t];
            break;

          default:
            i.pipes.push(t);
        }

        i.pipesCount += 1, h("pipe count=%d opts=%j", i.pipesCount, e);
        var s = (!e || !1 !== e.end) && t !== n.stdout && t !== n.stderr ? u : m;

        function a(e, n) {
          h("onunpipe"), e === r && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, h("cleanup"), t.removeListener("close", p), t.removeListener("finish", y), t.removeListener("drain", f), t.removeListener("error", d), t.removeListener("unpipe", a), r.removeListener("end", u), r.removeListener("end", m), r.removeListener("data", l), c = !0, !i.awaitDrain || t._writableState && !t._writableState.needDrain || f());
        }

        function u() {
          h("onend"), t.end();
        }

        i.endEmitted ? n.nextTick(s) : r.once("end", s), t.on("unpipe", a);

        var f = function (t) {
          return function () {
            var e = t._readableState;
            h("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && o(t, "data") && (e.flowing = !0, N(t));
          };
        }(r);

        t.on("drain", f);
        var c = !1;

        function l(e) {
          h("ondata");
          var n = t.write(e);
          h("dest.write", n), !1 === n && ((1 === i.pipesCount && i.pipes === t || i.pipesCount > 1 && -1 !== q(i.pipes, t)) && !c && (h("false write response, pause", i.awaitDrain), i.awaitDrain++), r.pause());
        }

        function d(e) {
          h("onerror", e), m(), t.removeListener("error", d), 0 === o(t, "error") && M(t, e);
        }

        function p() {
          t.removeListener("finish", y), m();
        }

        function y() {
          h("onfinish"), t.removeListener("close", p), m();
        }

        function m() {
          h("unpipe"), r.unpipe(t);
        }

        return r.on("data", l), function (t, e, r) {
          if ("function" == typeof t.prependListener) return t.prependListener(e, r);
          t._events && t._events[e] ? Array.isArray(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]] : t.on(e, r);
        }(t, "error", d), t.once("close", p), t.once("finish", y), t.emit("pipe", r), i.flowing || (h("pipe resume"), r.resume()), t;
      }, A.prototype.unpipe = function (t) {
        var e = this._readableState,
            r = {
          hasUnpiped: !1
        };
        if (0 === e.pipesCount) return this;
        if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;

        if (!t) {
          var n = e.pipes,
              i = e.pipesCount;
          e.pipes = null, e.pipesCount = 0, e.flowing = !1;

          for (var o = 0; o < i; o++) {
            n[o].emit("unpipe", this, {
              hasUnpiped: !1
            });
          }

          return this;
        }

        var s = q(e.pipes, t);
        return -1 === s || (e.pipes.splice(s, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this;
      }, A.prototype.on = function (t, e) {
        var r = s.prototype.on.call(this, t, e),
            i = this._readableState;
        return "data" === t ? (i.readableListening = this.listenerCount("readable") > 0, !1 !== i.flowing && this.resume()) : "readable" === t && (i.endEmitted || i.readableListening || (i.readableListening = i.needReadable = !0, i.flowing = !1, i.emittedReadable = !1, h("on readable", i.length, i.reading), i.length ? j(this) : i.reading || n.nextTick(T, this))), r;
      }, A.prototype.addListener = A.prototype.on, A.prototype.removeListener = function (t, e) {
        var r = s.prototype.removeListener.call(this, t, e);
        return "readable" === t && n.nextTick(B, this), r;
      }, A.prototype.removeAllListeners = function (t) {
        var e = s.prototype.removeAllListeners.apply(this, arguments);
        return "readable" !== t && void 0 !== t || n.nextTick(B, this), e;
      }, A.prototype.resume = function () {
        var t = this._readableState;
        return t.flowing || (h("resume"), t.flowing = !t.readableListening, function (t, e) {
          e.resumeScheduled || (e.resumeScheduled = !0, n.nextTick(I, t, e));
        }(this, t)), t.paused = !1, this;
      }, A.prototype.pause = function () {
        return h("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (h("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
      }, A.prototype.wrap = function (t) {
        var e = this,
            r = this._readableState,
            n = !1;

        for (var i in t.on("end", function () {
          if (h("wrapped end"), r.decoder && !r.ended) {
            var t = r.decoder.end();
            t && t.length && e.push(t);
          }

          e.push(null);
        }), t.on("data", function (i) {
          (h("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (e.push(i) || (n = !0, t.pause()));
        }), t) {
          void 0 === this[i] && "function" == typeof t[i] && (this[i] = function (e) {
            return function () {
              return t[e].apply(t, arguments);
            };
          }(i));
        }

        for (var o = 0; o < S.length; o++) {
          t.on(S[o], this.emit.bind(this, S[o]));
        }

        return this._read = function (e) {
          h("wrapped _read", e), n && (n = !1, t.resume());
        }, this;
      }, "function" == typeof Symbol && (A.prototype[Symbol.asyncIterator] = function () {
        return void 0 === l && (l = r(245)), l(this);
      }), Object.defineProperty(A.prototype, "readableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._readableState.highWaterMark;
        }
      }), Object.defineProperty(A.prototype, "readableBuffer", {
        enumerable: !1,
        get: function get() {
          return this._readableState && this._readableState.buffer;
        }
      }), Object.defineProperty(A.prototype, "readableFlowing", {
        enumerable: !1,
        get: function get() {
          return this._readableState.flowing;
        },
        set: function set(t) {
          this._readableState && (this._readableState.flowing = t);
        }
      }), A._fromList = D, Object.defineProperty(A.prototype, "readableLength", {
        enumerable: !1,
        get: function get() {
          return this._readableState.length;
        }
      }), "function" == typeof Symbol && (A.from = function (t, e) {
        return void 0 === d && (d = r(246)), d(A, t, e);
      });
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    t.exports = r(11).EventEmitter;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function r(t, e) {
        i(t, e), n(t);
      }

      function n(t) {
        t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
      }

      function i(t, e) {
        t.emit("error", e);
      }

      t.exports = {
        destroy: function destroy(t, o) {
          var s = this,
              a = this._readableState && this._readableState.destroyed,
              u = this._writableState && this._writableState.destroyed;
          return a || u ? (o ? o(t) : t && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, e.nextTick(i, this, t)) : e.nextTick(i, this, t)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, function (t) {
            !o && t ? s._writableState ? s._writableState.errorEmitted ? e.nextTick(n, s) : (s._writableState.errorEmitted = !0, e.nextTick(r, s, t)) : e.nextTick(r, s, t) : o ? (e.nextTick(n, s), o(t)) : e.nextTick(n, s);
          }), this);
        },
        undestroy: function undestroy() {
          this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
        },
        errorOrDestroy: function errorOrDestroy(t, e) {
          var r = t._readableState,
              n = t._writableState;
          r && r.autoDestroy || n && n.autoDestroy ? t.destroy(e) : t.emit("error", e);
        }
      };
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";

    var n = r(32).codes.ERR_INVALID_OPT_VALUE;
    t.exports = {
      getHighWaterMark: function getHighWaterMark(t, e, r, i) {
        var o = function (t, e, r) {
          return null != t.highWaterMark ? t.highWaterMark : e ? t[r] : null;
        }(e, i, r);

        if (null != o) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0) throw new n(i ? r : "highWaterMark", o);
          return Math.floor(o);
        }

        return t.objectMode ? 16 : 16384;
      }
    };
  }, function (t, e, r) {
    "use strict";

    (function (e, n) {
      function i(t) {
        var e = this;
        this.next = null, this.entry = null, this.finish = function () {
          !function (t, e, r) {
            var n = t.entry;
            t.entry = null;

            for (; n;) {
              var i = n.callback;
              e.pendingcb--, i(r), n = n.next;
            }

            e.corkedRequestsFree.next = t;
          }(e, t);
        };
      }

      var o;
      t.exports = A, A.WritableState = O;

      var s = {
        deprecate: r(63)
      },
          a = r(131),
          u = r(3).Buffer,
          h = e.Uint8Array || function () {};

      var f,
          c = r(132),
          l = r(133).getHighWaterMark,
          d = r(32).codes,
          p = d.ERR_INVALID_ARG_TYPE,
          y = d.ERR_METHOD_NOT_IMPLEMENTED,
          m = d.ERR_MULTIPLE_CALLBACK,
          b = d.ERR_STREAM_CANNOT_PIPE,
          v = d.ERR_STREAM_DESTROYED,
          g = d.ERR_STREAM_NULL_VALUES,
          w = d.ERR_STREAM_WRITE_AFTER_END,
          _ = d.ERR_UNKNOWN_ENCODING,
          M = c.errorOrDestroy;

      function S() {}

      function O(t, e, s) {
        o = o || r(33), t = t || {}, "boolean" != typeof s && (s = e instanceof o), this.objectMode = !!t.objectMode, s && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = l(this, t, "writableHighWaterMark", s), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
        var a = !1 === t.decodeStrings;
        this.decodeStrings = !a, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (t) {
          !function (t, e) {
            var r = t._writableState,
                i = r.sync,
                o = r.writecb;
            if ("function" != typeof o) throw new m();
            if (function (t) {
              t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
            }(r), e) !function (t, e, r, i, o) {
              --e.pendingcb, r ? (n.nextTick(o, i), n.nextTick(P, t, e), t._writableState.errorEmitted = !0, M(t, i)) : (o(i), t._writableState.errorEmitted = !0, M(t, i), P(t, e));
            }(t, r, i, e, o);else {
              var s = j(r) || t.destroyed;
              s || r.corked || r.bufferProcessing || !r.bufferedRequest || k(t, r), i ? n.nextTick(x, t, r, s, o) : x(t, r, s, o);
            }
          }(e, t);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
      }

      function A(t) {
        var e = this instanceof (o = o || r(33));
        if (!e && !f.call(A, this)) return new A(t);
        this._writableState = new O(t, this, e), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), a.call(this);
      }

      function E(t, e, r, n, i, o, s) {
        e.writelen = n, e.writecb = s, e.writing = !0, e.sync = !0, e.destroyed ? e.onwrite(new v("write")) : r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;
      }

      function x(t, e, r, n) {
        r || function (t, e) {
          0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"));
        }(t, e), e.pendingcb--, n(), P(t, e);
      }

      function k(t, e) {
        e.bufferProcessing = !0;
        var r = e.bufferedRequest;

        if (t._writev && r && r.next) {
          var n = e.bufferedRequestCount,
              o = new Array(n),
              s = e.corkedRequestsFree;
          s.entry = r;

          for (var a = 0, u = !0; r;) {
            o[a] = r, r.isBuf || (u = !1), r = r.next, a += 1;
          }

          o.allBuffers = u, E(t, e, !0, e.length, o, "", s.finish), e.pendingcb++, e.lastBufferedRequest = null, s.next ? (e.corkedRequestsFree = s.next, s.next = null) : e.corkedRequestsFree = new i(e), e.bufferedRequestCount = 0;
        } else {
          for (; r;) {
            var h = r.chunk,
                f = r.encoding,
                c = r.callback;
            if (E(t, e, !1, e.objectMode ? 1 : h.length, h, f, c), r = r.next, e.bufferedRequestCount--, e.writing) break;
          }

          null === r && (e.lastBufferedRequest = null);
        }

        e.bufferedRequest = r, e.bufferProcessing = !1;
      }

      function j(t) {
        return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
      }

      function $(t, e) {
        t._final(function (r) {
          e.pendingcb--, r && M(t, r), e.prefinished = !0, t.emit("prefinish"), P(t, e);
        });
      }

      function P(t, e) {
        var r = j(e);

        if (r && (function (t, e) {
          e.prefinished || e.finalCalled || ("function" != typeof t._final || e.destroyed ? (e.prefinished = !0, t.emit("prefinish")) : (e.pendingcb++, e.finalCalled = !0, n.nextTick($, t, e)));
        }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"), e.autoDestroy))) {
          var i = t._readableState;
          (!i || i.autoDestroy && i.endEmitted) && t.destroy();
        }

        return r;
      }

      r(0)(A, a), O.prototype.getBuffer = function () {
        for (var t = this.bufferedRequest, e = []; t;) {
          e.push(t), t = t.next;
        }

        return e;
      }, function () {
        try {
          Object.defineProperty(O.prototype, "buffer", {
            get: s.deprecate(function () {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch (t) {}
      }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (f = Function.prototype[Symbol.hasInstance], Object.defineProperty(A, Symbol.hasInstance, {
        value: function value(t) {
          return !!f.call(this, t) || this === A && t && t._writableState instanceof O;
        }
      })) : f = function f(t) {
        return t instanceof this;
      }, A.prototype.pipe = function () {
        M(this, new b());
      }, A.prototype.write = function (t, e, r) {
        var i,
            o = this._writableState,
            s = !1,
            a = !o.objectMode && (i = t, u.isBuffer(i) || i instanceof h);
        return a && !u.isBuffer(t) && (t = function (t) {
          return u.from(t);
        }(t)), "function" == typeof e && (r = e, e = null), a ? e = "buffer" : e || (e = o.defaultEncoding), "function" != typeof r && (r = S), o.ending ? function (t, e) {
          var r = new w();
          M(t, r), n.nextTick(e, r);
        }(this, r) : (a || function (t, e, r, i) {
          var o;
          return null === r ? o = new g() : "string" == typeof r || e.objectMode || (o = new p("chunk", ["string", "Buffer"], r)), !o || (M(t, o), n.nextTick(i, o), !1);
        }(this, o, t, r)) && (o.pendingcb++, s = function (t, e, r, n, i, o) {
          if (!r) {
            var s = function (t, e, r) {
              t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = u.from(e, r));
              return e;
            }(e, n, i);

            n !== s && (r = !0, i = "buffer", n = s);
          }

          var a = e.objectMode ? 1 : n.length;
          e.length += a;
          var h = e.length < e.highWaterMark;
          h || (e.needDrain = !0);

          if (e.writing || e.corked) {
            var f = e.lastBufferedRequest;
            e.lastBufferedRequest = {
              chunk: n,
              encoding: i,
              isBuf: r,
              callback: o,
              next: null
            }, f ? f.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
          } else E(t, e, !1, a, n, i, o);

          return h;
        }(this, o, a, t, e, r)), s;
      }, A.prototype.cork = function () {
        this._writableState.corked++;
      }, A.prototype.uncork = function () {
        var t = this._writableState;
        t.corked && (t.corked--, t.writing || t.corked || t.bufferProcessing || !t.bufferedRequest || k(this, t));
      }, A.prototype.setDefaultEncoding = function (t) {
        if ("string" == typeof t && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1)) throw new _(t);
        return this._writableState.defaultEncoding = t, this;
      }, Object.defineProperty(A.prototype, "writableBuffer", {
        enumerable: !1,
        get: function get() {
          return this._writableState && this._writableState.getBuffer();
        }
      }), Object.defineProperty(A.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function get() {
          return this._writableState.highWaterMark;
        }
      }), A.prototype._write = function (t, e, r) {
        r(new y("_write()"));
      }, A.prototype._writev = null, A.prototype.end = function (t, e, r) {
        var i = this._writableState;
        return "function" == typeof t ? (r = t, t = null, e = null) : "function" == typeof e && (r = e, e = null), null != t && this.write(t, e), i.corked && (i.corked = 1, this.uncork()), i.ending || function (t, e, r) {
          e.ending = !0, P(t, e), r && (e.finished ? n.nextTick(r) : t.once("finish", r));
          e.ended = !0, t.writable = !1;
        }(this, i, r), this;
      }, Object.defineProperty(A.prototype, "writableLength", {
        enumerable: !1,
        get: function get() {
          return this._writableState.length;
        }
      }), Object.defineProperty(A.prototype, "destroyed", {
        enumerable: !1,
        get: function get() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        },
        set: function set(t) {
          this._writableState && (this._writableState.destroyed = t);
        }
      }), A.prototype.destroy = c.destroy, A.prototype._undestroy = c.undestroy, A.prototype._destroy = function (t, e) {
        e(t);
      };
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    "use strict";

    t.exports = f;
    var n = r(32).codes,
        i = n.ERR_METHOD_NOT_IMPLEMENTED,
        o = n.ERR_MULTIPLE_CALLBACK,
        s = n.ERR_TRANSFORM_ALREADY_TRANSFORMING,
        a = n.ERR_TRANSFORM_WITH_LENGTH_0,
        u = r(33);

    function h(t, e) {
      var r = this._transformState;
      r.transforming = !1;
      var n = r.writecb;
      if (null === n) return this.emit("error", new o());
      r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
      var i = this._readableState;
      i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
    }

    function f(t) {
      if (!(this instanceof f)) return new f(t);
      u.call(this, t), this._transformState = {
        afterTransform: h.bind(this),
        needTransform: !1,
        transforming: !1,
        writecb: null,
        writechunk: null,
        writeencoding: null
      }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", c);
    }

    function c() {
      var t = this;
      "function" != typeof this._flush || this._readableState.destroyed ? l(this, null, null) : this._flush(function (e, r) {
        l(t, e, r);
      });
    }

    function l(t, e, r) {
      if (e) return t.emit("error", e);
      if (null != r && t.push(r), t._writableState.length) throw new a();
      if (t._transformState.transforming) throw new s();
      return t.push(null);
    }

    r(0)(f, u), f.prototype.push = function (t, e) {
      return this._transformState.needTransform = !1, u.prototype.push.call(this, t, e);
    }, f.prototype._transform = function (t, e, r) {
      r(new i("_transform()"));
    }, f.prototype._write = function (t, e, r) {
      var n = this._transformState;

      if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
        var i = this._readableState;
        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
      }
    }, f.prototype._read = function (t) {
      var e = this._transformState;
      null === e.writechunk || e.transforming ? e.needTransform = !0 : (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform));
    }, f.prototype._destroy = function (t, e) {
      u.prototype._destroy.call(this, t, function (t) {
        e(t);
      });
    };
  }, function (t, e, r) {
    "use strict";

    var n = e;

    function i(t) {
      return 1 === t.length ? "0" + t : t;
    }

    function o(t) {
      for (var e = "", r = 0; r < t.length; r++) {
        e += i(t[r].toString(16));
      }

      return e;
    }

    n.toArray = function (t, e) {
      if (Array.isArray(t)) return t.slice();
      if (!t) return [];
      var r = [];

      if ("string" != typeof t) {
        for (var n = 0; n < t.length; n++) {
          r[n] = 0 | t[n];
        }

        return r;
      }

      if ("hex" === e) {
        (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t);

        for (n = 0; n < t.length; n += 2) {
          r.push(parseInt(t[n] + t[n + 1], 16));
        }
      } else for (n = 0; n < t.length; n++) {
        var i = t.charCodeAt(n),
            o = i >> 8,
            s = 255 & i;
        o ? r.push(o, s) : r.push(s);
      }

      return r;
    }, n.zero2 = i, n.toHex = o, n.encode = function (t, e) {
      return "hex" === e ? o(t) : t;
    };
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.base = r(51), n.short = r(253), n.mont = r(254), n.edwards = r(255);
  }, function (t, e, r) {
    "use strict";

    var n = r(17).rotr32;

    function i(t, e, r) {
      return t & e ^ ~t & r;
    }

    function o(t, e, r) {
      return t & e ^ t & r ^ e & r;
    }

    function s(t, e, r) {
      return t ^ e ^ r;
    }

    e.ft_1 = function (t, e, r, n) {
      return 0 === t ? i(e, r, n) : 1 === t || 3 === t ? s(e, r, n) : 2 === t ? o(e, r, n) : void 0;
    }, e.ch32 = i, e.maj32 = o, e.p32 = s, e.s0_256 = function (t) {
      return n(t, 2) ^ n(t, 13) ^ n(t, 22);
    }, e.s1_256 = function (t) {
      return n(t, 6) ^ n(t, 11) ^ n(t, 25);
    }, e.g0_256 = function (t) {
      return n(t, 7) ^ n(t, 18) ^ t >>> 3;
    }, e.g1_256 = function (t) {
      return n(t, 17) ^ n(t, 19) ^ t >>> 10;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(42),
        o = r(138),
        s = r(12),
        a = n.sum32,
        u = n.sum32_4,
        h = n.sum32_5,
        f = o.ch32,
        c = o.maj32,
        l = o.s0_256,
        d = o.s1_256,
        p = o.g0_256,
        y = o.g1_256,
        m = i.BlockHash,
        b = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

    function v() {
      if (!(this instanceof v)) return new v();
      m.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = b, this.W = new Array(64);
    }

    n.inherits(v, m), t.exports = v, v.blockSize = 512, v.outSize = 256, v.hmacStrength = 192, v.padLength = 64, v.prototype._update = function (t, e) {
      for (var r = this.W, n = 0; n < 16; n++) {
        r[n] = t[e + n];
      }

      for (; n < r.length; n++) {
        r[n] = u(y(r[n - 2]), r[n - 7], p(r[n - 15]), r[n - 16]);
      }

      var i = this.h[0],
          o = this.h[1],
          m = this.h[2],
          b = this.h[3],
          v = this.h[4],
          g = this.h[5],
          w = this.h[6],
          _ = this.h[7];

      for (s(this.k.length === r.length), n = 0; n < r.length; n++) {
        var M = h(_, d(v), f(v, g, w), this.k[n], r[n]),
            S = a(l(i), c(i, o, m));
        _ = w, w = g, g = v, v = a(b, M), b = m, m = o, o = i, i = a(M, S);
      }

      this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], o), this.h[2] = a(this.h[2], m), this.h[3] = a(this.h[3], b), this.h[4] = a(this.h[4], v), this.h[5] = a(this.h[5], g), this.h[6] = a(this.h[6], w), this.h[7] = a(this.h[7], _);
    }, v.prototype._digest = function (t) {
      return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(42),
        o = r(12),
        s = n.rotr64_hi,
        a = n.rotr64_lo,
        u = n.shr64_hi,
        h = n.shr64_lo,
        f = n.sum64,
        c = n.sum64_hi,
        l = n.sum64_lo,
        d = n.sum64_4_hi,
        p = n.sum64_4_lo,
        y = n.sum64_5_hi,
        m = n.sum64_5_lo,
        b = i.BlockHash,
        v = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];

    function g() {
      if (!(this instanceof g)) return new g();
      b.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = v, this.W = new Array(160);
    }

    function w(t, e, r, n, i) {
      var o = t & r ^ ~t & i;
      return o < 0 && (o += 4294967296), o;
    }

    function _(t, e, r, n, i, o) {
      var s = e & n ^ ~e & o;
      return s < 0 && (s += 4294967296), s;
    }

    function M(t, e, r, n, i) {
      var o = t & r ^ t & i ^ r & i;
      return o < 0 && (o += 4294967296), o;
    }

    function S(t, e, r, n, i, o) {
      var s = e & n ^ e & o ^ n & o;
      return s < 0 && (s += 4294967296), s;
    }

    function O(t, e) {
      var r = s(t, e, 28) ^ s(e, t, 2) ^ s(e, t, 7);
      return r < 0 && (r += 4294967296), r;
    }

    function A(t, e) {
      var r = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);
      return r < 0 && (r += 4294967296), r;
    }

    function E(t, e) {
      var r = s(t, e, 14) ^ s(t, e, 18) ^ s(e, t, 9);
      return r < 0 && (r += 4294967296), r;
    }

    function x(t, e) {
      var r = a(t, e, 14) ^ a(t, e, 18) ^ a(e, t, 9);
      return r < 0 && (r += 4294967296), r;
    }

    function k(t, e) {
      var r = s(t, e, 1) ^ s(t, e, 8) ^ u(t, e, 7);
      return r < 0 && (r += 4294967296), r;
    }

    function j(t, e) {
      var r = a(t, e, 1) ^ a(t, e, 8) ^ h(t, e, 7);
      return r < 0 && (r += 4294967296), r;
    }

    function $(t, e) {
      var r = s(t, e, 19) ^ s(e, t, 29) ^ u(t, e, 6);
      return r < 0 && (r += 4294967296), r;
    }

    function P(t, e) {
      var r = a(t, e, 19) ^ a(e, t, 29) ^ h(t, e, 6);
      return r < 0 && (r += 4294967296), r;
    }

    n.inherits(g, b), t.exports = g, g.blockSize = 1024, g.outSize = 512, g.hmacStrength = 192, g.padLength = 128, g.prototype._prepareBlock = function (t, e) {
      for (var r = this.W, n = 0; n < 32; n++) {
        r[n] = t[e + n];
      }

      for (; n < r.length; n += 2) {
        var i = $(r[n - 4], r[n - 3]),
            o = P(r[n - 4], r[n - 3]),
            s = r[n - 14],
            a = r[n - 13],
            u = k(r[n - 30], r[n - 29]),
            h = j(r[n - 30], r[n - 29]),
            f = r[n - 32],
            c = r[n - 31];
        r[n] = d(i, o, s, a, u, h, f, c), r[n + 1] = p(i, o, s, a, u, h, f, c);
      }
    }, g.prototype._update = function (t, e) {
      this._prepareBlock(t, e);

      var r = this.W,
          n = this.h[0],
          i = this.h[1],
          s = this.h[2],
          a = this.h[3],
          u = this.h[4],
          h = this.h[5],
          d = this.h[6],
          p = this.h[7],
          b = this.h[8],
          v = this.h[9],
          g = this.h[10],
          k = this.h[11],
          j = this.h[12],
          $ = this.h[13],
          P = this.h[14],
          R = this.h[15];
      o(this.k.length === r.length);

      for (var B = 0; B < r.length; B += 2) {
        var T = P,
            I = R,
            N = E(b, v),
            D = x(b, v),
            C = w(b, v, g, k, j),
            L = _(b, v, g, k, j, $),
            q = this.k[B],
            U = this.k[B + 1],
            F = r[B],
            z = r[B + 1],
            V = y(T, I, N, D, C, L, q, U, F, z),
            K = m(T, I, N, D, C, L, q, U, F, z);

        T = O(n, i), I = A(n, i), N = M(n, i, s, a, u), D = S(n, i, s, a, u, h);
        var H = c(T, I, N, D),
            W = l(T, I, N, D);
        P = j, R = $, j = g, $ = k, g = b, k = v, b = c(d, p, V, K), v = l(p, p, V, K), d = u, p = h, u = s, h = a, s = n, a = i, n = c(V, K, H, W), i = l(V, K, H, W);
      }

      f(this.h, 0, n, i), f(this.h, 2, s, a), f(this.h, 4, u, h), f(this.h, 6, d, p), f(this.h, 8, b, v), f(this.h, 10, g, k), f(this.h, 12, j, $), f(this.h, 14, P, R);
    }, g.prototype._digest = function (t) {
      return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
    };
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.bignum = r(142), n.define = r(272).define, n.base = r(275), n.constants = r(276), n.decoders = r(145), n.encoders = r(143);
  }, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(271).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
            var a = t.charCodeAt(s) - 48;
            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
          }

          return i;
        }

        s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this.strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }
          this.strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this.strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype.strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, s.prototype.inspect = function () {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var c = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

        function p(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
        }

        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = l[t],
                f = d[t];
            r = "";
            var p = this.clone();

            for (p.negative = 0; !p.isZero();) {
              var y = p.modn(f).toString(t);
              r = (p = p.idivn(f)).isZero() ? y + r : c[h - y.length] + y + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16);
        }, s.prototype.toBuffer = function (t, e) {
          return i(void 0 !== a), this.toArrayLike(a, t, e);
        }, s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        }, s.prototype.toArrayLike = function (t, e, r) {
          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0"), this.strip();
          var s,
              a,
              u = "le" === e,
              h = new t(o),
              f = this.clone();

          if (u) {
            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[a] = s;
            }

            for (; a < o; a++) {
              h[a] = 0;
            }
          } else {
            for (a = 0; a < o - n; a++) {
              h[a] = 0;
            }

            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
            }
          }

          return h;
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this.strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this.strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this.strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var y = function y(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function m(t, e, r) {
          return new b().mulp(t, e, r);
        }

        function b(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (y = p), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? y(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? function (t, e, r) {
            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

            for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
              var s = i;
              i = 0;

              for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                var f = o - h,
                    c = (0 | t.words[f]) * (0 | e.words[h]),
                    l = 67108863 & c;
                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
              }

              r.words[o] = a, n = s, s = i;
            }

            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
          }(this, t, e) : m(this, t, e);
        }, b.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, b.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, b.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, b.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, b.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, b.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, b.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, b.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, b.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, b.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), m(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          i("number" == typeof t), i(t < 67108864);

          for (var e = 0, r = 0; r < this.length; r++) {
            var n = (0 | this.words[r]) * t,
                o = (67108863 & n) + (67108863 & e);
            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
          }

          return 0 !== e && (this.words[r] = e, this.length++), this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = (t.words[n] & 1 << i) >>> i;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this.strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this.strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this.strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this.strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this.strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modn = function (t) {
          i(t <= 67108863);

          for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) {
            r = (e * r + (0 | this.words[n])) % t;
          }

          return r;
        }, s.prototype.idivn = function (t) {
          i(t <= 67108863);

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = (0 | this.words[r]) + 67108864 * e;
            this.words[r] = n / t | 0, e = n % t;
          }

          return this.strip();
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this.strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new O(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var v = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function g(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function w() {
          g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function _() {
          g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function M() {
          g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function S() {
          g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function O(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function A(t) {
          O.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        g.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, g.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, g.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, g.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(w, g), w.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, w.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(_, g), o(M, g), o(S, g), S.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (v[t]) return v[t];
          var e;
          if ("k256" === t) e = new w();else if ("p224" === t) e = new _();else if ("p192" === t) e = new M();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new S();
          }
          return v[t] = e, e;
        }, O.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, O.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, O.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
        }, O.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, O.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, O.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, O.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, O.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, O.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, O.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, O.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, O.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, O.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, O.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, O.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, O.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, O.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, O.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new A(t);
        }, o(A, O), A.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, A.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, A.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.der = r(144), n.pem = r(273);
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(80).Buffer,
        o = r(81),
        s = r(83);

    function a(t) {
      this.enc = "der", this.name = t.name, this.entity = t, this.tree = new u(), this.tree._init(t.body);
    }

    function u(t) {
      o.call(this, "der", t);
    }

    function h(t) {
      return t < 10 ? "0" + t : t;
    }

    t.exports = a, a.prototype.encode = function (t, e) {
      return this.tree._encode(t, e).join();
    }, n(u, o), u.prototype._encodeComposite = function (t, e, r, n) {
      var o = function (t, e, r, n) {
        var i;
        "seqof" === t ? t = "seq" : "setof" === t && (t = "set");
        if (s.tagByName.hasOwnProperty(t)) i = s.tagByName[t];else {
          if ("number" != typeof t || (0 | t) !== t) return n.error("Unknown tag: " + t);
          i = t;
        }
        if (i >= 31) return n.error("Multi-octet tag encoding unsupported");
        e || (i |= 32);
        return i |= s.tagClassByName[r || "universal"] << 6;
      }(t, e, r, this.reporter);

      if (n.length < 128) {
        var a = i.alloc(2);
        return a[0] = o, a[1] = n.length, this._createEncoderBuffer([a, n]);
      }

      for (var u = 1, h = n.length; h >= 256; h >>= 8) {
        u++;
      }

      var f = i.alloc(2 + u);
      f[0] = o, f[1] = 128 | u;

      for (var c = 1 + u, l = n.length; l > 0; c--, l >>= 8) {
        f[c] = 255 & l;
      }

      return this._createEncoderBuffer([f, n]);
    }, u.prototype._encodeStr = function (t, e) {
      if ("bitstr" === e) return this._createEncoderBuffer([0 | t.unused, t.data]);

      if ("bmpstr" === e) {
        for (var r = i.alloc(2 * t.length), n = 0; n < t.length; n++) {
          r.writeUInt16BE(t.charCodeAt(n), 2 * n);
        }

        return this._createEncoderBuffer(r);
      }

      return "numstr" === e ? this._isNumstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === e ? this._isPrintstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(e) || "objDesc" === e ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: " + e + " unsupported");
    }, u.prototype._encodeObjid = function (t, e, r) {
      if ("string" == typeof t) {
        if (!e) return this.reporter.error("string objid given, but no values map found");
        if (!e.hasOwnProperty(t)) return this.reporter.error("objid not found in values map");
        t = e[t].split(/[\s.]+/g);

        for (var n = 0; n < t.length; n++) {
          t[n] |= 0;
        }
      } else if (Array.isArray(t)) {
        t = t.slice();

        for (var o = 0; o < t.length; o++) {
          t[o] |= 0;
        }
      }

      if (!Array.isArray(t)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t));

      if (!r) {
        if (t[1] >= 40) return this.reporter.error("Second objid identifier OOB");
        t.splice(0, 2, 40 * t[0] + t[1]);
      }

      for (var s = 0, a = 0; a < t.length; a++) {
        var u = t[a];

        for (s++; u >= 128; u >>= 7) {
          s++;
        }
      }

      for (var h = i.alloc(s), f = h.length - 1, c = t.length - 1; c >= 0; c--) {
        var l = t[c];

        for (h[f--] = 127 & l; (l >>= 7) > 0;) {
          h[f--] = 128 | 127 & l;
        }
      }

      return this._createEncoderBuffer(h);
    }, u.prototype._encodeTime = function (t, e) {
      var r,
          n = new Date(t);
      return "gentime" === e ? r = [h(n.getUTCFullYear()), h(n.getUTCMonth() + 1), h(n.getUTCDate()), h(n.getUTCHours()), h(n.getUTCMinutes()), h(n.getUTCSeconds()), "Z"].join("") : "utctime" === e ? r = [h(n.getUTCFullYear() % 100), h(n.getUTCMonth() + 1), h(n.getUTCDate()), h(n.getUTCHours()), h(n.getUTCMinutes()), h(n.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + e + " time is not supported yet"), this._encodeStr(r, "octstr");
    }, u.prototype._encodeNull = function () {
      return this._createEncoderBuffer("");
    }, u.prototype._encodeInt = function (t, e) {
      if ("string" == typeof t) {
        if (!e) return this.reporter.error("String int or enum given, but no values map");
        if (!e.hasOwnProperty(t)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t));
        t = e[t];
      }

      if ("number" != typeof t && !i.isBuffer(t)) {
        var r = t.toArray();
        !t.sign && 128 & r[0] && r.unshift(0), t = i.from(r);
      }

      if (i.isBuffer(t)) {
        var n = t.length;
        0 === t.length && n++;
        var o = i.alloc(n);
        return t.copy(o), 0 === t.length && (o[0] = 0), this._createEncoderBuffer(o);
      }

      if (t < 128) return this._createEncoderBuffer(t);
      if (t < 256) return this._createEncoderBuffer([0, t]);

      for (var s = 1, a = t; a >= 256; a >>= 8) {
        s++;
      }

      for (var u = new Array(s), h = u.length - 1; h >= 0; h--) {
        u[h] = 255 & t, t >>= 8;
      }

      return 128 & u[0] && u.unshift(0), this._createEncoderBuffer(i.from(u));
    }, u.prototype._encodeBool = function (t) {
      return this._createEncoderBuffer(t ? 255 : 0);
    }, u.prototype._use = function (t, e) {
      return "function" == typeof t && (t = t(e)), t._getEncoder("der").tree;
    }, u.prototype._skipDefault = function (t, e, r) {
      var n,
          i = this._baseState;
      if (null === i.default) return !1;
      var o = t.join();
      if (void 0 === i.defaultBuffer && (i.defaultBuffer = this._encodeValue(i.default, e, r).join()), o.length !== i.defaultBuffer.length) return !1;

      for (n = 0; n < o.length; n++) {
        if (o[n] !== i.defaultBuffer[n]) return !1;
      }

      return !0;
    };
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.der = r(146), n.pem = r(274);
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(142),
        o = r(43).DecoderBuffer,
        s = r(81),
        a = r(83);

    function u(t) {
      this.enc = "der", this.name = t.name, this.entity = t, this.tree = new h(), this.tree._init(t.body);
    }

    function h(t) {
      s.call(this, "der", t);
    }

    function f(t, e) {
      var r = t.readUInt8(e);
      if (t.isError(r)) return r;
      var n = a.tagClass[r >> 6],
          i = 0 == (32 & r);

      if (31 == (31 & r)) {
        var o = r;

        for (r = 0; 128 == (128 & o);) {
          if (o = t.readUInt8(e), t.isError(o)) return o;
          r <<= 7, r |= 127 & o;
        }
      } else r &= 31;

      return {
        cls: n,
        primitive: i,
        tag: r,
        tagStr: a.tag[r]
      };
    }

    function c(t, e, r) {
      var n = t.readUInt8(r);
      if (t.isError(n)) return n;
      if (!e && 128 === n) return null;
      if (0 == (128 & n)) return n;
      var i = 127 & n;
      if (i > 4) return t.error("length octect is too long");
      n = 0;

      for (var o = 0; o < i; o++) {
        n <<= 8;
        var s = t.readUInt8(r);
        if (t.isError(s)) return s;
        n |= s;
      }

      return n;
    }

    t.exports = u, u.prototype.decode = function (t, e) {
      return o.isDecoderBuffer(t) || (t = new o(t, e)), this.tree._decode(t, e);
    }, n(h, s), h.prototype._peekTag = function (t, e, r) {
      if (t.isEmpty()) return !1;
      var n = t.save(),
          i = f(t, 'Failed to peek tag: "' + e + '"');
      return t.isError(i) ? i : (t.restore(n), i.tag === e || i.tagStr === e || i.tagStr + "of" === e || r);
    }, h.prototype._decodeTag = function (t, e, r) {
      var n = f(t, 'Failed to decode tag of "' + e + '"');
      if (t.isError(n)) return n;
      var i = c(t, n.primitive, 'Failed to get length of "' + e + '"');
      if (t.isError(i)) return i;
      if (!r && n.tag !== e && n.tagStr !== e && n.tagStr + "of" !== e) return t.error('Failed to match tag: "' + e + '"');
      if (n.primitive || null !== i) return t.skip(i, 'Failed to match body of: "' + e + '"');

      var o = t.save(),
          s = this._skipUntilEnd(t, 'Failed to skip indefinite length body: "' + this.tag + '"');

      return t.isError(s) ? s : (i = t.offset - o.offset, t.restore(o), t.skip(i, 'Failed to match body of: "' + e + '"'));
    }, h.prototype._skipUntilEnd = function (t, e) {
      for (;;) {
        var r = f(t, e);
        if (t.isError(r)) return r;
        var n = c(t, r.primitive, e);
        if (t.isError(n)) return n;
        var i = void 0;
        if (i = r.primitive || null !== n ? t.skip(n) : this._skipUntilEnd(t, e), t.isError(i)) return i;
        if ("end" === r.tagStr) break;
      }
    }, h.prototype._decodeList = function (t, e, r, n) {
      for (var i = []; !t.isEmpty();) {
        var o = this._peekTag(t, "end");

        if (t.isError(o)) return o;
        var s = r.decode(t, "der", n);
        if (t.isError(s) && o) break;
        i.push(s);
      }

      return i;
    }, h.prototype._decodeStr = function (t, e) {
      if ("bitstr" === e) {
        var r = t.readUInt8();
        return t.isError(r) ? r : {
          unused: r,
          data: t.raw()
        };
      }

      if ("bmpstr" === e) {
        var n = t.raw();
        if (n.length % 2 == 1) return t.error("Decoding of string type: bmpstr length mismatch");

        for (var i = "", o = 0; o < n.length / 2; o++) {
          i += String.fromCharCode(n.readUInt16BE(2 * o));
        }

        return i;
      }

      if ("numstr" === e) {
        var s = t.raw().toString("ascii");
        return this._isNumstr(s) ? s : t.error("Decoding of string type: numstr unsupported characters");
      }

      if ("octstr" === e) return t.raw();
      if ("objDesc" === e) return t.raw();

      if ("printstr" === e) {
        var a = t.raw().toString("ascii");
        return this._isPrintstr(a) ? a : t.error("Decoding of string type: printstr unsupported characters");
      }

      return /str$/.test(e) ? t.raw().toString() : t.error("Decoding of string type: " + e + " unsupported");
    }, h.prototype._decodeObjid = function (t, e, r) {
      for (var n, i = [], o = 0, s = 0; !t.isEmpty();) {
        o <<= 7, o |= 127 & (s = t.readUInt8()), 0 == (128 & s) && (i.push(o), o = 0);
      }

      128 & s && i.push(o);
      var a = i[0] / 40 | 0,
          u = i[0] % 40;

      if (n = r ? i : [a, u].concat(i.slice(1)), e) {
        var h = e[n.join(" ")];
        void 0 === h && (h = e[n.join(".")]), void 0 !== h && (n = h);
      }

      return n;
    }, h.prototype._decodeTime = function (t, e) {
      var r,
          n,
          i,
          o,
          s,
          a,
          u = t.raw().toString();
      if ("gentime" === e) r = 0 | u.slice(0, 4), n = 0 | u.slice(4, 6), i = 0 | u.slice(6, 8), o = 0 | u.slice(8, 10), s = 0 | u.slice(10, 12), a = 0 | u.slice(12, 14);else {
        if ("utctime" !== e) return t.error("Decoding " + e + " time is not supported yet");
        r = 0 | u.slice(0, 2), n = 0 | u.slice(2, 4), i = 0 | u.slice(4, 6), o = 0 | u.slice(6, 8), s = 0 | u.slice(8, 10), a = 0 | u.slice(10, 12), r = r < 70 ? 2e3 + r : 1900 + r;
      }
      return Date.UTC(r, n - 1, i, o, s, a, 0);
    }, h.prototype._decodeNull = function () {
      return null;
    }, h.prototype._decodeBool = function (t) {
      var e = t.readUInt8();
      return t.isError(e) ? e : 0 !== e;
    }, h.prototype._decodeInt = function (t, e) {
      var r = t.raw(),
          n = new i(r);
      return e && (n = e[n.toString(10)] || n), n;
    }, h.prototype._use = function (t, e) {
      return "function" == typeof t && (t = t(e)), t._getDecoder("der").tree;
    };
  }, function (t) {
    t.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
  }, function (t, e, r) {
    var n = r(39),
        i = r(2).Buffer;

    function o(t) {
      var e = i.allocUnsafe(4);
      return e.writeUInt32BE(t, 0), e;
    }

    t.exports = function (t, e) {
      for (var r, s = i.alloc(0), a = 0; s.length < e;) {
        r = o(a++), s = i.concat([s, n("sha1").update(t).update(r).digest()]);
      }

      return s.slice(0, e);
    };
  }, function (t, e) {
    t.exports = function (t, e) {
      for (var r = t.length, n = -1; ++n < r;) {
        t[n] ^= e[n];
      }

      return t;
    };
  }, function (t, e, r) {
    var n = r(84),
        i = r(2).Buffer;

    t.exports = function (t, e) {
      return i.from(t.toRed(n.mont(e.modulus)).redPow(new n(e.publicExponent)).fromRed().toArray());
    };
  }, function (t, e) {
    function r(t) {
      return (r = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var n = 1e3,
        i = 6e4,
        o = 60 * i,
        s = 24 * o;

    function a(t, e, r, n) {
      var i = e >= 1.5 * r;
      return Math.round(t / r) + " " + n + (i ? "s" : "");
    }

    t.exports = function (t, e) {
      e = e || {};
      var u = r(t);
      if ("string" === u && t.length > 0) return function (t) {
        if ((t = String(t)).length > 100) return;
        var e = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);
        if (!e) return;
        var r = parseFloat(e[1]);

        switch ((e[2] || "ms").toLowerCase()) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return 315576e5 * r;

          case "weeks":
          case "week":
          case "w":
            return 6048e5 * r;

          case "days":
          case "day":
          case "d":
            return r * s;

          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return r * o;

          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return r * i;

          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return r * n;

          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return r;

          default:
            return;
        }
      }(t);
      if ("number" === u && isFinite(t)) return e.long ? function (t) {
        var e = Math.abs(t);
        if (e >= s) return a(t, e, s, "day");
        if (e >= o) return a(t, e, o, "hour");
        if (e >= i) return a(t, e, i, "minute");
        if (e >= n) return a(t, e, n, "second");
        return t + " ms";
      }(t) : function (t) {
        var e = Math.abs(t);
        if (e >= s) return Math.round(t / s) + "d";
        if (e >= o) return Math.round(t / o) + "h";
        if (e >= i) return Math.round(t / i) + "m";
        if (e >= n) return Math.round(t / n) + "s";
        return t + "ms";
      }(t);
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t));
    };
  }, function (t, e) {
    t.exports = function (t, e, r) {
      var n = [],
          i = t.length;
      if (0 === i) return n;
      var o = e < 0 ? Math.max(0, e + i) : e || 0;

      for (void 0 !== r && (i = r < 0 ? r + i : r); i-- > o;) {
        n[i - o] = t[i];
      }

      return n;
    };
  }, function (t, e) {
    function r(t) {
      return (r = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var n = Object.prototype.toString;

    t.exports = function (t) {
      if ("object" != r(e = t) || "[object RegExp]" != n.call(e)) throw new TypeError("Not a RegExp");
      var e,
          i = [];
      t.global && i.push("g"), t.multiline && i.push("m"), t.ignoreCase && i.push("i"), t.dotAll && i.push("s"), t.unicode && i.push("u"), t.sticky && i.push("y");
      var o = new RegExp(t.source, i.join(""));
      return "number" == typeof t.lastIndex && (o.lastIndex = t.lastIndex), o;
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t) {
      return t.name ? t.name : (t.toString().trim().match(/^function\s*([^\s(]+)/) || [])[1];
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(6);
    /*!
     * Get the bson type, if it exists
     */

    t.exports = function (t, e) {
      return n(t, "_bsontype", void 0) === e;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = Symbol("mongoose#trustedSymbol");
    e.trustedSymbol = i, e.trusted = function (t) {
      return null == t || "object" !== n(t) || (t[i] = !0), t;
    };
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * ignore
       */
      var n = r(36),
          i = r(301),
          o = {
        _promise: null,
        get: function get() {
          return o._promise;
        },
        set: function set(t) {
          n.ok("function" == typeof t, "mongoose.Promise must be a function, got ".concat(t)), o._promise = t, i.Promise = t;
        }
      };
      /*!
       * Use native promises by default
       */

      o.set(e.Promise), t.exports = o;
    }).call(this, r(7));
  }, function (t, e, r) {
    "use strict";

    (function (t, n, i) {
      /*!
       * Module dependencies.
       */
      function o(t) {
        return (o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var s = r(153),
          a = ["__proto__", "constructor", "prototype"],
          u = e.clone = function t(r, n) {
        if (null == r) return r;
        if (Array.isArray(r)) return e.cloneArray(r, n);

        if (r.constructor) {
          if (/ObjectI[dD]$/.test(r.constructor.name)) return "function" == typeof r.clone ? r.clone() : new r.constructor(r.id);
          if ("ReadPreference" === r.constructor.name) return new r.constructor(r.mode, t(r.tags, n));
          if ("Binary" == r._bsontype && r.buffer && r.value) return "function" == typeof r.clone ? r.clone() : new r.constructor(r.value(!0), r.sub_type);
          if ("Date" === r.constructor.name || "Function" === r.constructor.name) return new r.constructor(+r);
          if ("RegExp" === r.constructor.name) return s(r);
          if ("Buffer" === r.constructor.name) return e.cloneBuffer(r);
        }

        return f(r) ? e.cloneObject(r, n) : r.valueOf ? r.valueOf() : void 0;
      };
      /*!
       * ignore
       */


      e.cloneObject = function (t, e) {
        for (var r, n, i, o = e && e.minimize, s = {}, h = Object.keys(t), f = 0; f < h.length; ++f) {
          i = h[f], -1 === a.indexOf(i) && (n = u(t[i], e), o && void 0 === n || (r || (r = !0), s[i] = n));
        }

        return o ? r && s : s;
      }, e.cloneArray = function (t, e) {
        for (var r = [], n = 0, i = t.length; n < i; n++) {
          r.push(u(t[n], e));
        }

        return r;
      }, e.tick = function (t) {
        if ("function" == typeof t) return function () {
          var e = arguments;
          c(function () {
            t.apply(this, e);
          });
        };
      }, e.merge = function t(r, n) {
        for (var i = 0, o = Object.keys(n); i < o.length; i++) {
          var s = o[i];
          -1 === a.indexOf(s) && (void 0 === r[s] ? r[s] = n[s] : e.isObject(n[s]) ? t(r[s], n[s]) : r[s] = n[s]);
        }
      }, e.mergeClone = function t(r, n) {
        for (var i = 0, o = Object.keys(n); i < o.length; i++) {
          var s = o[i];
          -1 === a.indexOf(s) && (void 0 === r[s] ? r[s] = u(n[s]) : e.isObject(n[s]) ? t(r[s], n[s]) : r[s] = u(n[s]));
        }
      }, e.readPref = function (t) {
        switch (t) {
          case "p":
            t = "primary";
            break;

          case "pp":
            t = "primaryPreferred";
            break;

          case "s":
            t = "secondary";
            break;

          case "sp":
            t = "secondaryPreferred";
            break;

          case "n":
            t = "nearest";
        }

        return t;
      }, e.readConcern = function (t) {
        if ("string" == typeof t) {
          switch (t) {
            case "l":
              t = "local";
              break;

            case "a":
              t = "available";
              break;

            case "m":
              t = "majority";
              break;

            case "lz":
              t = "linearizable";
              break;

            case "s":
              t = "snapshot";
          }

          t = {
            level: t
          };
        }

        return t;
      };
      var h = Object.prototype.toString;

      e.toString = function (t) {
        return h.call(t);
      };

      var f = e.isObject = function (t) {
        return "[object Object]" == e.toString(t);
      };

      e.isArray = function (t) {
        return Array.isArray(t) || "object" == o(t) && "[object Array]" == e.toString(t);
      }, e.keys = Object.keys, e.create = "function" == typeof Object.create ? Object.create : function (t) {
        if (arguments.length > 1) throw new Error("Adding properties is not supported");

        function e() {}

        return e.prototype = t, new e();
      }, e.inherits = function (t, r) {
        t.prototype = e.create(r.prototype), t.prototype.constructor = t;
      };
      var c = e.soon = "function" == typeof t ? t : n.nextTick;
      e.cloneBuffer = function (t) {
        var e = i.alloc(t.length);
        return t.copy(e, 0, 0, t.length), e;
      }, e.isArgumentsObject = function (t) {
        return "[object Arguments]" === Object.prototype.toString.call(t);
      };
    }).call(this, r(110).setImmediate, r(5), r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    (function (t, r, n, i) {
      function o(t) {
        return (o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      e.isNode = void 0 !== t && "object" == o(r) && "object" == (void 0 === n ? "undefined" : o(n)) && "function" == typeof i && t.argv, e.isMongo = !e.isNode && "function" == typeof printjson && "function" == typeof ObjectId && "function" == typeof rs && "function" == typeof sh, e.isBrowser = !e.isNode && !e.isMongo && "undefined" != typeof window, e.type = e.isNode ? "node" : e.isMongo ? "mongo" : e.isBrowser ? "browser" : "unknown";
    }).call(this, r(5), r(23)(t), r(7), r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t, e, r) {
      for (var n = {}, i = 0, o = Object.keys(e.tree); i < o.length; i++) {
        var s = o[i];
        r && (t.paths[s] || t.nested[s] || t.singleNestedPaths[s]) || (n[s] = e.tree[s]);
      }

      for (var a in t.add(n), t.callQueue = t.callQueue.concat(e.callQueue), t.method(e.methods), t.static(e.statics), e.query) {
        t.query[a] = e.query[a];
      }

      for (var u in e.virtuals) {
        t.virtuals[u] = e.virtuals[u].clone();
      }

      t.s.hooks.merge(e.s.hooks, !1);
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module requirements
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = r(20),
        f = r(37),
        c = r(9),
        l = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t) {
        var e, r;
        return function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u), r = "model" === f(t) ? t.constructor.modelName + " validation failed" : "Validation failed", (e = a.call(this, r)).errors = {}, e._message = r, t && (t.$errors = e.errors), e;
      }

      return e = u, (r = [{
        key: "toString",
        value: function value() {
          return this.name + ": " + d(this);
        }
        /*!
             * inspect helper
             */

      }, {
        key: "inspect",
        value: function value() {
          return Object.assign(new Error(this.message), this);
        }
        /*!
            * add message
            */

      }, {
        key: "addError",
        value: function value(t, e) {
          this.errors[t] = e, this.message = this._message + ": " + d(this);
        }
      }]) && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), u;
    }(h);
    /*!
     * ignore
     */


    function d(t) {
      for (var e, r = Object.keys(t.errors || {}), n = r.length, i = [], o = 0; o < n; ++o) {
        e = r[o], t !== t.errors[e] && i.push(e + ": " + t.errors[e].message);
      }

      return i.join(", ");
    }
    /*!
     * Module exports
     */


    c.inspect.custom && (
    /*!
      * Avoid Node deprecation warning DEP0079
      */
    l.prototype[c.inspect.custom] = l.prototype.inspect)
    /*!
     * Helper for JSON.stringify
     * Ensure `name` and `message` show up in toJSON output re: gh-9847
     */
    , Object.defineProperty(l.prototype, "toJSON", {
      enumerable: !1,
      writable: !1,
      configurable: !0,
      value: function value() {
        return Object.assign({}, this, {
          name: this.name,
          message: this.message
        });
      }
    }), Object.defineProperty(l.prototype, "name", {
      value: "ValidationError"
    }), t.exports = l;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = r(8),
        f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t) {
        var e;
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        var r = t.message;
        r || (r = h.messages.general.default);
        var n = c(r, t);
        return e = a.call(this, n), t = Object.assign({}, t, {
          message: n
        }), e.properties = t, e.kind = t.type, e.path = t.path, e.value = t.value, e.reason = t.reason, e;
      }
      /*!
         * toString helper
         * TODO remove? This defaults to `${this.name}: ${this.message}`
         */


      return e = u, (r = [{
        key: "toString",
        value: function value() {
          return this.message;
        }
        /*!
             * Ensure `name` and `message` show up in toJSON output re: gh-9296
             */

      }, {
        key: "toJSON",
        value: function value() {
          return Object.assign({
            name: this.name,
            message: this.message
          }, this);
        }
      }]) && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), u;
    }(h);
    /*!
     * Formats error messages
     */


    function c(t, e) {
      if ("function" == typeof t) return t(e);

      for (var r = 0, n = Object.keys(e); r < n.length; r++) {
        var i = n[r];
        "message" !== i && (t = t.replace("{" + i.toUpperCase() + "}", e[i]));
      }

      return t;
    }
    /*!
     * exports
     */


    Object.defineProperty(f.prototype, "name", {
      value: "ValidatorError"
    }),
    /*!
     * The object used to define this validator. Not enumerable to hide
     * it from `require('util').inspect()` output re: gh-3925
     */
    Object.defineProperty(f.prototype, "properties", {
      enumerable: !1,
      writable: !0,
      value: null
    }), f.prototype.formatMessage = c, t.exports = f;
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    t.exports = function (t) {
      if (Array.isArray(t)) {
        if (!t.every(function (t) {
          return "number" == typeof t || "string" == typeof t;
        })) throw new Error("$type array values must be strings or numbers");
        return t;
      }

      if ("number" != typeof t && "string" != typeof t) throw new Error("$type parameter must be number, string, or array of numbers and strings");
      return t;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t, e) {
        var r;
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        var n = Array.isArray(e) ? "array" : "primitive value";
        return (r = a.call(this, "Tried to set nested object field `" + t + "` to ".concat(n, " `") + e + "`")).path = t, r;
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "ObjectExpectedError"
    }), t.exports = h;
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t) {
      var e = {
        _id: {
          auto: !0
        }
      };
      e._id[t.options.typeKey] = "ObjectId", t.add(e);
    };
  }, function (t, e, r) {
    "use strict";

    t.exports =
    /*!
     * ignore
     */
    function (t, e) {
      if (null == t) return null;
      if ("boolean" == typeof t) return e;
      if ("boolean" == typeof t[e]) return t[e] ? e : null;
      if (!(e in t)) return e;
      return t[e];
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(57),
        i = r(54);
    /*!
     * Register hooks for this model
     *
     * @param {Model} model
     * @param {Schema} schema
     */

    function o(t, e, r) {
      var s = {
        useErrorHandlers: !0,
        numCallbackParams: 1,
        nullResultByDefault: !0,
        contextParameter: !0
      },
          a = (r = r || {}).decorateDoc ? t : t.prototype;
      t.$appliedHooks = !0;

      for (var u = 0, h = Object.keys(e.paths); u < h.length; u++) {
        var f = h[u],
            c = e.paths[f],
            l = null;
        if (c.$isSingleNested) l = c.caster;else {
          if (!c.$isMongooseDocumentArray) continue;
          l = c.Constructor;
        }
        if (!l.$appliedHooks && (o(l, c.schema, r), null != l.discriminators)) for (var d = 0, p = Object.keys(l.discriminators); d < p.length; d++) {
          var y = p[d];
          o(l.discriminators[y], l.discriminators[y].schema, r);
        }
      }

      var m = e.s.hooks.filter(function (t) {
        return "updateOne" === t.name || "deleteOne" === t.name ? !!t.document : "remove" === t.name || "init" === t.name ? null == t.document || !!t.document : null == t.query && null == t.document || !1 !== t.document;
      }).filter(function (t) {
        return !e.methods[t.name] || !t.fn[n.builtInMiddleware];
      });
      t._middleware = m, a.$__originalValidate = a.$__originalValidate || a.$__validate;

      for (var b = 0, v = ["save", "validate", "remove", "deleteOne"]; b < v.length; b++) {
        var g = v[b],
            w = "validate" === g ? "$__originalValidate" : "$__".concat(g),
            _ = m.createWrapper(g, a[w], null, s);

        a["$__".concat(g)] = _;
      }

      a.$__init = m.createWrapperSync("init", a.$__init, null, s);

      for (var M = Object.keys(e.methods), S = Object.assign({}, s, {
        checkForPromise: !0
      }), O = function O() {
        var e = E[A];
        if (!m.hasHooks(e)) return "continue";
        var r = a[e];
        a[e] = function () {
          var r = this,
              n = Array.prototype.slice.call(arguments),
              o = n.slice(-1).pop(),
              s = "function" == typeof o ? n.slice(0, n.length - 1) : n;
          return i(o, function (t) {
            return r["$__".concat(e)].apply(r, s.concat([t]));
          }, t.events);
        }, a["$__".concat(e)] = m.createWrapper(e, r, null, S);
      }, A = 0, E = M; A < E.length; A++) {
        O();
      }
    }
    /*!
     * ignore
     */


    t.exports = o,
    /*!
     * ignore
     */
    o.middlewareFunctions = ["deleteOne", "save", "validate", "remove", "updateOne", "init"];
  }, function (t, e, r) {
    "use strict";

    var n = r(21);
    /*!
     * Given a value, cast it to a string, or throw a `CastError` if the value
     * cannot be casted. `null` and `undefined` are considered valid.
     *
     * @param {Any} value
     * @param {String} [path] optional the path to set on the CastError
     * @return {string|null|undefined}
     * @throws {CastError}
     * @api private
     */

    t.exports = function (t, e) {
      if (null == t) return t;
      if (t._id && "string" == typeof t._id) return t._id;
      if (t.toString && t.toString !== Object.prototype.toString && !Array.isArray(t)) return t.toString();
      throw new n("string", t, e);
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module requirements.
     */

    var n = r(8),
        i = r(331),
        o = r(10),
        s = r(332),
        a = r(170),
        u = r(4),
        h = o.CastError;

    function f(t, e) {
      o.call(this, t, e, "Number");
    }
    /*!
     * ignore
     */


    function c(t) {
      return this.cast(t);
    }

    f.get = o.get, f.set = o.set,
    /*!
     * ignore
     */
    f._cast = s, f.cast = function (t) {
      return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
    },
    /*!
     * ignore
     */
    f._defaultCaster = function (t) {
      if ("number" != typeof t) throw new Error();
      return t;
    }, f.schemaName = "Number", f.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    f.prototype = Object.create(o.prototype), f.prototype.constructor = f, f.prototype.OptionsConstructor = i,
    /*!
     * ignore
     */
    f._checkRequired = function (t) {
      return "number" == typeof t || t instanceof Number;
    }, f.checkRequired = o.checkRequired, f.prototype.checkRequired = function (t, e) {
      return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : f.checkRequired())(t);
    }, f.prototype.min = function (t, e) {
      if (this.minValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.minValidator;
      }, this)), null != t) {
        var r = e || n.messages.Number.min;
        r = r.replace(/{MIN}/, t), this.validators.push({
          validator: this.minValidator = function (e) {
            return null == e || e >= t;
          },
          message: r,
          type: "min",
          min: t
        });
      }

      return this;
    }, f.prototype.max = function (t, e) {
      if (this.maxValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.maxValidator;
      }, this)), null != t) {
        var r = e || n.messages.Number.max;
        r = r.replace(/{MAX}/, t), this.validators.push({
          validator: this.maxValidator = function (e) {
            return null == e || e <= t;
          },
          message: r,
          type: "max",
          max: t
        });
      }

      return this;
    }, f.prototype.enum = function (t, e) {
      if (this.enumValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.enumValidator;
      }, this)), !Array.isArray(t)) {
        var r = u.isPOJO(t) && null != t.values;
        r ? (e = t.message, t = t.values) : "number" == typeof t && (t = Array.prototype.slice.call(arguments), e = null), u.isPOJO(t) && (t = Object.values(t)), e = e || n.messages.Number.enum;
      }

      return e = null == e ? n.messages.Number.enum : e, this.enumValidator = function (e) {
        return null == e || -1 !== t.indexOf(e);
      }, this.validators.push({
        validator: this.enumValidator,
        message: e,
        type: "enum",
        enumValues: t
      }), this;
    }, f.prototype.cast = function (t, e, r) {
      if (o._isRef(this, t, e, r)) {
        if ("number" == typeof t) return t;
        if (null == t || u.isNonBuiltinObject(t)) return this._castRef(t, e, r);
      }

      var n,
          i = t && void 0 !== t._id ? t._id : t;
      n = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();

      try {
        return n(i);
      } catch (t) {
        throw new h("Number", i, this.path, t, this);
      }
    }, f.prototype.$conditionalHandlers = u.options(o.prototype.$conditionalHandlers, {
      $bitsAllClear: a,
      $bitsAnyClear: a,
      $bitsAllSet: a,
      $bitsAnySet: a,
      $gt: c,
      $gte: c,
      $lt: c,
      $lte: c,
      $mod: function $mod(t) {
        var e = this;
        return Array.isArray(t) ? t.map(function (t) {
          return e.cast(t);
        }) : [this.cast(t)];
      }
    }), f.prototype.castForQuery = function (t, e) {
      var r;

      if (2 === arguments.length) {
        if (!(r = this.$conditionalHandlers[t])) throw new h("number", e, this.path, null, this);
        return r.call(this, e);
      }

      return e = this._castForQuery(t);
    },
    /*!
     * Module exports.
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * Module requirements.
       */
      var n = r(21);
      /*!
       * ignore
       */

      /*!
       * ignore
       */

      function i(t, e) {
        var r = Number(e);
        if (isNaN(r)) throw new n("number", e, t);
        return r;
      }

      t.exports = function (t) {
        var r = this;
        return Array.isArray(t) ? t.map(function (t) {
          return i(r.path, t);
        }) : e.isBuffer(t) ? t : i(r.path, t);
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    var n = r(172);
    /*!
    * returns discriminator by discriminatorMapping.value
    *
    * @param {Schema} schema
    * @param {string} value
    */

    t.exports = function (t, e) {
      if (null == t || null == t.discriminators) return null;

      for (var r = 0, i = Object.keys(t.discriminators); r < i.length; r++) {
        var o = i[r],
            s = t.discriminators[o];
        if (null != s.discriminatorMapping && n(s.discriminatorMapping.value, e)) return s;
      }

      return null;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(18);

    t.exports = function (t, e) {
      return "string" == typeof t && "string" == typeof e || "number" == typeof t && "number" == typeof e ? t === e : t instanceof n && e instanceof n && t.toString() === e.toString();
    };
  }, function (t, e, r) {
    "use strict";

    var n = new Set(["$ref", "$id", "$db"]);

    t.exports = function (t) {
      return t.startsWith("$") && !n.has(t);
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module requirements.
     */

    var n = r(58).castArraysOfNumbers,
        i = r(58).castToNumber;

    function o(t, e) {
      switch (t.$geometry.type) {
        case "Polygon":
        case "LineString":
        case "Point":
          n(t.$geometry.coordinates, e);
      }

      return s(e, t), t;
    }

    function s(t, e) {
      e.$maxDistance && (e.$maxDistance = i.call(t, e.$maxDistance)), e.$minDistance && (e.$minDistance = i.call(t, e.$minDistance));
    }
    /*!
     * ignore
     */


    e.cast$geoIntersects = function (t) {
      if (!t.$geometry) return;
      return o(t, this), t;
    }, e.cast$near = function (t) {
      var e = r(92);
      if (Array.isArray(t)) return n(t, this), t;
      if (s(this, t), t && t.$geometry) return o(t, this);
      if (!Array.isArray(t)) throw new TypeError("$near must be either an array or an object with a $geometry property");
      return e.prototype.castForQuery.call(this, t);
    }, e.cast$within = function (t) {
      var e = this;

      if (s(this, t), t.$box || t.$polygon) {
        var r = t.$box ? "$box" : "$polygon";
        t[r].forEach(function (t) {
          if (!Array.isArray(t)) throw new TypeError("Invalid $within $box argument. Expected an array, received " + t);
          t.forEach(function (r, n) {
            t[n] = i.call(e, r);
          });
        });
      } else if (t.$center || t.$centerSphere) {
        var n = t.$center ? "$center" : "$centerSphere";
        t[n].forEach(function (r, o) {
          Array.isArray(r) ? r.forEach(function (t, n) {
            r[n] = i.call(e, t);
          }) : t[n][o] = i.call(e, r);
        });
      } else t.$geometry && o(t, this);

      return t;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t, e, r) {
      return e in t ? Object.defineProperty(t, e, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = r, t;
    }

    var i = r(14),
        o = r(93),
        s = r(1).arrayAtomicsSymbol,
        a = r(1).arrayAtomicsBackupSymbol,
        u = r(1).arrayParentSymbol,
        h = r(1).arrayPathSymbol,
        f = r(1).arraySchemaSymbol;
    /*!
     * Module exports.
     */

    t.exports = function (t, e, r, c) {
      var l, d;

      if (Array.isArray(t)) {
        var p = t.length;
        if (0 === p) d = new Array();else if (1 === p) (d = new Array(1))[0] = t[0];else if (p < 1e4) (d = new Array()).push.apply(d, t);else {
          d = new Array();

          for (var y = 0; y < p; ++y) {
            d.push(t[y]);
          }
        }
      } else d = [];

      var m = (n(l = {}, s, {}), n(l, a, void 0), n(l, h, e), n(l, f, c), n(l, u, void 0), n(l, "isMongooseArray", !0), n(l, "isMongooseArrayProxy", !0), n(l, "__array", d), l);
      null != t[s] && (m[s] = t[s]), null != r && r instanceof i && (m[u] = r, m[f] = c || r.schema.path(e));
      var b = new Proxy(d, {
        get: function get(t, e) {
          return m.hasOwnProperty(e) ? m[e] : o.hasOwnProperty(e) ? o[e] : d[e];
        },
        set: function set(t, e, r) {
          if ("string" == typeof e && /^\d+$/.test(e)) {
            var n = o._cast.call(b, r, e);

            d[e] = n, o._markModified.call(b, e);
          } else m.hasOwnProperty(e) ? m[e] = r : d[e] = r;

          return !0;
        }
      });
      return b;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    t.exports = function (t, e, r) {
      var n = (r = r || {}).skipDocArrays,
          i = 0;
      if (!t) return i;

      for (var o = 0, s = Object.keys(t.$__.activePaths.states.modify); o < s.length; o++) {
        var a = s[o];

        if (n) {
          var u = t.$__schema.path(a);
          if (u && u.$isMongooseDocumentArray) continue;
        }

        if (a.startsWith(e + ".") && (delete t.$__.activePaths.states.modify[a], ++i, t.$isSubdocument)) {
          var h = t.ownerDocument(),
              f = t.$__fullPath(a);
          delete h.$__.activePaths.states.modify[f];
        }
      }

      return i;
    };
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * Module dependencies.
       */
      var n = r(24).get().Binary,
          i = r(4);

      function o(t, r, n) {
        var s,
            u,
            h,
            f,
            c = t;
        return null == t && (c = 0), Array.isArray(r) ? (u = r[0], h = r[1]) : s = r, f = "number" == typeof c || c instanceof Number ? e.alloc(c) : e.from(c, s, n), i.decorate(f, o.mixin), f.isMongooseBuffer = !0, f[o.pathSymbol] = u, f[a] = h, f._subtype = 0, f;
      }

      var s = Symbol.for("mongoose#Buffer#_path"),
          a = Symbol.for("mongoose#Buffer#_parent");
      o.pathSymbol = s,
      /*!
       * Inherit from Buffer.
       */
      o.mixin = {
        _subtype: void 0,
        _markModified: function _markModified() {
          var t = this[a];
          return t && t.markModified(this[o.pathSymbol]), this;
        },
        write: function write() {
          var t = e.prototype.write.apply(this, arguments);
          return t > 0 && this._markModified(), t;
        },
        copy: function copy(t) {
          var r = e.prototype.copy.apply(this, arguments);
          return t && t.isMongooseBuffer && t._markModified(), r;
        }
      },
      /*!
       * Compile other Buffer methods marking this buffer as modified.
       */
      "writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 writeFloat writeDouble fill utf8Write binaryWrite asciiWrite set writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE writeInt16LE writeInt16BE writeInt32LE writeInt32BE writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE".split(" ").forEach(function (t) {
        e.prototype[t] && (o.mixin[t] = function () {
          var r = e.prototype[t].apply(this, arguments);
          return this._markModified(), r;
        });
      }), o.mixin.toObject = function (t) {
        var r = "number" == typeof t ? t : this._subtype || 0;
        return new n(e.from(this), r);
      }, o.mixin.$toObject = o.mixin.toObject, o.mixin.toBSON = function () {
        return new n(this, this._subtype || 0);
      }, o.mixin.equals = function (t) {
        if (!e.isBuffer(t)) return !1;
        if (this.length !== t.length) return !1;

        for (var r = 0; r < this.length; ++r) {
          if (this[r] !== t[r]) return !1;
        }

        return !0;
      }, o.mixin.subtype = function (t) {
        if ("number" != typeof t) throw new TypeError("Invalid subtype. Expected a number");
        this._subtype !== t && this._markModified(), this._subtype = t;
      },
      /*!
       * Module exports.
       */
      o.Binary = n, t.exports = o;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    var n = r(24).get().ObjectId,
        i = r(36);

    t.exports = function (t) {
      if (null == t) return t;
      if (t instanceof n) return t;

      if (t._id) {
        if (t._id instanceof n) return t._id;
        if (t._id.toString instanceof Function) return new n(t._id.toString());
      }

      if (t.toString instanceof Function) return new n(t.toString());
      i.ok(!1);
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return o(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n9 = 0,
              i = function i() {};

          return {
            s: i,
            n: function n() {
              return _n9 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n9++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: i
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function o(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    function s(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function a() {
      return (a = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, r) {
        var n = u(t, e);

        if (n) {
          var i = Object.getOwnPropertyDescriptor(n, e);
          return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value;
        }
      }).apply(this, arguments);
    }

    function u(t, e) {
      for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = p(t));) {
        ;
      }

      return t;
    }

    function h(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function f(t) {
      var e = "function" == typeof Map ? new Map() : void 0;
      return (f = function f(t) {
        if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t;
        var r;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");

        if (void 0 !== e) {
          if (e.has(t)) return e.get(t);
          e.set(t, n);
        }

        function n() {
          return c(t, arguments, p(this).constructor);
        }

        return n.prototype = Object.create(t.prototype, {
          constructor: {
            value: n,
            enumerable: !1,
            writable: !0,
            configurable: !0
          }
        }), d(n, t);
      })(t);
    }

    function c(t, e, r) {
      return (c = l() ? Reflect.construct : function (t, e, r) {
        var n = [null];
        n.push.apply(n, e);
        var i = new (Function.bind.apply(t, n))();
        return r && d(i, r.prototype), i;
      }).apply(null, arguments);
    }

    function l() {
      if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
      if (Reflect.construct.sham) return !1;
      if ("function" == typeof Proxy) return !0;

      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }

    function d(t, e) {
      return (d = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function p(t) {
      return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var y = r(46),
        m = r(18),
        b = r(44),
        v = r(4).deepEqual,
        g = r(6),
        w = r(37),
        _ = r(180),
        M = r(9),
        S = r(86),
        O = r(1).populateModelSymbol,
        A = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && d(t, e);
      }(c, t);
      var e,
          r,
          n,
          o,
          u,
          f = (e = c, r = l(), function () {
        var t,
            n = p(e);

        if (r) {
          var i = p(this).constructor;
          t = Reflect.construct(n, arguments, i);
        } else t = n.apply(this, arguments);

        return h(this, t);
      });

      function c(t, e, r, n) {
        var i;
        return function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, c), "Object" === w(t) && (t = Object.keys(t).reduce(function (e, r) {
          return e.concat([[r, t[r]]]);
        }, [])), (i = f.call(this, t)).$__parent = null != r && null != r.$__ ? r : null, i.$__path = e, i.$__schemaType = null == n ? new y(e) : n, i.$__runDeferred(), i;
      }

      return n = c, (o = [{
        key: "$init",
        value: function value(t, e) {
          E(t), a(p(c.prototype), "set", this).call(this, t, e), null != e && e.$isSingleNested && (e.$basePath = this.$__path + "." + t);
        }
      }, {
        key: "$__set",
        value: function value(t, e) {
          a(p(c.prototype), "set", this).call(this, t, e);
        }
      }, {
        key: "get",
        value: function value(t, e) {
          return t instanceof m && (t = t.toString()), !1 === (e = e || {}).getters ? a(p(c.prototype), "get", this).call(this, t) : this.$__schemaType.applyGetters(a(p(c.prototype), "get", this).call(this, t), this.$__parent);
        }
      }, {
        key: "set",
        value: function value(t, e) {
          if (t instanceof m && (t = t.toString()), E(t), e = _(e), null == this.$__schemaType) return this.$__deferred = this.$__deferred || [], void this.$__deferred.push({
            key: t,
            value: e
          });
          var r = this.$__path + "." + t,
              n = null != this.$__parent && this.$__parent.$__ ? this.$__parent.$populated(r) || this.$__parent.$populated(this.$__path) : null,
              i = this.get(t);
          if (null != n) null == e.$__ && (e = new n.options[O](e)), e.$__.wasPopulated = !0;else try {
            e = this.$__schemaType.applySetters(e, this.$__parent, !1, this.get(t), {
              path: r
            });
          } catch (t) {
            if (null != this.$__parent && null != this.$__parent.$__) return void this.$__parent.invalidate(r, t);
            throw t;
          }
          a(p(c.prototype), "set", this).call(this, t, e), null != e && e.$isSingleNested && (e.$basePath = this.$__path + "." + t);
          var o = this.$__parent;
          null == o || null == o.$__ || v(e, i) || o.markModified(this.$__path + "." + t);
        }
      }, {
        key: "clear",
        value: function value() {
          a(p(c.prototype), "clear", this).call(this);
          var t = this.$__parent;
          null != t && t.markModified(this.$__path);
        }
      }, {
        key: "delete",
        value: function value(t) {
          t instanceof m && (t = t.toString()), this.set(t, void 0), a(p(c.prototype), "delete", this).call(this, t);
        }
      }, {
        key: "toBSON",
        value: function value() {
          return new Map(this);
        }
      }, {
        key: "toObject",
        value: function value(t) {
          if (g(t, "flattenMaps")) {
            var e,
                r = {},
                n = i(this.keys());

            try {
              for (n.s(); !(e = n.n()).done;) {
                var o = e.value;
                r[o] = b(this.get(o), t);
              }
            } catch (t) {
              n.e(t);
            } finally {
              n.f();
            }

            return r;
          }

          return new Map(this);
        }
      }, {
        key: "$toObject",
        value: function value() {
          return this.constructor.prototype.toObject.apply(this, arguments);
        }
      }, {
        key: "toJSON",
        value: function value(t) {
          if (g(t, "flattenMaps", !0)) {
            var e,
                r = {},
                n = i(this.keys());

            try {
              for (n.s(); !(e = n.n()).done;) {
                var o = e.value;
                r[o] = b(this.get(o), t);
              }
            } catch (t) {
              n.e(t);
            } finally {
              n.f();
            }

            return r;
          }

          return new Map(this);
        }
      }, {
        key: "inspect",
        value: function value() {
          return new Map(this);
        }
      }, {
        key: "$__runDeferred",
        value: function value() {
          if (this.$__deferred) {
            var t,
                e = i(this.$__deferred);

            try {
              for (e.s(); !(t = e.n()).done;) {
                var r = t.value;
                this.set(r.key, r.value);
              }
            } catch (t) {
              e.e(t);
            } finally {
              e.f();
            }

            this.$__deferred = null;
          }
        }
      }]) && s(n.prototype, o), u && s(n, u), Object.defineProperty(n, "prototype", {
        writable: !1
      }), c;
    }(f(Map));
    /*!
     * Since maps are stored as objects under the hood, keys must be strings
     * and can't contain any invalid characters
     */


    function E(t) {
      var e = n(t);
      if ("string" !== e) throw new TypeError("Mongoose maps only support string keys, got ".concat(e));
      if (t.startsWith("$")) throw new Error('Mongoose maps do not support keys that start with "$", got "'.concat(t, '"'));
      if (t.includes(".")) throw new Error('Mongoose maps do not support keys that contain ".", got "'.concat(t, '"'));
      if (S.has(t)) throw new Error('Mongoose maps do not support reserved key name "'.concat(t, '"'));
    }

    M.inspect.custom && Object.defineProperty(A.prototype, M.inspect.custom, {
      enumerable: !1,
      writable: !1,
      configurable: !1,
      value: A.prototype.inspect
    }), Object.defineProperty(A.prototype, "$__set", {
      enumerable: !1,
      writable: !0,
      configurable: !1
    }), Object.defineProperty(A.prototype, "$__parent", {
      enumerable: !1,
      writable: !0,
      configurable: !1
    }), Object.defineProperty(A.prototype, "$__path", {
      enumerable: !1,
      writable: !0,
      configurable: !1
    }), Object.defineProperty(A.prototype, "$__schemaType", {
      enumerable: !1,
      writable: !0,
      configurable: !1
    }), Object.defineProperty(A.prototype, "$isMongooseMap", {
      enumerable: !1,
      writable: !1,
      configurable: !1,
      value: !0
    }), Object.defineProperty(A.prototype, "$__deferredCalls", {
      enumerable: !1,
      writable: !1,
      configurable: !1,
      value: !0
    }), t.exports = A;
  }, function (t, e, r) {
    "use strict";

    var n = r(4);

    t.exports = function (t) {
      return n.isPOJO(t) && null != t.$__ && null != t._doc ? t._doc : t;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n10 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n10 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n10++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o = r(46),
        s = r(95).defineKey,
        a = r(6),
        u = r(4),
        h = {
      toJSON: !0,
      toObject: !0,
      _id: !0,
      id: !0
    };
    /*!
     * ignore
     */

    t.exports = function (t, e, r, i, f) {
      if (!r || !r.instanceOfSchema) throw new Error("You must pass a valid discriminator Schema");
      if (t.schema.discriminatorMapping && !t.schema.discriminatorMapping.isRoot) throw new Error('Discriminator "' + e + '" can only be a discriminator of the root model');

      if (f) {
        var c = a(t.base, "options.applyPluginsToDiscriminators", !1);

        t.base._applyPlugins(r, {
          skipTopLevel: !c
        });
      }

      var l = t.schema.options.discriminatorKey,
          d = t.schema.path(l);
      if (null != d) u.hasUserDefinedProperty(d.options, "select") || (d.options.select = !0), d.options.$skipDiscriminatorCheck = !0;else {
        var p = {};
        p[l] = {
          default: void 0,
          select: !0,
          $skipDiscriminatorCheck: !0
        }, p[l][t.schema.options.typeKey] = String, t.schema.add(p), s({
          prop: l,
          prototype: t.prototype,
          options: t.schema.options
        });
      }
      if (r.path(l) && !0 !== r.path(l).options.$skipDiscriminatorCheck) throw new Error('Discriminator "' + e + '" cannot have field with name "' + l + '"');
      var y = e;
      if (("string" == typeof i && i.length || null != i) && (y = i), function (e, r) {
        e._baseSchema = r, r.paths._id && r.paths._id.options && !r.paths._id.options.auto && e.remove("_id");

        for (var i = [], s = 0, a = Object.keys(r.paths); s < a.length; s++) {
          var f = a[s];
          if (e.nested[f]) i.push(f);else if (-1 !== f.indexOf(".")) {
            var c,
                p = "",
                m = n(f.split(".").slice(0, -1));

            try {
              for (m.s(); !(c = m.n()).done;) {
                var b = c.value;
                p += (p.length ? "." : "") + b, (e.paths[p] instanceof o || e.singleNestedPaths[p] instanceof o) && i.push(f);
              }
            } catch (t) {
              m.e(t);
            } finally {
              m.f();
            }
          }
        }

        u.merge(e, r, {
          isDiscriminatorSchemaMerge: !0,
          omit: {
            discriminators: !0,
            base: !0
          },
          omitNested: i.reduce(function (t, e) {
            return t["tree." + e] = !0, t;
          }, {})
        });

        for (var v = 0, g = i; v < g.length; v++) {
          var w = g[v];
          delete e.paths[w];
        }

        e.childSchemas.forEach(function (t) {
          t.model.prototype.$__setSchema(t.schema);
        });
        var _ = {};
        _[l] = {
          default: y,
          select: !0,
          set: function set(t) {
            if (t === y || Array.isArray(y) && u.deepEqual(t, y)) return y;
            throw new Error("Can't set discriminator key \"" + l + '"');
          },
          $skipDiscriminatorCheck: !0
        }, _[l][e.options.typeKey] = d ? d.options[e.options.typeKey] : String, e.add(_), e.discriminatorMapping = {
          key: l,
          value: y,
          isRoot: !1
        }, r.options.collection && (e.options.collection = r.options.collection);
        var M = e.options.toJSON,
            S = e.options.toObject,
            O = e.options._id,
            A = e.options.id,
            E = Object.keys(e.options);
        e.options.discriminatorKey = r.options.discriminatorKey;

        for (var x = 0, k = E; x < k.length; x++) {
          var j = k[x];

          if (!h[j]) {
            if ("pluralization" === j && 1 == e.options[j] && null == r.options[j]) continue;
            if (!u.deepEqual(e.options[j], r.options[j])) throw new Error("Can't customize discriminator option " + j + " (can only modify " + Object.keys(h).join(", ") + ")");
          }
        }

        e.options = u.clone(r.options), M && (e.options.toJSON = M), S && (e.options.toObject = S), void 0 !== O && (e.options._id = O), e.options.id = A, e.s.hooks = t.schema.s.hooks.merge(e.s.hooks), e.plugins = Array.prototype.slice.call(r.plugins), e.callQueue = r.callQueue.concat(e.callQueue), delete e._requiredpaths;
      }(r, t.schema), t.discriminators || (t.discriminators = {}), t.schema.discriminatorMapping || (t.schema.discriminatorMapping = {
        key: l,
        value: null,
        isRoot: !0
      }), t.schema.discriminators || (t.schema.discriminators = {}), t.schema.discriminators[e] = r, t.discriminators[e]) throw new Error('Discriminator with name "' + e + '" already exists');
      return r;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(165);

    t.exports = function (t, e) {
      return null == e || null == e._id || (t = t.clone(), e._id ? t.paths._id || (n(t), t.options._id = !0) : (t.remove("_id"), t.options._id = !1)), t;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(59);
    /*!
     * Find the correct constructor, taking into account discriminators
     */

    t.exports = function (t, e) {
      var r = t.schema.options.discriminatorKey;
      if (null != e && t.discriminators && null != e[r]) if (t.discriminators[e[r]]) t = t.discriminators[e[r]];else {
        var i = n(t.discriminators, e[r]);
        i && (t = i);
      }
      return t;
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = r(185);
  }, function (t, e, r) {
    "use strict";

    (function (n) {
      function i(t) {
        return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      function o(t, e) {
        for (var r = 0; r < e.length; r++) {
          var n = e[r];
          n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
        }
      }

      function s(t, e) {
        return (s = Object.setPrototypeOf || function (t, e) {
          return t.__proto__ = e, t;
        })(t, e);
      }

      function a(t) {
        var e = function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;

          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
          } catch (t) {
            return !1;
          }
        }();

        return function () {
          var r,
              n = h(t);

          if (e) {
            var i = h(this).constructor;
            r = Reflect.construct(n, arguments, i);
          } else r = n.apply(this, arguments);

          return u(this, r);
        };
      }

      function u(t, e) {
        if (e && ("object" === i(e) || "function" == typeof e)) return e;
        if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
        return function (t) {
          if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t;
        }(t);
      }

      function h(t) {
        return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        })(t);
      }

      r(24).set(r(188));
      var f = r(292),
          c = r(157);
      f.setBrowser(!0), Object.defineProperty(e, "Promise", {
        get: function get() {
          return c.get();
        },
        set: function set(t) {
          c.set(t);
        }
      }), e.PromiseProvider = c, e.Error = r(8), e.Schema = r(89), e.Types = r(60), e.VirtualType = r(90), e.SchemaType = r(10), e.utils = r(4), e.Document = f(), e.model = function (t, r) {
        var n = function (t) {
          !function (t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
            Object.defineProperty(t, "prototype", {
              value: Object.create(e && e.prototype, {
                constructor: {
                  value: t,
                  writable: !0,
                  configurable: !0
                }
              }),
              writable: !1
            }), e && s(t, e);
          }(h, t);
          var e,
              n,
              i,
              u = a(h);

          function h(t, e) {
            return function (t, e) {
              if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
            }(this, h), u.call(this, t, r, e);
          }

          return e = h, n && o(e.prototype, n), i && o(e, i), Object.defineProperty(e, "prototype", {
            writable: !1
          }), e;
        }(e.Document);

        return n.modelName = t, n;
      },
      /*!
       * Module exports.
       */
      "undefined" != typeof window && (window.mongoose = t.exports, window.Buffer = n);
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    e.byteLength = function (t) {
      var e = h(t),
          r = e[0],
          n = e[1];
      return 3 * (r + n) / 4 - n;
    }, e.toByteArray = function (t) {
      var e,
          r,
          n = h(t),
          s = n[0],
          a = n[1],
          u = new o(function (t, e, r) {
        return 3 * (e + r) / 4 - r;
      }(0, s, a)),
          f = 0,
          c = a > 0 ? s - 4 : s;

      for (r = 0; r < c; r += 4) {
        e = i[t.charCodeAt(r)] << 18 | i[t.charCodeAt(r + 1)] << 12 | i[t.charCodeAt(r + 2)] << 6 | i[t.charCodeAt(r + 3)], u[f++] = e >> 16 & 255, u[f++] = e >> 8 & 255, u[f++] = 255 & e;
      }

      2 === a && (e = i[t.charCodeAt(r)] << 2 | i[t.charCodeAt(r + 1)] >> 4, u[f++] = 255 & e);
      1 === a && (e = i[t.charCodeAt(r)] << 10 | i[t.charCodeAt(r + 1)] << 4 | i[t.charCodeAt(r + 2)] >> 2, u[f++] = e >> 8 & 255, u[f++] = 255 & e);
      return u;
    }, e.fromByteArray = function (t) {
      for (var e, r = t.length, i = r % 3, o = [], s = 0, a = r - i; s < a; s += 16383) {
        o.push(f(t, s, s + 16383 > a ? a : s + 16383));
      }

      1 === i ? (e = t[r - 1], o.push(n[e >> 2] + n[e << 4 & 63] + "==")) : 2 === i && (e = (t[r - 2] << 8) + t[r - 1], o.push(n[e >> 10] + n[e >> 4 & 63] + n[e << 2 & 63] + "="));
      return o.join("");
    };

    for (var n = [], i = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, u = s.length; a < u; ++a) {
      n[a] = s[a], i[s.charCodeAt(a)] = a;
    }

    function h(t) {
      var e = t.length;
      if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
      var r = t.indexOf("=");
      return -1 === r && (r = e), [r, r === e ? 0 : 4 - r % 4];
    }

    function f(t, e, r) {
      for (var i, o, s = [], a = e; a < r; a += 3) {
        i = (t[a] << 16 & 16711680) + (t[a + 1] << 8 & 65280) + (255 & t[a + 2]), s.push(n[(o = i) >> 18 & 63] + n[o >> 12 & 63] + n[o >> 6 & 63] + n[63 & o]);
      }

      return s.join("");
    }

    i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
  }, function (t, e) {
    /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
    e.read = function (t, e, r, n, i) {
      var o,
          s,
          a = 8 * i - n - 1,
          u = (1 << a) - 1,
          h = u >> 1,
          f = -7,
          c = r ? i - 1 : 0,
          l = r ? -1 : 1,
          d = t[e + c];

      for (c += l, o = d & (1 << -f) - 1, d >>= -f, f += a; f > 0; o = 256 * o + t[e + c], c += l, f -= 8) {
        ;
      }

      for (s = o & (1 << -f) - 1, o >>= -f, f += n; f > 0; s = 256 * s + t[e + c], c += l, f -= 8) {
        ;
      }

      if (0 === o) o = 1 - h;else {
        if (o === u) return s ? NaN : 1 / 0 * (d ? -1 : 1);
        s += Math.pow(2, n), o -= h;
      }
      return (d ? -1 : 1) * s * Math.pow(2, o - n);
    }, e.write = function (t, e, r, n, i, o) {
      var s,
          a,
          u,
          h = 8 * o - i - 1,
          f = (1 << h) - 1,
          c = f >> 1,
          l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          d = n ? 0 : o - 1,
          p = n ? 1 : -1,
          y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;

      for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = f) : (s = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (e += s + c >= 1 ? l / u : l * Math.pow(2, 1 - c)) * u >= 2 && (s++, u /= 2), s + c >= f ? (a = 0, s = f) : s + c >= 1 ? (a = (e * u - 1) * Math.pow(2, i), s += c) : (a = e * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; t[r + d] = 255 & a, d += p, a /= 256, i -= 8) {
        ;
      }

      for (s = s << i | a, h += i; h > 0; t[r + d] = 255 & s, d += p, s /= 256, h -= 8) {
        ;
      }

      t[r + d - p] |= 128 * y;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module exports.
     */

    e.Binary = r(189), e.Collection = function () {
      throw new Error("Cannot create a collection from browser library");
    }, e.getConnection = function () {
      return function () {
        throw new Error("Cannot create a connection from browser library");
      };
    }, e.Decimal128 = r(289), e.ObjectId = r(290), e.ReadPreference = r(291);
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(61).Binary;
    /*!
     * Module exports.
     */

    t.exports = n;
  }, function (t, e, r) {
    "use strict";

    e.randomBytes = e.rng = e.pseudoRandomBytes = e.prng = r(28), e.createHash = e.Hash = r(39), e.createHmac = e.Hmac = r(112);
    var n = r(216),
        i = Object.keys(n),
        o = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(i);

    e.getHashes = function () {
      return o;
    };

    var s = r(115);
    e.pbkdf2 = s.pbkdf2, e.pbkdf2Sync = s.pbkdf2Sync;
    var a = r(218);
    e.Cipher = a.Cipher, e.createCipher = a.createCipher, e.Cipheriv = a.Cipheriv, e.createCipheriv = a.createCipheriv, e.Decipher = a.Decipher, e.createDecipher = a.createDecipher, e.Decipheriv = a.Decipheriv, e.createDecipheriv = a.createDecipheriv, e.getCiphers = a.getCiphers, e.listCiphers = a.listCiphers;
    var u = r(233);
    e.DiffieHellmanGroup = u.DiffieHellmanGroup, e.createDiffieHellmanGroup = u.createDiffieHellmanGroup, e.getDiffieHellman = u.getDiffieHellman, e.createDiffieHellman = u.createDiffieHellman, e.DiffieHellman = u.DiffieHellman;
    var h = r(240);
    e.createSign = h.createSign, e.Sign = h.Sign, e.createVerify = h.createVerify, e.Verify = h.Verify, e.createECDH = r(281);
    var f = r(284);
    e.publicEncrypt = f.publicEncrypt, e.privateEncrypt = f.privateEncrypt, e.publicDecrypt = f.publicDecrypt, e.privateDecrypt = f.privateDecrypt;
    var c = r(288);
    e.randomFill = c.randomFill, e.randomFillSync = c.randomFillSync, e.createCredentials = function () {
      throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"));
    }, e.constants = {
      DH_CHECK_P_NOT_SAFE_PRIME: 2,
      DH_CHECK_P_NOT_PRIME: 1,
      DH_UNABLE_TO_CHECK_GENERATOR: 4,
      DH_NOT_SUITABLE_GENERATOR: 8,
      NPN_ENABLED: 1,
      ALPN_ENABLED: 1,
      RSA_PKCS1_PADDING: 1,
      RSA_SSLV23_PADDING: 2,
      RSA_NO_PADDING: 3,
      RSA_PKCS1_OAEP_PADDING: 4,
      RSA_X931_PADDING: 5,
      RSA_PKCS1_PSS_PADDING: 6,
      POINT_CONVERSION_COMPRESSED: 2,
      POINT_CONVERSION_UNCOMPRESSED: 4,
      POINT_CONVERSION_HYBRID: 6
    };
  }, function (t, e, r) {
    /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
    var n = r(3),
        i = n.Buffer;

    function o(t, e) {
      for (var r in t) {
        e[r] = t[r];
      }
    }

    function s(t, e, r) {
      return i(t, e, r);
    }

    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function (t, e, r) {
      if ("number" == typeof t) throw new TypeError("Argument must not be a number");
      return i(t, e, r);
    }, s.alloc = function (t, e, r) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      var n = i(t);
      return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
    }, s.allocUnsafe = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return i(t);
    }, s.allocUnsafeSlow = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return n.SlowBuffer(t);
    };
  }, function (t, e, r) {
    (e = t.exports = r(99)).Stream = e, e.Readable = e, e.Writable = r(103), e.Duplex = r(30), e.Transform = r(104), e.PassThrough = r(199), e.finished = r(64), e.pipeline = r(200);
  }, function (t, e) {}, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = Object.keys(t);

      if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(t);
        e && (n = n.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })), r.push.apply(r, n);
      }

      return r;
    }

    function i(t, e, r) {
      return e in t ? Object.defineProperty(t, e, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = r, t;
    }

    function o(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    var s = r(3).Buffer,
        a = r(195).inspect,
        u = a && a.custom || "inspect";

    t.exports = function () {
      function t() {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this.head = null, this.tail = null, this.length = 0;
      }

      var e, r, h;
      return e = t, (r = [{
        key: "push",
        value: function value(t) {
          var e = {
            data: t,
            next: null
          };
          this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
        }
      }, {
        key: "unshift",
        value: function value(t) {
          var e = {
            data: t,
            next: this.head
          };
          0 === this.length && (this.tail = e), this.head = e, ++this.length;
        }
      }, {
        key: "shift",
        value: function value() {
          if (0 !== this.length) {
            var t = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
          }
        }
      }, {
        key: "clear",
        value: function value() {
          this.head = this.tail = null, this.length = 0;
        }
      }, {
        key: "join",
        value: function value(t) {
          if (0 === this.length) return "";

          for (var e = this.head, r = "" + e.data; e = e.next;) {
            r += t + e.data;
          }

          return r;
        }
      }, {
        key: "concat",
        value: function value(t) {
          if (0 === this.length) return s.alloc(0);

          for (var e, r, n, i = s.allocUnsafe(t >>> 0), o = this.head, a = 0; o;) {
            e = o.data, r = i, n = a, s.prototype.copy.call(e, r, n), a += o.data.length, o = o.next;
          }

          return i;
        }
      }, {
        key: "consume",
        value: function value(t, e) {
          var r;
          return t < this.head.data.length ? (r = this.head.data.slice(0, t), this.head.data = this.head.data.slice(t)) : r = t === this.head.data.length ? this.shift() : e ? this._getString(t) : this._getBuffer(t), r;
        }
      }, {
        key: "first",
        value: function value() {
          return this.head.data;
        }
      }, {
        key: "_getString",
        value: function value(t) {
          var e = this.head,
              r = 1,
              n = e.data;

          for (t -= n.length; e = e.next;) {
            var i = e.data,
                o = t > i.length ? i.length : t;

            if (o === i.length ? n += i : n += i.slice(0, t), 0 == (t -= o)) {
              o === i.length ? (++r, e.next ? this.head = e.next : this.head = this.tail = null) : (this.head = e, e.data = i.slice(o));
              break;
            }

            ++r;
          }

          return this.length -= r, n;
        }
      }, {
        key: "_getBuffer",
        value: function value(t) {
          var e = s.allocUnsafe(t),
              r = this.head,
              n = 1;

          for (r.data.copy(e), t -= r.data.length; r = r.next;) {
            var i = r.data,
                o = t > i.length ? i.length : t;

            if (i.copy(e, e.length - t, 0, o), 0 == (t -= o)) {
              o === i.length ? (++n, r.next ? this.head = r.next : this.head = this.tail = null) : (this.head = r, r.data = i.slice(o));
              break;
            }

            ++n;
          }

          return this.length -= n, e;
        }
      }, {
        key: u,
        value: function value(t, e) {
          return a(this, function (t) {
            for (var e = 1; e < arguments.length; e++) {
              var r = null != arguments[e] ? arguments[e] : {};
              e % 2 ? n(Object(r), !0).forEach(function (e) {
                i(t, e, r[e]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function (e) {
                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
              });
            }

            return t;
          }({}, e, {
            depth: 0,
            customInspect: !1
          }));
        }
      }]) && o(e.prototype, r), h && o(e, h), t;
    }();
  }, function (t, e) {}, function (t, e, r) {
    /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
    var n = r(3),
        i = n.Buffer;

    function o(t, e) {
      for (var r in t) {
        e[r] = t[r];
      }
    }

    function s(t, e, r) {
      return i(t, e, r);
    }

    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (o(n, e), e.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function (t, e, r) {
      if ("number" == typeof t) throw new TypeError("Argument must not be a number");
      return i(t, e, r);
    }, s.alloc = function (t, e, r) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      var n = i(t);
      return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n;
    }, s.allocUnsafe = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return i(t);
    }, s.allocUnsafeSlow = function (t) {
      if ("number" != typeof t) throw new TypeError("Argument must be a number");
      return n.SlowBuffer(t);
    };
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      var n;

      function i(t, e, r) {
        return e in t ? Object.defineProperty(t, e, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : t[e] = r, t;
      }

      var o = r(64),
          s = Symbol("lastResolve"),
          a = Symbol("lastReject"),
          u = Symbol("error"),
          h = Symbol("ended"),
          f = Symbol("lastPromise"),
          c = Symbol("handlePromise"),
          l = Symbol("stream");

      function d(t, e) {
        return {
          value: t,
          done: e
        };
      }

      function p(t) {
        var e = t[s];

        if (null !== e) {
          var r = t[l].read();
          null !== r && (t[f] = null, t[s] = null, t[a] = null, e(d(r, !1)));
        }
      }

      function y(t) {
        e.nextTick(p, t);
      }

      var m = Object.getPrototypeOf(function () {}),
          b = Object.setPrototypeOf((i(n = {
        get stream() {
          return this[l];
        },

        next: function next() {
          var t = this,
              r = this[u];
          if (null !== r) return Promise.reject(r);
          if (this[h]) return Promise.resolve(d(void 0, !0));
          if (this[l].destroyed) return new Promise(function (r, n) {
            e.nextTick(function () {
              t[u] ? n(t[u]) : r(d(void 0, !0));
            });
          });
          var n,
              i = this[f];
          if (i) n = new Promise(function (t, e) {
            return function (r, n) {
              t.then(function () {
                e[h] ? r(d(void 0, !0)) : e[c](r, n);
              }, n);
            };
          }(i, this));else {
            var o = this[l].read();
            if (null !== o) return Promise.resolve(d(o, !1));
            n = new Promise(this[c]);
          }
          return this[f] = n, n;
        }
      }, Symbol.asyncIterator, function () {
        return this;
      }), i(n, "return", function () {
        var t = this;
        return new Promise(function (e, r) {
          t[l].destroy(null, function (t) {
            t ? r(t) : e(d(void 0, !0));
          });
        });
      }), n), m);

      t.exports = function (t) {
        var e,
            r = Object.create(b, (i(e = {}, l, {
          value: t,
          writable: !0
        }), i(e, s, {
          value: null,
          writable: !0
        }), i(e, a, {
          value: null,
          writable: !0
        }), i(e, u, {
          value: null,
          writable: !0
        }), i(e, h, {
          value: t._readableState.endEmitted,
          writable: !0
        }), i(e, c, {
          value: function value(t, e) {
            var n = r[l].read();
            n ? (r[f] = null, r[s] = null, r[a] = null, t(d(n, !1))) : (r[s] = t, r[a] = e);
          },
          writable: !0
        }), e));
        return r[f] = null, o(t, function (t) {
          if (t && "ERR_STREAM_PREMATURE_CLOSE" !== t.code) {
            var e = r[a];
            return null !== e && (r[f] = null, r[s] = null, r[a] = null, e(t)), void (r[u] = t);
          }

          var n = r[s];
          null !== n && (r[f] = null, r[s] = null, r[a] = null, n(d(void 0, !0))), r[h] = !0;
        }), t.on("readable", y.bind(null, r)), r;
      };
    }).call(this, r(5));
  }, function (t, e) {
    t.exports = function () {
      throw new Error("Readable.from is not available in the browser");
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = i;
    var n = r(104);

    function i(t) {
      if (!(this instanceof i)) return new i(t);
      n.call(this, t);
    }

    r(0)(i, n), i.prototype._transform = function (t, e, r) {
      r(null, t);
    };
  }, function (t, e, r) {
    "use strict";

    var n;
    var i = r(29).codes,
        o = i.ERR_MISSING_ARGS,
        s = i.ERR_STREAM_DESTROYED;

    function a(t) {
      if (t) throw t;
    }

    function u(t, e, i, o) {
      o = function (t) {
        var e = !1;
        return function () {
          e || (e = !0, t.apply(void 0, arguments));
        };
      }(o);

      var a = !1;
      t.on("close", function () {
        a = !0;
      }), void 0 === n && (n = r(64)), n(t, {
        readable: e,
        writable: i
      }, function (t) {
        if (t) return o(t);
        a = !0, o();
      });
      var u = !1;
      return function (e) {
        if (!a && !u) return u = !0, function (t) {
          return t.setHeader && "function" == typeof t.abort;
        }(t) ? t.abort() : "function" == typeof t.destroy ? t.destroy() : void o(e || new s("pipe"));
      };
    }

    function h(t) {
      t();
    }

    function f(t, e) {
      return t.pipe(e);
    }

    function c(t) {
      return t.length ? "function" != typeof t[t.length - 1] ? a : t.pop() : a;
    }

    t.exports = function () {
      for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) {
        e[r] = arguments[r];
      }

      var n,
          i = c(e);
      if (Array.isArray(e[0]) && (e = e[0]), e.length < 2) throw new o("streams");
      var s = e.map(function (t, r) {
        var o = r < e.length - 1;
        return u(t, o, r > 0, function (t) {
          n || (n = t), t && s.forEach(h), o || (s.forEach(h), i(n));
        });
      });
      return e.reduce(f);
    };
  }, function (t, e, r) {
    var n = r(0),
        i = r(31),
        o = r(2).Buffer,
        s = [1518500249, 1859775393, -1894007588, -899497514],
        a = new Array(80);

    function u() {
      this.init(), this._w = a, i.call(this, 64, 56);
    }

    function h(t) {
      return t << 30 | t >>> 2;
    }

    function f(t, e, r, n) {
      return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n;
    }

    n(u, i), u.prototype.init = function () {
      return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
    }, u.prototype._update = function (t) {
      for (var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, a = 0 | this._d, u = 0 | this._e, c = 0; c < 16; ++c) {
        r[c] = t.readInt32BE(4 * c);
      }

      for (; c < 80; ++c) {
        r[c] = r[c - 3] ^ r[c - 8] ^ r[c - 14] ^ r[c - 16];
      }

      for (var l = 0; l < 80; ++l) {
        var d = ~~(l / 20),
            p = 0 | ((e = n) << 5 | e >>> 27) + f(d, i, o, a) + u + r[l] + s[d];
        u = a, a = o, o = h(i), i = n, n = p;
      }

      this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = a + this._d | 0, this._e = u + this._e | 0;
    }, u.prototype._hash = function () {
      var t = o.allocUnsafe(20);
      return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t;
    }, t.exports = u;
  }, function (t, e, r) {
    var n = r(0),
        i = r(31),
        o = r(2).Buffer,
        s = [1518500249, 1859775393, -1894007588, -899497514],
        a = new Array(80);

    function u() {
      this.init(), this._w = a, i.call(this, 64, 56);
    }

    function h(t) {
      return t << 5 | t >>> 27;
    }

    function f(t) {
      return t << 30 | t >>> 2;
    }

    function c(t, e, r, n) {
      return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n;
    }

    n(u, i), u.prototype.init = function () {
      return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
    }, u.prototype._update = function (t) {
      for (var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, a = 0 | this._d, u = 0 | this._e, l = 0; l < 16; ++l) {
        r[l] = t.readInt32BE(4 * l);
      }

      for (; l < 80; ++l) {
        r[l] = (e = r[l - 3] ^ r[l - 8] ^ r[l - 14] ^ r[l - 16]) << 1 | e >>> 31;
      }

      for (var d = 0; d < 80; ++d) {
        var p = ~~(d / 20),
            y = h(n) + c(p, i, o, a) + u + r[d] + s[p] | 0;
        u = a, a = o, o = f(i), i = n, n = y;
      }

      this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = a + this._d | 0, this._e = u + this._e | 0;
    }, u.prototype._hash = function () {
      var t = o.allocUnsafe(20);
      return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t;
    }, t.exports = u;
  }, function (t, e, r) {
    var n = r(0),
        i = r(105),
        o = r(31),
        s = r(2).Buffer,
        a = new Array(64);

    function u() {
      this.init(), this._w = a, o.call(this, 64, 56);
    }

    n(u, i), u.prototype.init = function () {
      return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
    }, u.prototype._hash = function () {
      var t = s.allocUnsafe(28);
      return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t;
    }, t.exports = u;
  }, function (t, e, r) {
    var n = r(0),
        i = r(106),
        o = r(31),
        s = r(2).Buffer,
        a = new Array(160);

    function u() {
      this.init(), this._w = a, o.call(this, 128, 112);
    }

    n(u, i), u.prototype.init = function () {
      return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
    }, u.prototype._hash = function () {
      var t = s.allocUnsafe(48);

      function e(e, r, n) {
        t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4);
      }

      return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), t;
    }, t.exports = u;
  }, function (t, e, r) {
    t.exports = i;
    var n = r(11).EventEmitter;

    function i() {
      n.call(this);
    }

    r(0)(i, n), i.Readable = r(67), i.Writable = r(211), i.Duplex = r(212), i.Transform = r(213), i.PassThrough = r(214), i.Stream = i, i.prototype.pipe = function (t, e) {
      var r = this;

      function i(e) {
        t.writable && !1 === t.write(e) && r.pause && r.pause();
      }

      function o() {
        r.readable && r.resume && r.resume();
      }

      r.on("data", i), t.on("drain", o), t._isStdio || e && !1 === e.end || (r.on("end", a), r.on("close", u));
      var s = !1;

      function a() {
        s || (s = !0, t.end());
      }

      function u() {
        s || (s = !0, "function" == typeof t.destroy && t.destroy());
      }

      function h(t) {
        if (f(), 0 === n.listenerCount(this, "error")) throw t;
      }

      function f() {
        r.removeListener("data", i), t.removeListener("drain", o), r.removeListener("end", a), r.removeListener("close", u), r.removeListener("error", h), t.removeListener("error", h), r.removeListener("end", f), r.removeListener("close", f), t.removeListener("close", f);
      }

      return r.on("error", h), t.on("error", h), r.on("end", f), r.on("close", f), t.on("close", f), t.emit("pipe", r), t;
    };
  }, function (t, e) {}, function (t, e, r) {
    "use strict";

    var n = r(2).Buffer,
        i = r(208);
    t.exports = function () {
      function t() {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this.head = null, this.tail = null, this.length = 0;
      }

      return t.prototype.push = function (t) {
        var e = {
          data: t,
          next: null
        };
        this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
      }, t.prototype.unshift = function (t) {
        var e = {
          data: t,
          next: this.head
        };
        0 === this.length && (this.tail = e), this.head = e, ++this.length;
      }, t.prototype.shift = function () {
        if (0 !== this.length) {
          var t = this.head.data;
          return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
        }
      }, t.prototype.clear = function () {
        this.head = this.tail = null, this.length = 0;
      }, t.prototype.join = function (t) {
        if (0 === this.length) return "";

        for (var e = this.head, r = "" + e.data; e = e.next;) {
          r += t + e.data;
        }

        return r;
      }, t.prototype.concat = function (t) {
        if (0 === this.length) return n.alloc(0);
        if (1 === this.length) return this.head.data;

        for (var e, r, i, o = n.allocUnsafe(t >>> 0), s = this.head, a = 0; s;) {
          e = s.data, r = o, i = a, e.copy(r, i), a += s.data.length, s = s.next;
        }

        return o;
      }, t;
    }(), i && i.inspect && i.inspect.custom && (t.exports.prototype[i.inspect.custom] = function () {
      var t = i.inspect({
        length: this.length
      });
      return this.constructor.name + " " + t;
    });
  }, function (t, e) {}, function (t, e, r) {
    (function (t, e) {
      !function (t, r) {
        "use strict";

        if (!t.setImmediate) {
          var n,
              i,
              o,
              s,
              a,
              u = 1,
              h = {},
              f = !1,
              c = t.document,
              l = Object.getPrototypeOf && Object.getPrototypeOf(t);
          l = l && l.setTimeout ? l : t, "[object process]" === {}.toString.call(t.process) ? n = function n(t) {
            e.nextTick(function () {
              p(t);
            });
          } : !function () {
            if (t.postMessage && !t.importScripts) {
              var e = !0,
                  r = t.onmessage;
              return t.onmessage = function () {
                e = !1;
              }, t.postMessage("", "*"), t.onmessage = r, e;
            }
          }() ? t.MessageChannel ? ((o = new MessageChannel()).port1.onmessage = function (t) {
            p(t.data);
          }, n = function n(t) {
            o.port2.postMessage(t);
          }) : c && "onreadystatechange" in c.createElement("script") ? (i = c.documentElement, n = function n(t) {
            var e = c.createElement("script");
            e.onreadystatechange = function () {
              p(t), e.onreadystatechange = null, i.removeChild(e), e = null;
            }, i.appendChild(e);
          }) : n = function n(t) {
            setTimeout(p, 0, t);
          } : (s = "setImmediate$" + Math.random() + "$", a = function a(e) {
            e.source === t && "string" == typeof e.data && 0 === e.data.indexOf(s) && p(+e.data.slice(s.length));
          }, t.addEventListener ? t.addEventListener("message", a, !1) : t.attachEvent("onmessage", a), n = function n(e) {
            t.postMessage(s + e, "*");
          }), l.setImmediate = function (t) {
            "function" != typeof t && (t = new Function("" + t));

            for (var e = new Array(arguments.length - 1), r = 0; r < e.length; r++) {
              e[r] = arguments[r + 1];
            }

            var i = {
              callback: t,
              args: e
            };
            return h[u] = i, n(u), u++;
          }, l.clearImmediate = d;
        }

        function d(t) {
          delete h[t];
        }

        function p(t) {
          if (f) setTimeout(p, 0, t);else {
            var e = h[t];

            if (e) {
              f = !0;

              try {
                !function (t) {
                  var e = t.callback,
                      r = t.args;

                  switch (r.length) {
                    case 0:
                      e();
                      break;

                    case 1:
                      e(r[0]);
                      break;

                    case 2:
                      e(r[0], r[1]);
                      break;

                    case 3:
                      e(r[0], r[1], r[2]);
                      break;

                    default:
                      e.apply(void 0, r);
                  }
                }(e);
              } finally {
                d(t), f = !1;
              }
            }
          }
        }
      }("undefined" == typeof self ? void 0 === t ? this : t : self);
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    "use strict";

    t.exports = o;
    var n = r(111),
        i = Object.create(r(40));

    function o(t) {
      if (!(this instanceof o)) return new o(t);
      n.call(this, t);
    }

    i.inherits = r(0), i.inherits(o, n), o.prototype._transform = function (t, e, r) {
      r(null, t);
    };
  }, function (t, e, r) {
    t.exports = r(68);
  }, function (t, e, r) {
    t.exports = r(26);
  }, function (t, e, r) {
    t.exports = r(67).Transform;
  }, function (t, e, r) {
    t.exports = r(67).PassThrough;
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(2).Buffer,
        o = r(22),
        s = i.alloc(128);

    function a(t, e) {
      o.call(this, "digest"), "string" == typeof e && (e = i.from(e)), this._alg = t, this._key = e, e.length > 64 ? e = t(e) : e.length < 64 && (e = i.concat([e, s], 64));

      for (var r = this._ipad = i.allocUnsafe(64), n = this._opad = i.allocUnsafe(64), a = 0; a < 64; a++) {
        r[a] = 54 ^ e[a], n[a] = 92 ^ e[a];
      }

      this._hash = [r];
    }

    n(a, o), a.prototype._update = function (t) {
      this._hash.push(t);
    }, a.prototype._final = function () {
      var t = this._alg(i.concat(this._hash));

      return this._alg(i.concat([this._opad, t]));
    }, t.exports = a;
  }, function (t, e, r) {
    t.exports = r(114);
  }, function (t, e, r) {
    (function (e) {
      var n,
          i,
          o = r(2).Buffer,
          s = r(116),
          a = r(117),
          u = r(118),
          h = r(119),
          f = e.crypto && e.crypto.subtle,
          c = {
        sha: "SHA-1",
        "sha-1": "SHA-1",
        sha1: "SHA-1",
        sha256: "SHA-256",
        "sha-256": "SHA-256",
        sha384: "SHA-384",
        "sha-384": "SHA-384",
        "sha-512": "SHA-512",
        sha512: "SHA-512"
      },
          l = [];

      function d() {
        return i || (i = e.process && e.process.nextTick ? e.process.nextTick : e.queueMicrotask ? e.queueMicrotask : e.setImmediate ? e.setImmediate : e.setTimeout);
      }

      function p(t, e, r, n, i) {
        return f.importKey("raw", t, {
          name: "PBKDF2"
        }, !1, ["deriveBits"]).then(function (t) {
          return f.deriveBits({
            name: "PBKDF2",
            salt: e,
            iterations: r,
            hash: {
              name: i
            }
          }, t, n << 3);
        }).then(function (t) {
          return o.from(t);
        });
      }

      t.exports = function (t, r, i, y, m, b) {
        "function" == typeof m && (b = m, m = void 0);
        var v = c[(m = m || "sha1").toLowerCase()];

        if (v && "function" == typeof e.Promise) {
          if (s(i, y), t = h(t, a, "Password"), r = h(r, a, "Salt"), "function" != typeof b) throw new Error("No callback provided to pbkdf2");
          !function (t, e) {
            t.then(function (t) {
              d()(function () {
                e(null, t);
              });
            }, function (t) {
              d()(function () {
                e(t);
              });
            });
          }(function (t) {
            if (e.process && !e.process.browser) return Promise.resolve(!1);
            if (!f || !f.importKey || !f.deriveBits) return Promise.resolve(!1);
            if (void 0 !== l[t]) return l[t];
            var r = p(n = n || o.alloc(8), n, 10, 128, t).then(function () {
              return !0;
            }).catch(function () {
              return !1;
            });
            return l[t] = r, r;
          }(v).then(function (e) {
            return e ? p(t, r, i, y, v) : u(t, r, i, y, m);
          }), b);
        } else d()(function () {
          var e;

          try {
            e = u(t, r, i, y, m);
          } catch (t) {
            return b(t);
          }

          b(null, e);
        });
      };
    }).call(this, r(7));
  }, function (t, e, r) {
    var n = r(219),
        i = r(70),
        o = r(71),
        s = r(232),
        a = r(50);

    function u(t, e, r) {
      if (t = t.toLowerCase(), o[t]) return i.createCipheriv(t, e, r);
      if (s[t]) return new n({
        key: e,
        iv: r,
        mode: t
      });
      throw new TypeError("invalid suite type");
    }

    function h(t, e, r) {
      if (t = t.toLowerCase(), o[t]) return i.createDecipheriv(t, e, r);
      if (s[t]) return new n({
        key: e,
        iv: r,
        mode: t,
        decrypt: !0
      });
      throw new TypeError("invalid suite type");
    }

    e.createCipher = e.Cipher = function (t, e) {
      var r, n;
      if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;else {
        if (!s[t]) throw new TypeError("invalid suite type");
        r = 8 * s[t].key, n = s[t].iv;
      }
      var i = a(e, !1, r, n);
      return u(t, i.key, i.iv);
    }, e.createCipheriv = e.Cipheriv = u, e.createDecipher = e.Decipher = function (t, e) {
      var r, n;
      if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;else {
        if (!s[t]) throw new TypeError("invalid suite type");
        r = 8 * s[t].key, n = s[t].iv;
      }
      var i = a(e, !1, r, n);
      return h(t, i.key, i.iv);
    }, e.createDecipheriv = e.Decipheriv = h, e.listCiphers = e.getCiphers = function () {
      return Object.keys(s).concat(i.getCiphers());
    };
  }, function (t, e, r) {
    var n = r(22),
        i = r(220),
        o = r(0),
        s = r(2).Buffer,
        a = {
      "des-ede3-cbc": i.CBC.instantiate(i.EDE),
      "des-ede3": i.EDE,
      "des-ede-cbc": i.CBC.instantiate(i.EDE),
      "des-ede": i.EDE,
      "des-cbc": i.CBC.instantiate(i.DES),
      "des-ecb": i.DES
    };

    function u(t) {
      n.call(this);
      var e,
          r = t.mode.toLowerCase(),
          i = a[r];
      e = t.decrypt ? "decrypt" : "encrypt";
      var o = t.key;
      s.isBuffer(o) || (o = s.from(o)), "des-ede" !== r && "des-ede-cbc" !== r || (o = s.concat([o, o.slice(0, 8)]));
      var u = t.iv;
      s.isBuffer(u) || (u = s.from(u)), this._des = i.create({
        key: o,
        iv: u,
        type: e
      });
    }

    a.des = a["des-cbc"], a.des3 = a["des-ede3-cbc"], t.exports = u, o(u, n), u.prototype._update = function (t) {
      return s.from(this._des.update(t));
    }, u.prototype._final = function () {
      return s.from(this._des.final());
    };
  }, function (t, e, r) {
    "use strict";

    e.utils = r(120), e.Cipher = r(69), e.DES = r(121), e.CBC = r(221), e.EDE = r(222);
  }, function (t, e, r) {
    "use strict";

    var n = r(12),
        i = r(0),
        o = {};

    function s(t) {
      n.equal(t.length, 8, "Invalid IV length"), this.iv = new Array(8);

      for (var e = 0; e < this.iv.length; e++) {
        this.iv[e] = t[e];
      }
    }

    e.instantiate = function (t) {
      function e(e) {
        t.call(this, e), this._cbcInit();
      }

      i(e, t);

      for (var r = Object.keys(o), n = 0; n < r.length; n++) {
        var s = r[n];
        e.prototype[s] = o[s];
      }

      return e.create = function (t) {
        return new e(t);
      }, e;
    }, o._cbcInit = function () {
      var t = new s(this.options.iv);
      this._cbcState = t;
    }, o._update = function (t, e, r, n) {
      var i = this._cbcState,
          o = this.constructor.super_.prototype,
          s = i.iv;

      if ("encrypt" === this.type) {
        for (var a = 0; a < this.blockSize; a++) {
          s[a] ^= t[e + a];
        }

        o._update.call(this, s, 0, r, n);

        for (a = 0; a < this.blockSize; a++) {
          s[a] = r[n + a];
        }
      } else {
        o._update.call(this, t, e, r, n);

        for (a = 0; a < this.blockSize; a++) {
          r[n + a] ^= s[a];
        }

        for (a = 0; a < this.blockSize; a++) {
          s[a] = t[e + a];
        }
      }
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(12),
        i = r(0),
        o = r(69),
        s = r(121);

    function a(t, e) {
      n.equal(e.length, 24, "Invalid key length");
      var r = e.slice(0, 8),
          i = e.slice(8, 16),
          o = e.slice(16, 24);
      this.ciphers = "encrypt" === t ? [s.create({
        type: "encrypt",
        key: r
      }), s.create({
        type: "decrypt",
        key: i
      }), s.create({
        type: "encrypt",
        key: o
      })] : [s.create({
        type: "decrypt",
        key: o
      }), s.create({
        type: "encrypt",
        key: i
      }), s.create({
        type: "decrypt",
        key: r
      })];
    }

    function u(t) {
      o.call(this, t);
      var e = new a(this.type, this.options.key);
      this._edeState = e;
    }

    i(u, o), t.exports = u, u.create = function (t) {
      return new u(t);
    }, u.prototype._update = function (t, e, r, n) {
      var i = this._edeState;
      i.ciphers[0]._update(t, e, r, n), i.ciphers[1]._update(r, n, r, n), i.ciphers[2]._update(r, n, r, n);
    }, u.prototype._pad = s.prototype._pad, u.prototype._unpad = s.prototype._unpad;
  }, function (t, e, r) {
    var n = r(71),
        i = r(125),
        o = r(2).Buffer,
        s = r(126),
        a = r(22),
        u = r(49),
        h = r(50);

    function f(t, e, r) {
      a.call(this), this._cache = new l(), this._cipher = new u.AES(e), this._prev = o.from(r), this._mode = t, this._autopadding = !0;
    }

    r(0)(f, a), f.prototype._update = function (t) {
      var e, r;

      this._cache.add(t);

      for (var n = []; e = this._cache.get();) {
        r = this._mode.encrypt(this, e), n.push(r);
      }

      return o.concat(n);
    };
    var c = o.alloc(16, 16);

    function l() {
      this.cache = o.allocUnsafe(0);
    }

    function d(t, e, r) {
      var a = n[t.toLowerCase()];
      if (!a) throw new TypeError("invalid suite type");
      if ("string" == typeof e && (e = o.from(e)), e.length !== a.key / 8) throw new TypeError("invalid key length " + e.length);
      if ("string" == typeof r && (r = o.from(r)), "GCM" !== a.mode && r.length !== a.iv) throw new TypeError("invalid iv length " + r.length);
      return "stream" === a.type ? new s(a.module, e, r) : "auth" === a.type ? new i(a.module, e, r) : new f(a.module, e, r);
    }

    f.prototype._final = function () {
      var t = this._cache.flush();

      if (this._autopadding) return t = this._mode.encrypt(this, t), this._cipher.scrub(), t;
      if (!t.equals(c)) throw this._cipher.scrub(), new Error("data not multiple of block length");
    }, f.prototype.setAutoPadding = function (t) {
      return this._autopadding = !!t, this;
    }, l.prototype.add = function (t) {
      this.cache = o.concat([this.cache, t]);
    }, l.prototype.get = function () {
      if (this.cache.length > 15) {
        var t = this.cache.slice(0, 16);
        return this.cache = this.cache.slice(16), t;
      }

      return null;
    }, l.prototype.flush = function () {
      for (var t = 16 - this.cache.length, e = o.allocUnsafe(t), r = -1; ++r < t;) {
        e.writeUInt8(t, r);
      }

      return o.concat([this.cache, e]);
    }, e.createCipheriv = d, e.createCipher = function (t, e) {
      var r = n[t.toLowerCase()];
      if (!r) throw new TypeError("invalid suite type");
      var i = h(e, !1, r.key, r.iv);
      return d(t, i.key, i.iv);
    };
  }, function (t, e) {
    e.encrypt = function (t, e) {
      return t._cipher.encryptBlock(e);
    }, e.decrypt = function (t, e) {
      return t._cipher.decryptBlock(e);
    };
  }, function (t, e, r) {
    var n = r(41);
    e.encrypt = function (t, e) {
      var r = n(e, t._prev);
      return t._prev = t._cipher.encryptBlock(r), t._prev;
    }, e.decrypt = function (t, e) {
      var r = t._prev;
      t._prev = e;

      var i = t._cipher.decryptBlock(e);

      return n(i, r);
    };
  }, function (t, e, r) {
    var n = r(2).Buffer,
        i = r(41);

    function o(t, e, r) {
      var o = e.length,
          s = i(e, t._cache);
      return t._cache = t._cache.slice(o), t._prev = n.concat([t._prev, r ? e : s]), s;
    }

    e.encrypt = function (t, e, r) {
      for (var i, s = n.allocUnsafe(0); e.length;) {
        if (0 === t._cache.length && (t._cache = t._cipher.encryptBlock(t._prev), t._prev = n.allocUnsafe(0)), !(t._cache.length <= e.length)) {
          s = n.concat([s, o(t, e, r)]);
          break;
        }

        i = t._cache.length, s = n.concat([s, o(t, e.slice(0, i), r)]), e = e.slice(i);
      }

      return s;
    };
  }, function (t, e, r) {
    var n = r(2).Buffer;

    function i(t, e, r) {
      var i = t._cipher.encryptBlock(t._prev)[0] ^ e;
      return t._prev = n.concat([t._prev.slice(1), n.from([r ? e : i])]), i;
    }

    e.encrypt = function (t, e, r) {
      for (var o = e.length, s = n.allocUnsafe(o), a = -1; ++a < o;) {
        s[a] = i(t, e[a], r);
      }

      return s;
    };
  }, function (t, e, r) {
    var n = r(2).Buffer;

    function i(t, e, r) {
      for (var n, i, s = -1, a = 0; ++s < 8;) {
        n = e & 1 << 7 - s ? 128 : 0, a += (128 & (i = t._cipher.encryptBlock(t._prev)[0] ^ n)) >> s % 8, t._prev = o(t._prev, r ? n : i);
      }

      return a;
    }

    function o(t, e) {
      var r = t.length,
          i = -1,
          o = n.allocUnsafe(t.length);

      for (t = n.concat([t, n.from([e])]); ++i < r;) {
        o[i] = t[i] << 1 | t[i + 1] >> 7;
      }

      return o;
    }

    e.encrypt = function (t, e, r) {
      for (var o = e.length, s = n.allocUnsafe(o), a = -1; ++a < o;) {
        s[a] = i(t, e[a], r);
      }

      return s;
    };
  }, function (t, e, r) {
    (function (t) {
      var n = r(41);

      function i(t) {
        return t._prev = t._cipher.encryptBlock(t._prev), t._prev;
      }

      e.encrypt = function (e, r) {
        for (; e._cache.length < r.length;) {
          e._cache = t.concat([e._cache, i(e)]);
        }

        var o = e._cache.slice(0, r.length);

        return e._cache = e._cache.slice(r.length), n(r, o);
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    var n = r(2).Buffer,
        i = n.alloc(16, 0);

    function o(t) {
      var e = n.allocUnsafe(16);
      return e.writeUInt32BE(t[0] >>> 0, 0), e.writeUInt32BE(t[1] >>> 0, 4), e.writeUInt32BE(t[2] >>> 0, 8), e.writeUInt32BE(t[3] >>> 0, 12), e;
    }

    function s(t) {
      this.h = t, this.state = n.alloc(16, 0), this.cache = n.allocUnsafe(0);
    }

    s.prototype.ghash = function (t) {
      for (var e = -1; ++e < t.length;) {
        this.state[e] ^= t[e];
      }

      this._multiply();
    }, s.prototype._multiply = function () {
      for (var t, e, r, n = [(t = this.h).readUInt32BE(0), t.readUInt32BE(4), t.readUInt32BE(8), t.readUInt32BE(12)], i = [0, 0, 0, 0], s = -1; ++s < 128;) {
        for (0 != (this.state[~~(s / 8)] & 1 << 7 - s % 8) && (i[0] ^= n[0], i[1] ^= n[1], i[2] ^= n[2], i[3] ^= n[3]), r = 0 != (1 & n[3]), e = 3; e > 0; e--) {
          n[e] = n[e] >>> 1 | (1 & n[e - 1]) << 31;
        }

        n[0] = n[0] >>> 1, r && (n[0] = n[0] ^ 225 << 24);
      }

      this.state = o(i);
    }, s.prototype.update = function (t) {
      var e;

      for (this.cache = n.concat([this.cache, t]); this.cache.length >= 16;) {
        e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e);
      }
    }, s.prototype.final = function (t, e) {
      return this.cache.length && this.ghash(n.concat([this.cache, i], 16)), this.ghash(o([0, t, 0, e])), this.state;
    }, t.exports = s;
  }, function (t, e, r) {
    var n = r(125),
        i = r(2).Buffer,
        o = r(71),
        s = r(126),
        a = r(22),
        u = r(49),
        h = r(50);

    function f(t, e, r) {
      a.call(this), this._cache = new c(), this._last = void 0, this._cipher = new u.AES(e), this._prev = i.from(r), this._mode = t, this._autopadding = !0;
    }

    function c() {
      this.cache = i.allocUnsafe(0);
    }

    function l(t, e, r) {
      var a = o[t.toLowerCase()];
      if (!a) throw new TypeError("invalid suite type");
      if ("string" == typeof r && (r = i.from(r)), "GCM" !== a.mode && r.length !== a.iv) throw new TypeError("invalid iv length " + r.length);
      if ("string" == typeof e && (e = i.from(e)), e.length !== a.key / 8) throw new TypeError("invalid key length " + e.length);
      return "stream" === a.type ? new s(a.module, e, r, !0) : "auth" === a.type ? new n(a.module, e, r, !0) : new f(a.module, e, r);
    }

    r(0)(f, a), f.prototype._update = function (t) {
      var e, r;

      this._cache.add(t);

      for (var n = []; e = this._cache.get(this._autopadding);) {
        r = this._mode.decrypt(this, e), n.push(r);
      }

      return i.concat(n);
    }, f.prototype._final = function () {
      var t = this._cache.flush();

      if (this._autopadding) return function (t) {
        var e = t[15];
        if (e < 1 || e > 16) throw new Error("unable to decrypt data");
        var r = -1;

        for (; ++r < e;) {
          if (t[r + (16 - e)] !== e) throw new Error("unable to decrypt data");
        }

        if (16 === e) return;
        return t.slice(0, 16 - e);
      }(this._mode.decrypt(this, t));
      if (t) throw new Error("data not multiple of block length");
    }, f.prototype.setAutoPadding = function (t) {
      return this._autopadding = !!t, this;
    }, c.prototype.add = function (t) {
      this.cache = i.concat([this.cache, t]);
    }, c.prototype.get = function (t) {
      var e;

      if (t) {
        if (this.cache.length > 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
      } else if (this.cache.length >= 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;

      return null;
    }, c.prototype.flush = function () {
      if (this.cache.length) return this.cache;
    }, e.createDecipher = function (t, e) {
      var r = o[t.toLowerCase()];
      if (!r) throw new TypeError("invalid suite type");
      var n = h(e, !1, r.key, r.iv);
      return l(t, n.key, n.iv);
    }, e.createDecipheriv = l;
  }, function (t, e) {
    e["des-ecb"] = {
      key: 8,
      iv: 0
    }, e["des-cbc"] = e.des = {
      key: 8,
      iv: 8
    }, e["des-ede3-cbc"] = e.des3 = {
      key: 24,
      iv: 8
    }, e["des-ede3"] = {
      key: 24,
      iv: 0
    }, e["des-ede-cbc"] = {
      key: 16,
      iv: 8
    }, e["des-ede"] = {
      key: 16,
      iv: 0
    };
  }, function (t, e, r) {
    (function (t) {
      var n = r(127),
          i = r(238),
          o = r(239);
      var s = {
        binary: !0,
        hex: !0,
        base64: !0
      };
      e.DiffieHellmanGroup = e.createDiffieHellmanGroup = e.getDiffieHellman = function (e) {
        var r = new t(i[e].prime, "hex"),
            n = new t(i[e].gen, "hex");
        return new o(r, n);
      }, e.createDiffieHellman = e.DiffieHellman = function e(r, i, a, u) {
        return t.isBuffer(i) || void 0 === s[i] ? e(r, "binary", i, a) : (i = i || "binary", u = u || "binary", a = a || new t([2]), t.isBuffer(a) || (a = new t(a, u)), "number" == typeof r ? new o(n(r, a), a, !0) : (t.isBuffer(r) || (r = new t(r, i)), new o(r, a, !0)));
      };
    }).call(this, r(3).Buffer);
  }, function (t, e) {}, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(236).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
            var a = t.charCodeAt(s) - 48;
            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
          }

          return i;
        }

        s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this.strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }
          this.strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this.strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype.strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, s.prototype.inspect = function () {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var c = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

        function p(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
        }

        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = l[t],
                f = d[t];
            r = "";
            var p = this.clone();

            for (p.negative = 0; !p.isZero();) {
              var y = p.modn(f).toString(t);
              r = (p = p.idivn(f)).isZero() ? y + r : c[h - y.length] + y + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16);
        }, s.prototype.toBuffer = function (t, e) {
          return i(void 0 !== a), this.toArrayLike(a, t, e);
        }, s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        }, s.prototype.toArrayLike = function (t, e, r) {
          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0"), this.strip();
          var s,
              a,
              u = "le" === e,
              h = new t(o),
              f = this.clone();

          if (u) {
            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[a] = s;
            }

            for (; a < o; a++) {
              h[a] = 0;
            }
          } else {
            for (a = 0; a < o - n; a++) {
              h[a] = 0;
            }

            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
            }
          }

          return h;
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this.strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this.strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this.strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var y = function y(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function m(t, e, r) {
          return new b().mulp(t, e, r);
        }

        function b(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (y = p), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? y(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? function (t, e, r) {
            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

            for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
              var s = i;
              i = 0;

              for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                var f = o - h,
                    c = (0 | t.words[f]) * (0 | e.words[h]),
                    l = 67108863 & c;
                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
              }

              r.words[o] = a, n = s, s = i;
            }

            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
          }(this, t, e) : m(this, t, e);
        }, b.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, b.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, b.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, b.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, b.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, b.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, b.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, b.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, b.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, b.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), m(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          i("number" == typeof t), i(t < 67108864);

          for (var e = 0, r = 0; r < this.length; r++) {
            var n = (0 | this.words[r]) * t,
                o = (67108863 & n) + (67108863 & e);
            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
          }

          return 0 !== e && (this.words[r] = e, this.length++), this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = (t.words[n] & 1 << i) >>> i;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this.strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this.strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this.strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this.strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this.strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modn = function (t) {
          i(t <= 67108863);

          for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) {
            r = (e * r + (0 | this.words[n])) % t;
          }

          return r;
        }, s.prototype.idivn = function (t) {
          i(t <= 67108863);

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = (0 | this.words[r]) + 67108864 * e;
            this.words[r] = n / t | 0, e = n % t;
          }

          return this.strip();
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this.strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new O(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var v = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function g(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function w() {
          g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function _() {
          g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function M() {
          g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function S() {
          g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function O(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function A(t) {
          O.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        g.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, g.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, g.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, g.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(w, g), w.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, w.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(_, g), o(M, g), o(S, g), S.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (v[t]) return v[t];
          var e;
          if ("k256" === t) e = new w();else if ("p224" === t) e = new _();else if ("p192" === t) e = new M();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new S();
          }
          return v[t] = e, e;
        }, O.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, O.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, O.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
        }, O.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, O.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, O.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, O.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, O.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, O.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, O.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, O.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, O.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, O.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, O.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, O.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, O.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, O.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, O.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new A(t);
        }, o(A, O), A.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, A.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, A.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e) {}, function (t, e) {}, function (t) {
    t.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
  }, function (t, e, r) {
    (function (e) {
      var n = r(128),
          i = new (r(129))(),
          o = new n(24),
          s = new n(11),
          a = new n(10),
          u = new n(3),
          h = new n(7),
          f = r(127),
          c = r(28);

      function l(t, r) {
        return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this._pub = new n(t), this;
      }

      function d(t, r) {
        return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this._priv = new n(t), this;
      }

      t.exports = y;
      var p = {};

      function y(t, e, r) {
        this.setGenerator(e), this.__prime = new n(t), this._prime = n.mont(this.__prime), this._primeLen = t.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, r ? (this.setPublicKey = l, this.setPrivateKey = d) : this._primeCode = 8;
      }

      function m(t, r) {
        var n = new e(t.toArray());
        return r ? n.toString(r) : n;
      }

      Object.defineProperty(y.prototype, "verifyError", {
        enumerable: !0,
        get: function get() {
          return "number" != typeof this._primeCode && (this._primeCode = function (t, e) {
            var r = e.toString("hex"),
                n = [r, t.toString(16)].join("_");
            if (n in p) return p[n];
            var c,
                l = 0;
            if (t.isEven() || !f.simpleSieve || !f.fermatTest(t) || !i.test(t)) return l += 1, l += "02" === r || "05" === r ? 8 : 4, p[n] = l, l;

            switch (i.test(t.shrn(1)) || (l += 2), r) {
              case "02":
                t.mod(o).cmp(s) && (l += 8);
                break;

              case "05":
                (c = t.mod(a)).cmp(u) && c.cmp(h) && (l += 8);
                break;

              default:
                l += 4;
            }

            return p[n] = l, l;
          }(this.__prime, this.__gen)), this._primeCode;
        }
      }), y.prototype.generateKeys = function () {
        return this._priv || (this._priv = new n(c(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
      }, y.prototype.computeSecret = function (t) {
        var r = (t = (t = new n(t)).toRed(this._prime)).redPow(this._priv).fromRed(),
            i = new e(r.toArray()),
            o = this.getPrime();

        if (i.length < o.length) {
          var s = new e(o.length - i.length);
          s.fill(0), i = e.concat([s, i]);
        }

        return i;
      }, y.prototype.getPublicKey = function (t) {
        return m(this._pub, t);
      }, y.prototype.getPrivateKey = function (t) {
        return m(this._priv, t);
      }, y.prototype.getPrime = function (t) {
        return m(this.__prime, t);
      }, y.prototype.getGenerator = function (t) {
        return m(this._gen, t);
      }, y.prototype.setGenerator = function (t, r) {
        return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this.__gen = t, this._gen = new n(t), this;
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    var n = r(73).Buffer,
        i = r(39),
        o = r(241),
        s = r(0),
        a = r(249),
        u = r(280),
        h = r(114);

    function f(t) {
      o.Writable.call(this);
      var e = h[t];
      if (!e) throw new Error("Unknown message digest");
      this._hashType = e.hash, this._hash = i(e.hash), this._tag = e.id, this._signType = e.sign;
    }

    function c(t) {
      o.Writable.call(this);
      var e = h[t];
      if (!e) throw new Error("Unknown message digest");
      this._hash = i(e.hash), this._tag = e.id, this._signType = e.sign;
    }

    function l(t) {
      return new f(t);
    }

    function d(t) {
      return new c(t);
    }

    Object.keys(h).forEach(function (t) {
      h[t].id = n.from(h[t].id, "hex"), h[t.toLowerCase()] = h[t];
    }), s(f, o.Writable), f.prototype._write = function (t, e, r) {
      this._hash.update(t), r();
    }, f.prototype.update = function (t, e) {
      return "string" == typeof t && (t = n.from(t, e)), this._hash.update(t), this;
    }, f.prototype.sign = function (t, e) {
      this.end();

      var r = this._hash.digest(),
          n = a(r, t, this._hashType, this._signType, this._tag);

      return e ? n.toString(e) : n;
    }, s(c, o.Writable), c.prototype._write = function (t, e, r) {
      this._hash.update(t), r();
    }, c.prototype.update = function (t, e) {
      return "string" == typeof t && (t = n.from(t, e)), this._hash.update(t), this;
    }, c.prototype.verify = function (t, e, r) {
      "string" == typeof e && (e = n.from(e, r)), this.end();

      var i = this._hash.digest();

      return u(e, i, t, this._signType, this._tag);
    }, t.exports = {
      Sign: l,
      Verify: d,
      createSign: l,
      createVerify: d
    };
  }, function (t, e, r) {
    (e = t.exports = r(130)).Stream = e, e.Readable = e, e.Writable = r(134), e.Duplex = r(33), e.Transform = r(135), e.PassThrough = r(247), e.finished = r(74), e.pipeline = r(248);
  }, function (t, e) {}, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = Object.keys(t);

      if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(t);
        e && (n = n.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })), r.push.apply(r, n);
      }

      return r;
    }

    function i(t, e, r) {
      return e in t ? Object.defineProperty(t, e, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = r, t;
    }

    function o(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    var s = r(3).Buffer,
        a = r(244).inspect,
        u = a && a.custom || "inspect";

    t.exports = function () {
      function t() {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, t), this.head = null, this.tail = null, this.length = 0;
      }

      var e, r, h;
      return e = t, (r = [{
        key: "push",
        value: function value(t) {
          var e = {
            data: t,
            next: null
          };
          this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;
        }
      }, {
        key: "unshift",
        value: function value(t) {
          var e = {
            data: t,
            next: this.head
          };
          0 === this.length && (this.tail = e), this.head = e, ++this.length;
        }
      }, {
        key: "shift",
        value: function value() {
          if (0 !== this.length) {
            var t = this.head.data;
            return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
          }
        }
      }, {
        key: "clear",
        value: function value() {
          this.head = this.tail = null, this.length = 0;
        }
      }, {
        key: "join",
        value: function value(t) {
          if (0 === this.length) return "";

          for (var e = this.head, r = "" + e.data; e = e.next;) {
            r += t + e.data;
          }

          return r;
        }
      }, {
        key: "concat",
        value: function value(t) {
          if (0 === this.length) return s.alloc(0);

          for (var e, r, n, i = s.allocUnsafe(t >>> 0), o = this.head, a = 0; o;) {
            e = o.data, r = i, n = a, s.prototype.copy.call(e, r, n), a += o.data.length, o = o.next;
          }

          return i;
        }
      }, {
        key: "consume",
        value: function value(t, e) {
          var r;
          return t < this.head.data.length ? (r = this.head.data.slice(0, t), this.head.data = this.head.data.slice(t)) : r = t === this.head.data.length ? this.shift() : e ? this._getString(t) : this._getBuffer(t), r;
        }
      }, {
        key: "first",
        value: function value() {
          return this.head.data;
        }
      }, {
        key: "_getString",
        value: function value(t) {
          var e = this.head,
              r = 1,
              n = e.data;

          for (t -= n.length; e = e.next;) {
            var i = e.data,
                o = t > i.length ? i.length : t;

            if (o === i.length ? n += i : n += i.slice(0, t), 0 == (t -= o)) {
              o === i.length ? (++r, e.next ? this.head = e.next : this.head = this.tail = null) : (this.head = e, e.data = i.slice(o));
              break;
            }

            ++r;
          }

          return this.length -= r, n;
        }
      }, {
        key: "_getBuffer",
        value: function value(t) {
          var e = s.allocUnsafe(t),
              r = this.head,
              n = 1;

          for (r.data.copy(e), t -= r.data.length; r = r.next;) {
            var i = r.data,
                o = t > i.length ? i.length : t;

            if (i.copy(e, e.length - t, 0, o), 0 == (t -= o)) {
              o === i.length ? (++n, r.next ? this.head = r.next : this.head = this.tail = null) : (this.head = r, r.data = i.slice(o));
              break;
            }

            ++n;
          }

          return this.length -= n, e;
        }
      }, {
        key: u,
        value: function value(t, e) {
          return a(this, function (t) {
            for (var e = 1; e < arguments.length; e++) {
              var r = null != arguments[e] ? arguments[e] : {};
              e % 2 ? n(Object(r), !0).forEach(function (e) {
                i(t, e, r[e]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function (e) {
                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));
              });
            }

            return t;
          }({}, e, {
            depth: 0,
            customInspect: !1
          }));
        }
      }]) && o(e.prototype, r), h && o(e, h), t;
    }();
  }, function (t, e) {}, function (t, e, r) {
    "use strict";

    (function (e) {
      var n;

      function i(t, e, r) {
        return e in t ? Object.defineProperty(t, e, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }) : t[e] = r, t;
      }

      var o = r(74),
          s = Symbol("lastResolve"),
          a = Symbol("lastReject"),
          u = Symbol("error"),
          h = Symbol("ended"),
          f = Symbol("lastPromise"),
          c = Symbol("handlePromise"),
          l = Symbol("stream");

      function d(t, e) {
        return {
          value: t,
          done: e
        };
      }

      function p(t) {
        var e = t[s];

        if (null !== e) {
          var r = t[l].read();
          null !== r && (t[f] = null, t[s] = null, t[a] = null, e(d(r, !1)));
        }
      }

      function y(t) {
        e.nextTick(p, t);
      }

      var m = Object.getPrototypeOf(function () {}),
          b = Object.setPrototypeOf((i(n = {
        get stream() {
          return this[l];
        },

        next: function next() {
          var t = this,
              r = this[u];
          if (null !== r) return Promise.reject(r);
          if (this[h]) return Promise.resolve(d(void 0, !0));
          if (this[l].destroyed) return new Promise(function (r, n) {
            e.nextTick(function () {
              t[u] ? n(t[u]) : r(d(void 0, !0));
            });
          });
          var n,
              i = this[f];
          if (i) n = new Promise(function (t, e) {
            return function (r, n) {
              t.then(function () {
                e[h] ? r(d(void 0, !0)) : e[c](r, n);
              }, n);
            };
          }(i, this));else {
            var o = this[l].read();
            if (null !== o) return Promise.resolve(d(o, !1));
            n = new Promise(this[c]);
          }
          return this[f] = n, n;
        }
      }, Symbol.asyncIterator, function () {
        return this;
      }), i(n, "return", function () {
        var t = this;
        return new Promise(function (e, r) {
          t[l].destroy(null, function (t) {
            t ? r(t) : e(d(void 0, !0));
          });
        });
      }), n), m);

      t.exports = function (t) {
        var e,
            r = Object.create(b, (i(e = {}, l, {
          value: t,
          writable: !0
        }), i(e, s, {
          value: null,
          writable: !0
        }), i(e, a, {
          value: null,
          writable: !0
        }), i(e, u, {
          value: null,
          writable: !0
        }), i(e, h, {
          value: t._readableState.endEmitted,
          writable: !0
        }), i(e, c, {
          value: function value(t, e) {
            var n = r[l].read();
            n ? (r[f] = null, r[s] = null, r[a] = null, t(d(n, !1))) : (r[s] = t, r[a] = e);
          },
          writable: !0
        }), e));
        return r[f] = null, o(t, function (t) {
          if (t && "ERR_STREAM_PREMATURE_CLOSE" !== t.code) {
            var e = r[a];
            return null !== e && (r[f] = null, r[s] = null, r[a] = null, e(t)), void (r[u] = t);
          }

          var n = r[s];
          null !== n && (r[f] = null, r[s] = null, r[a] = null, n(d(void 0, !0))), r[h] = !0;
        }), t.on("readable", y.bind(null, r)), r;
      };
    }).call(this, r(5));
  }, function (t, e) {
    t.exports = function () {
      throw new Error("Readable.from is not available in the browser");
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = i;
    var n = r(135);

    function i(t) {
      if (!(this instanceof i)) return new i(t);
      n.call(this, t);
    }

    r(0)(i, n), i.prototype._transform = function (t, e, r) {
      r(null, t);
    };
  }, function (t, e, r) {
    "use strict";

    var n;
    var i = r(32).codes,
        o = i.ERR_MISSING_ARGS,
        s = i.ERR_STREAM_DESTROYED;

    function a(t) {
      if (t) throw t;
    }

    function u(t, e, i, o) {
      o = function (t) {
        var e = !1;
        return function () {
          e || (e = !0, t.apply(void 0, arguments));
        };
      }(o);

      var a = !1;
      t.on("close", function () {
        a = !0;
      }), void 0 === n && (n = r(74)), n(t, {
        readable: e,
        writable: i
      }, function (t) {
        if (t) return o(t);
        a = !0, o();
      });
      var u = !1;
      return function (e) {
        if (!a && !u) return u = !0, function (t) {
          return t.setHeader && "function" == typeof t.abort;
        }(t) ? t.abort() : "function" == typeof t.destroy ? t.destroy() : void o(e || new s("pipe"));
      };
    }

    function h(t) {
      t();
    }

    function f(t, e) {
      return t.pipe(e);
    }

    function c(t) {
      return t.length ? "function" != typeof t[t.length - 1] ? a : t.pop() : a;
    }

    t.exports = function () {
      for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) {
        e[r] = arguments[r];
      }

      var n,
          i = c(e);
      if (Array.isArray(e[0]) && (e = e[0]), e.length < 2) throw new o("streams");
      var s = e.map(function (t, r) {
        var o = r < e.length - 1;
        return u(t, o, r > 0, function (t) {
          n || (n = t), t && s.forEach(h), o || (s.forEach(h), i(n));
        });
      });
      return e.reduce(f);
    };
  }, function (t, e, r) {
    var n = r(73).Buffer,
        i = r(112),
        o = r(75),
        s = r(77).ec,
        a = r(76),
        u = r(52),
        h = r(147);

    function f(t, e, r, o) {
      if ((t = n.from(t.toArray())).length < e.byteLength()) {
        var s = n.alloc(e.byteLength() - t.length);
        t = n.concat([s, t]);
      }

      var a = r.length,
          u = function (t, e) {
        t = (t = c(t, e)).mod(e);
        var r = n.from(t.toArray());

        if (r.length < e.byteLength()) {
          var i = n.alloc(e.byteLength() - r.length);
          r = n.concat([i, r]);
        }

        return r;
      }(r, e),
          h = n.alloc(a);

      h.fill(1);
      var f = n.alloc(a);
      return f = i(o, f).update(h).update(n.from([0])).update(t).update(u).digest(), h = i(o, f).update(h).digest(), {
        k: f = i(o, f).update(h).update(n.from([1])).update(t).update(u).digest(),
        v: h = i(o, f).update(h).digest()
      };
    }

    function c(t, e) {
      var r = new a(t),
          n = (t.length << 3) - e.bitLength();
      return n > 0 && r.ishrn(n), r;
    }

    function l(t, e, r) {
      var o, s;

      do {
        for (o = n.alloc(0); 8 * o.length < t.bitLength();) {
          e.v = i(r, e.k).update(e.v).digest(), o = n.concat([o, e.v]);
        }

        s = c(o, t), e.k = i(r, e.k).update(e.v).update(n.from([0])).digest(), e.v = i(r, e.k).update(e.v).digest();
      } while (-1 !== s.cmp(t));

      return s;
    }

    function d(t, e, r, n) {
      return t.toRed(a.mont(r)).redPow(e).fromRed().mod(n);
    }

    t.exports = function (t, e, r, i, p) {
      var y = u(e);

      if (y.curve) {
        if ("ecdsa" !== i && "ecdsa/rsa" !== i) throw new Error("wrong private key type");
        return function (t, e) {
          var r = h[e.curve.join(".")];
          if (!r) throw new Error("unknown curve " + e.curve.join("."));
          var i = new s(r).keyFromPrivate(e.privateKey).sign(t);
          return n.from(i.toDER());
        }(t, y);
      }

      if ("dsa" === y.type) {
        if ("dsa" !== i) throw new Error("wrong private key type");
        return function (t, e, r) {
          var i,
              o = e.params.priv_key,
              s = e.params.p,
              u = e.params.q,
              h = e.params.g,
              p = new a(0),
              y = c(t, u).mod(u),
              m = !1,
              b = f(o, u, t, r);

          for (; !1 === m;) {
            i = l(u, b, r), p = d(h, i, s, u), 0 === (m = i.invm(u).imul(y.add(o.mul(p))).mod(u)).cmpn(0) && (m = !1, p = new a(0));
          }

          return function (t, e) {
            t = t.toArray(), e = e.toArray(), 128 & t[0] && (t = [0].concat(t));
            128 & e[0] && (e = [0].concat(e));
            var r = [48, t.length + e.length + 4, 2, t.length];
            return r = r.concat(t, [2, e.length], e), n.from(r);
          }(p, m);
        }(t, y, r);
      }

      if ("rsa" !== i && "ecdsa/rsa" !== i) throw new Error("wrong private key type");
      t = n.concat([p, t]);

      for (var m = y.modulus.byteLength(), b = [0, 1]; t.length + b.length + 1 < m;) {
        b.push(255);
      }

      b.push(0);

      for (var v = -1; ++v < t.length;) {
        b.push(t[v]);
      }

      return o(b, y);
    }, t.exports.getKey = f, t.exports.makeKey = l;
  }, function (t, e) {}, function (t) {
    t.exports = JSON.parse('{"name":"elliptic","version":"6.5.4","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}}');
  }, function (t, e) {}, function (t, e, r) {
    "use strict";

    var n = r(13),
        i = r(19),
        o = r(0),
        s = r(51),
        a = n.assert;

    function u(t) {
      s.call(this, "short", t), this.a = new i(t.a, 16).toRed(this.red), this.b = new i(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
    }

    function h(t, e, r, n) {
      s.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
    }

    function f(t, e, r, n) {
      s.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = new i(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
    }

    o(u, s), t.exports = u, u.prototype._getEndomorphism = function (t) {
      if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
        var e, r;
        if (t.beta) e = new i(t.beta, 16).toRed(this.red);else {
          var n = this._getEndoRoots(this.p);

          e = (e = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
        }
        if (t.lambda) r = new i(t.lambda, 16);else {
          var o = this._getEndoRoots(this.n);

          0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(e)) ? r = o[0] : (r = o[1], a(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))));
        }
        return {
          beta: e,
          lambda: r,
          basis: t.basis ? t.basis.map(function (t) {
            return {
              a: new i(t.a, 16),
              b: new i(t.b, 16)
            };
          }) : this._getEndoBasis(r)
        };
      }
    }, u.prototype._getEndoRoots = function (t) {
      var e = t === this.p ? this.red : i.mont(t),
          r = new i(2).toRed(e).redInvm(),
          n = r.redNeg(),
          o = new i(3).toRed(e).redNeg().redSqrt().redMul(r);
      return [n.redAdd(o).fromRed(), n.redSub(o).fromRed()];
    }, u.prototype._getEndoBasis = function (t) {
      for (var e, r, n, o, s, a, u, h, f, c = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), l = t, d = this.n.clone(), p = new i(1), y = new i(0), m = new i(0), b = new i(1), v = 0; 0 !== l.cmpn(0);) {
        var g = d.div(l);
        h = d.sub(g.mul(l)), f = m.sub(g.mul(p));
        var w = b.sub(g.mul(y));
        if (!n && h.cmp(c) < 0) e = u.neg(), r = p, n = h.neg(), o = f;else if (n && 2 == ++v) break;
        u = h, d = l, l = h, m = p, p = f, b = y, y = w;
      }

      s = h.neg(), a = f;

      var _ = n.sqr().add(o.sqr());

      return s.sqr().add(a.sqr()).cmp(_) >= 0 && (s = e, a = r), n.negative && (n = n.neg(), o = o.neg()), s.negative && (s = s.neg(), a = a.neg()), [{
        a: n,
        b: o
      }, {
        a: s,
        b: a
      }];
    }, u.prototype._endoSplit = function (t) {
      var e = this.endo.basis,
          r = e[0],
          n = e[1],
          i = n.b.mul(t).divRound(this.n),
          o = r.b.neg().mul(t).divRound(this.n),
          s = i.mul(r.a),
          a = o.mul(n.a),
          u = i.mul(r.b),
          h = o.mul(n.b);
      return {
        k1: t.sub(s).sub(a),
        k2: u.add(h).neg()
      };
    }, u.prototype.pointFromX = function (t, e) {
      (t = new i(t, 16)).red || (t = t.toRed(this.red));
      var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
          n = r.redSqrt();
      if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
      var o = n.fromRed().isOdd();
      return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n);
    }, u.prototype.validate = function (t) {
      if (t.inf) return !0;
      var e = t.x,
          r = t.y,
          n = this.a.redMul(e),
          i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
      return 0 === r.redSqr().redISub(i).cmpn(0);
    }, u.prototype._endoWnafMulAdd = function (t, e, r) {
      for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
        var s = this._endoSplit(e[o]),
            a = t[o],
            u = a._getBeta();

        s.k1.negative && (s.k1.ineg(), a = a.neg(!0)), s.k2.negative && (s.k2.ineg(), u = u.neg(!0)), n[2 * o] = a, n[2 * o + 1] = u, i[2 * o] = s.k1, i[2 * o + 1] = s.k2;
      }

      for (var h = this._wnafMulAdd(1, n, i, 2 * o, r), f = 0; f < 2 * o; f++) {
        n[f] = null, i[f] = null;
      }

      return h;
    }, o(h, s.BasePoint), u.prototype.point = function (t, e, r) {
      return new h(this, t, e, r);
    }, u.prototype.pointFromJSON = function (t, e) {
      return h.fromJSON(this, t, e);
    }, h.prototype._getBeta = function () {
      if (this.curve.endo) {
        var t = this.precomputed;
        if (t && t.beta) return t.beta;
        var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);

        if (t) {
          var r = this.curve,
              n = function n(t) {
            return r.point(t.x.redMul(r.endo.beta), t.y);
          };

          t.beta = e, e.precomputed = {
            beta: null,
            naf: t.naf && {
              wnd: t.naf.wnd,
              points: t.naf.points.map(n)
            },
            doubles: t.doubles && {
              step: t.doubles.step,
              points: t.doubles.points.map(n)
            }
          };
        }

        return e;
      }
    }, h.prototype.toJSON = function () {
      return this.precomputed ? [this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1)
        }
      }] : [this.x, this.y];
    }, h.fromJSON = function (t, e, r) {
      "string" == typeof e && (e = JSON.parse(e));
      var n = t.point(e[0], e[1], r);
      if (!e[2]) return n;

      function i(e) {
        return t.point(e[0], e[1], r);
      }

      var o = e[2];
      return n.precomputed = {
        beta: null,
        doubles: o.doubles && {
          step: o.doubles.step,
          points: [n].concat(o.doubles.points.map(i))
        },
        naf: o.naf && {
          wnd: o.naf.wnd,
          points: [n].concat(o.naf.points.map(i))
        }
      }, n;
    }, h.prototype.inspect = function () {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    }, h.prototype.isInfinity = function () {
      return this.inf;
    }, h.prototype.add = function (t) {
      if (this.inf) return t;
      if (t.inf) return this;
      if (this.eq(t)) return this.dbl();
      if (this.neg().eq(t)) return this.curve.point(null, null);
      if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
      var e = this.y.redSub(t.y);
      0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
      var r = e.redSqr().redISub(this.x).redISub(t.x),
          n = e.redMul(this.x.redSub(r)).redISub(this.y);
      return this.curve.point(r, n);
    }, h.prototype.dbl = function () {
      if (this.inf) return this;
      var t = this.y.redAdd(this.y);
      if (0 === t.cmpn(0)) return this.curve.point(null, null);
      var e = this.curve.a,
          r = this.x.redSqr(),
          n = t.redInvm(),
          i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),
          o = i.redSqr().redISub(this.x.redAdd(this.x)),
          s = i.redMul(this.x.redSub(o)).redISub(this.y);
      return this.curve.point(o, s);
    }, h.prototype.getX = function () {
      return this.x.fromRed();
    }, h.prototype.getY = function () {
      return this.y.fromRed();
    }, h.prototype.mul = function (t) {
      return t = new i(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);
    }, h.prototype.mulAdd = function (t, e, r) {
      var n = [this, e],
          i = [t, r];
      return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2);
    }, h.prototype.jmulAdd = function (t, e, r) {
      var n = [this, e],
          i = [t, r];
      return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0);
    }, h.prototype.eq = function (t) {
      return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y));
    }, h.prototype.neg = function (t) {
      if (this.inf) return this;
      var e = this.curve.point(this.x, this.y.redNeg());

      if (t && this.precomputed) {
        var r = this.precomputed,
            n = function n(t) {
          return t.neg();
        };

        e.precomputed = {
          naf: r.naf && {
            wnd: r.naf.wnd,
            points: r.naf.points.map(n)
          },
          doubles: r.doubles && {
            step: r.doubles.step,
            points: r.doubles.points.map(n)
          }
        };
      }

      return e;
    }, h.prototype.toJ = function () {
      return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
    }, o(f, s.BasePoint), u.prototype.jpoint = function (t, e, r) {
      return new f(this, t, e, r);
    }, f.prototype.toP = function () {
      if (this.isInfinity()) return this.curve.point(null, null);
      var t = this.z.redInvm(),
          e = t.redSqr(),
          r = this.x.redMul(e),
          n = this.y.redMul(e).redMul(t);
      return this.curve.point(r, n);
    }, f.prototype.neg = function () {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    }, f.prototype.add = function (t) {
      if (this.isInfinity()) return t;
      if (t.isInfinity()) return this;
      var e = t.z.redSqr(),
          r = this.z.redSqr(),
          n = this.x.redMul(e),
          i = t.x.redMul(r),
          o = this.y.redMul(e.redMul(t.z)),
          s = t.y.redMul(r.redMul(this.z)),
          a = n.redSub(i),
          u = o.redSub(s);
      if (0 === a.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
      var h = a.redSqr(),
          f = h.redMul(a),
          c = n.redMul(h),
          l = u.redSqr().redIAdd(f).redISub(c).redISub(c),
          d = u.redMul(c.redISub(l)).redISub(o.redMul(f)),
          p = this.z.redMul(t.z).redMul(a);
      return this.curve.jpoint(l, d, p);
    }, f.prototype.mixedAdd = function (t) {
      if (this.isInfinity()) return t.toJ();
      if (t.isInfinity()) return this;
      var e = this.z.redSqr(),
          r = this.x,
          n = t.x.redMul(e),
          i = this.y,
          o = t.y.redMul(e).redMul(this.z),
          s = r.redSub(n),
          a = i.redSub(o);
      if (0 === s.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
      var u = s.redSqr(),
          h = u.redMul(s),
          f = r.redMul(u),
          c = a.redSqr().redIAdd(h).redISub(f).redISub(f),
          l = a.redMul(f.redISub(c)).redISub(i.redMul(h)),
          d = this.z.redMul(s);
      return this.curve.jpoint(c, l, d);
    }, f.prototype.dblp = function (t) {
      if (0 === t) return this;
      if (this.isInfinity()) return this;
      if (!t) return this.dbl();
      var e;

      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;

        for (e = 0; e < t; e++) {
          r = r.dbl();
        }

        return r;
      }

      var n = this.curve.a,
          i = this.curve.tinv,
          o = this.x,
          s = this.y,
          a = this.z,
          u = a.redSqr().redSqr(),
          h = s.redAdd(s);

      for (e = 0; e < t; e++) {
        var f = o.redSqr(),
            c = h.redSqr(),
            l = c.redSqr(),
            d = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),
            p = o.redMul(c),
            y = d.redSqr().redISub(p.redAdd(p)),
            m = p.redISub(y),
            b = d.redMul(m);
        b = b.redIAdd(b).redISub(l);
        var v = h.redMul(a);
        e + 1 < t && (u = u.redMul(l)), o = y, a = v, h = b;
      }

      return this.curve.jpoint(o, h.redMul(i), a);
    }, f.prototype.dbl = function () {
      return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
    }, f.prototype._zeroDbl = function () {
      var t, e, r;

      if (this.zOne) {
        var n = this.x.redSqr(),
            i = this.y.redSqr(),
            o = i.redSqr(),
            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
        s = s.redIAdd(s);
        var a = n.redAdd(n).redIAdd(n),
            u = a.redSqr().redISub(s).redISub(s),
            h = o.redIAdd(o);
        h = (h = h.redIAdd(h)).redIAdd(h), t = u, e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y);
      } else {
        var f = this.x.redSqr(),
            c = this.y.redSqr(),
            l = c.redSqr(),
            d = this.x.redAdd(c).redSqr().redISub(f).redISub(l);
        d = d.redIAdd(d);
        var p = f.redAdd(f).redIAdd(f),
            y = p.redSqr(),
            m = l.redIAdd(l);
        m = (m = m.redIAdd(m)).redIAdd(m), t = y.redISub(d).redISub(d), e = p.redMul(d.redISub(t)).redISub(m), r = (r = this.y.redMul(this.z)).redIAdd(r);
      }

      return this.curve.jpoint(t, e, r);
    }, f.prototype._threeDbl = function () {
      var t, e, r;

      if (this.zOne) {
        var n = this.x.redSqr(),
            i = this.y.redSqr(),
            o = i.redSqr(),
            s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
        s = s.redIAdd(s);
        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
            u = a.redSqr().redISub(s).redISub(s);
        t = u;
        var h = o.redIAdd(o);
        h = (h = h.redIAdd(h)).redIAdd(h), e = a.redMul(s.redISub(u)).redISub(h), r = this.y.redAdd(this.y);
      } else {
        var f = this.z.redSqr(),
            c = this.y.redSqr(),
            l = this.x.redMul(c),
            d = this.x.redSub(f).redMul(this.x.redAdd(f));
        d = d.redAdd(d).redIAdd(d);
        var p = l.redIAdd(l),
            y = (p = p.redIAdd(p)).redAdd(p);
        t = d.redSqr().redISub(y), r = this.y.redAdd(this.z).redSqr().redISub(c).redISub(f);
        var m = c.redSqr();
        m = (m = (m = m.redIAdd(m)).redIAdd(m)).redIAdd(m), e = d.redMul(p.redISub(t)).redISub(m);
      }

      return this.curve.jpoint(t, e, r);
    }, f.prototype._dbl = function () {
      var t = this.curve.a,
          e = this.x,
          r = this.y,
          n = this.z,
          i = n.redSqr().redSqr(),
          o = e.redSqr(),
          s = r.redSqr(),
          a = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),
          u = e.redAdd(e),
          h = (u = u.redIAdd(u)).redMul(s),
          f = a.redSqr().redISub(h.redAdd(h)),
          c = h.redISub(f),
          l = s.redSqr();
      l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
      var d = a.redMul(c).redISub(l),
          p = r.redAdd(r).redMul(n);
      return this.curve.jpoint(f, d, p);
    }, f.prototype.trpl = function () {
      if (!this.curve.zeroA) return this.dbl().add(this);
      var t = this.x.redSqr(),
          e = this.y.redSqr(),
          r = this.z.redSqr(),
          n = e.redSqr(),
          i = t.redAdd(t).redIAdd(t),
          o = i.redSqr(),
          s = this.x.redAdd(e).redSqr().redISub(t).redISub(n),
          a = (s = (s = (s = s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr(),
          u = n.redIAdd(n);
      u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
      var h = i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(u),
          f = e.redMul(h);
      f = (f = f.redIAdd(f)).redIAdd(f);
      var c = this.x.redMul(a).redISub(f);
      c = (c = c.redIAdd(c)).redIAdd(c);
      var l = this.y.redMul(h.redMul(u.redISub(h)).redISub(s.redMul(a)));
      l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
      var d = this.z.redAdd(s).redSqr().redISub(r).redISub(a);
      return this.curve.jpoint(c, l, d);
    }, f.prototype.mul = function (t, e) {
      return t = new i(t, e), this.curve._wnafMul(this, t);
    }, f.prototype.eq = function (t) {
      if ("affine" === t.type) return this.eq(t.toJ());
      if (this === t) return !0;
      var e = this.z.redSqr(),
          r = t.z.redSqr();
      if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
      var n = e.redMul(this.z),
          i = r.redMul(t.z);
      return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0);
    }, f.prototype.eqXToP = function (t) {
      var e = this.z.redSqr(),
          r = t.toRed(this.curve.red).redMul(e);
      if (0 === this.x.cmp(r)) return !0;

      for (var n = t.clone(), i = this.curve.redN.redMul(e);;) {
        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0;
      }
    }, f.prototype.inspect = function () {
      return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    }, f.prototype.isInfinity = function () {
      return 0 === this.z.cmpn(0);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(19),
        i = r(0),
        o = r(51),
        s = r(13);

    function a(t) {
      o.call(this, "mont", t), this.a = new n(t.a, 16).toRed(this.red), this.b = new n(t.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }

    function u(t, e, r) {
      o.BasePoint.call(this, t, "projective"), null === e && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(e, 16), this.z = new n(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
    }

    i(a, o), t.exports = a, a.prototype.validate = function (t) {
      var e = t.normalize().x,
          r = e.redSqr(),
          n = r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);
      return 0 === n.redSqrt().redSqr().cmp(n);
    }, i(u, o.BasePoint), a.prototype.decodePoint = function (t, e) {
      return this.point(s.toArray(t, e), 1);
    }, a.prototype.point = function (t, e) {
      return new u(this, t, e);
    }, a.prototype.pointFromJSON = function (t) {
      return u.fromJSON(this, t);
    }, u.prototype.precompute = function () {}, u.prototype._encode = function () {
      return this.getX().toArray("be", this.curve.p.byteLength());
    }, u.fromJSON = function (t, e) {
      return new u(t, e[0], e[1] || t.one);
    }, u.prototype.inspect = function () {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    }, u.prototype.isInfinity = function () {
      return 0 === this.z.cmpn(0);
    }, u.prototype.dbl = function () {
      var t = this.x.redAdd(this.z).redSqr(),
          e = this.x.redSub(this.z).redSqr(),
          r = t.redSub(e),
          n = t.redMul(e),
          i = r.redMul(e.redAdd(this.curve.a24.redMul(r)));
      return this.curve.point(n, i);
    }, u.prototype.add = function () {
      throw new Error("Not supported on Montgomery curve");
    }, u.prototype.diffAdd = function (t, e) {
      var r = this.x.redAdd(this.z),
          n = this.x.redSub(this.z),
          i = t.x.redAdd(t.z),
          o = t.x.redSub(t.z).redMul(r),
          s = i.redMul(n),
          a = e.z.redMul(o.redAdd(s).redSqr()),
          u = e.x.redMul(o.redISub(s).redSqr());
      return this.curve.point(a, u);
    }, u.prototype.mul = function (t) {
      for (var e = t.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== e.cmpn(0); e.iushrn(1)) {
        i.push(e.andln(1));
      }

      for (var o = i.length - 1; o >= 0; o--) {
        0 === i[o] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
      }

      return n;
    }, u.prototype.mulAdd = function () {
      throw new Error("Not supported on Montgomery curve");
    }, u.prototype.jumlAdd = function () {
      throw new Error("Not supported on Montgomery curve");
    }, u.prototype.eq = function (t) {
      return 0 === this.getX().cmp(t.getX());
    }, u.prototype.normalize = function () {
      return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
    }, u.prototype.getX = function () {
      return this.normalize(), this.x.fromRed();
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(13),
        i = r(19),
        o = r(0),
        s = r(51),
        a = n.assert;

    function u(t) {
      this.twisted = 1 != (0 | t.a), this.mOneA = this.twisted && -1 == (0 | t.a), this.extended = this.mOneA, s.call(this, "edwards", t), this.a = new i(t.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(t.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(t.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), a(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | t.c);
    }

    function h(t, e, r, n, o) {
      s.BasePoint.call(this, t, "projective"), null === e && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = n ? new i(n, 16) : this.curve.one, this.t = o && new i(o, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
    }

    o(u, s), t.exports = u, u.prototype._mulA = function (t) {
      return this.mOneA ? t.redNeg() : this.a.redMul(t);
    }, u.prototype._mulC = function (t) {
      return this.oneC ? t : this.c.redMul(t);
    }, u.prototype.jpoint = function (t, e, r, n) {
      return this.point(t, e, r, n);
    }, u.prototype.pointFromX = function (t, e) {
      (t = new i(t, 16)).red || (t = t.toRed(this.red));
      var r = t.redSqr(),
          n = this.c2.redSub(this.a.redMul(r)),
          o = this.one.redSub(this.c2.redMul(this.d).redMul(r)),
          s = n.redMul(o.redInvm()),
          a = s.redSqrt();
      if (0 !== a.redSqr().redSub(s).cmp(this.zero)) throw new Error("invalid point");
      var u = a.fromRed().isOdd();
      return (e && !u || !e && u) && (a = a.redNeg()), this.point(t, a);
    }, u.prototype.pointFromY = function (t, e) {
      (t = new i(t, 16)).red || (t = t.toRed(this.red));
      var r = t.redSqr(),
          n = r.redSub(this.c2),
          o = r.redMul(this.d).redMul(this.c2).redSub(this.a),
          s = n.redMul(o.redInvm());

      if (0 === s.cmp(this.zero)) {
        if (e) throw new Error("invalid point");
        return this.point(this.zero, t);
      }

      var a = s.redSqrt();
      if (0 !== a.redSqr().redSub(s).cmp(this.zero)) throw new Error("invalid point");
      return a.fromRed().isOdd() !== e && (a = a.redNeg()), this.point(a, t);
    }, u.prototype.validate = function (t) {
      if (t.isInfinity()) return !0;
      t.normalize();
      var e = t.x.redSqr(),
          r = t.y.redSqr(),
          n = e.redMul(this.a).redAdd(r),
          i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));
      return 0 === n.cmp(i);
    }, o(h, s.BasePoint), u.prototype.pointFromJSON = function (t) {
      return h.fromJSON(this, t);
    }, u.prototype.point = function (t, e, r, n) {
      return new h(this, t, e, r, n);
    }, h.fromJSON = function (t, e) {
      return new h(t, e[0], e[1], e[2]);
    }, h.prototype.inspect = function () {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    }, h.prototype.isInfinity = function () {
      return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
    }, h.prototype._extDbl = function () {
      var t = this.x.redSqr(),
          e = this.y.redSqr(),
          r = this.z.redSqr();
      r = r.redIAdd(r);

      var n = this.curve._mulA(t),
          i = this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),
          o = n.redAdd(e),
          s = o.redSub(r),
          a = n.redSub(e),
          u = i.redMul(s),
          h = o.redMul(a),
          f = i.redMul(a),
          c = s.redMul(o);

      return this.curve.point(u, h, c, f);
    }, h.prototype._projDbl = function () {
      var t,
          e,
          r,
          n,
          i,
          o,
          s = this.x.redAdd(this.y).redSqr(),
          a = this.x.redSqr(),
          u = this.y.redSqr();

      if (this.curve.twisted) {
        var h = (n = this.curve._mulA(a)).redAdd(u);

        this.zOne ? (t = s.redSub(a).redSub(u).redMul(h.redSub(this.curve.two)), e = h.redMul(n.redSub(u)), r = h.redSqr().redSub(h).redSub(h)) : (i = this.z.redSqr(), o = h.redSub(i).redISub(i), t = s.redSub(a).redISub(u).redMul(o), e = h.redMul(n.redSub(u)), r = h.redMul(o));
      } else n = a.redAdd(u), i = this.curve._mulC(this.z).redSqr(), o = n.redSub(i).redSub(i), t = this.curve._mulC(s.redISub(n)).redMul(o), e = this.curve._mulC(n).redMul(a.redISub(u)), r = n.redMul(o);

      return this.curve.point(t, e, r);
    }, h.prototype.dbl = function () {
      return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
    }, h.prototype._extAdd = function (t) {
      var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)),
          r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),
          n = this.t.redMul(this.curve.dd).redMul(t.t),
          i = this.z.redMul(t.z.redAdd(t.z)),
          o = r.redSub(e),
          s = i.redSub(n),
          a = i.redAdd(n),
          u = r.redAdd(e),
          h = o.redMul(s),
          f = a.redMul(u),
          c = o.redMul(u),
          l = s.redMul(a);
      return this.curve.point(h, f, l, c);
    }, h.prototype._projAdd = function (t) {
      var e,
          r,
          n = this.z.redMul(t.z),
          i = n.redSqr(),
          o = this.x.redMul(t.x),
          s = this.y.redMul(t.y),
          a = this.curve.d.redMul(o).redMul(s),
          u = i.redSub(a),
          h = i.redAdd(a),
          f = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(o).redISub(s),
          c = n.redMul(u).redMul(f);
      return this.curve.twisted ? (e = n.redMul(h).redMul(s.redSub(this.curve._mulA(o))), r = u.redMul(h)) : (e = n.redMul(h).redMul(s.redSub(o)), r = this.curve._mulC(u).redMul(h)), this.curve.point(c, e, r);
    }, h.prototype.add = function (t) {
      return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t);
    }, h.prototype.mul = function (t) {
      return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t);
    }, h.prototype.mulAdd = function (t, e, r) {
      return this.curve._wnafMulAdd(1, [this, e], [t, r], 2, !1);
    }, h.prototype.jmulAdd = function (t, e, r) {
      return this.curve._wnafMulAdd(1, [this, e], [t, r], 2, !0);
    }, h.prototype.normalize = function () {
      if (this.zOne) return this;
      var t = this.z.redInvm();
      return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this;
    }, h.prototype.neg = function () {
      return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
    }, h.prototype.getX = function () {
      return this.normalize(), this.x.fromRed();
    }, h.prototype.getY = function () {
      return this.normalize(), this.y.fromRed();
    }, h.prototype.eq = function (t) {
      return this === t || 0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY());
    }, h.prototype.eqXToP = function (t) {
      var e = t.toRed(this.curve.red).redMul(this.z);
      if (0 === this.x.cmp(e)) return !0;

      for (var r = t.clone(), n = this.curve.redN.redMul(this.z);;) {
        if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
        if (e.redIAdd(n), 0 === this.x.cmp(e)) return !0;
      }
    }, h.prototype.toP = h.prototype.normalize, h.prototype.mixedAdd = h.prototype.add;
  }, function (t, e, r) {
    "use strict";

    e.sha1 = r(257), e.sha224 = r(258), e.sha256 = r(139), e.sha384 = r(259), e.sha512 = r(140);
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(42),
        o = r(138),
        s = n.rotl32,
        a = n.sum32,
        u = n.sum32_5,
        h = o.ft_1,
        f = i.BlockHash,
        c = [1518500249, 1859775393, 2400959708, 3395469782];

    function l() {
      if (!(this instanceof l)) return new l();
      f.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
    }

    n.inherits(l, f), t.exports = l, l.blockSize = 512, l.outSize = 160, l.hmacStrength = 80, l.padLength = 64, l.prototype._update = function (t, e) {
      for (var r = this.W, n = 0; n < 16; n++) {
        r[n] = t[e + n];
      }

      for (; n < r.length; n++) {
        r[n] = s(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
      }

      var i = this.h[0],
          o = this.h[1],
          f = this.h[2],
          l = this.h[3],
          d = this.h[4];

      for (n = 0; n < r.length; n++) {
        var p = ~~(n / 20),
            y = u(s(i, 5), h(p, o, f, l), d, r[n], c[p]);
        d = l, l = f, f = s(o, 30), o = i, i = y;
      }

      this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], o), this.h[2] = a(this.h[2], f), this.h[3] = a(this.h[3], l), this.h[4] = a(this.h[4], d);
    }, l.prototype._digest = function (t) {
      return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(139);

    function o() {
      if (!(this instanceof o)) return new o();
      i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
    }

    n.inherits(o, i), t.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function (t) {
      return "hex" === t ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(140);

    function o() {
      if (!(this instanceof o)) return new o();
      i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
    }

    n.inherits(o, i), t.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function (t) {
      return "hex" === t ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(42),
        o = n.rotl32,
        s = n.sum32,
        a = n.sum32_3,
        u = n.sum32_4,
        h = i.BlockHash;

    function f() {
      if (!(this instanceof f)) return new f();
      h.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
    }

    function c(t, e, r, n) {
      return t <= 15 ? e ^ r ^ n : t <= 31 ? e & r | ~e & n : t <= 47 ? (e | ~r) ^ n : t <= 63 ? e & n | r & ~n : e ^ (r | ~n);
    }

    function l(t) {
      return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;
    }

    function d(t) {
      return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;
    }

    n.inherits(f, h), e.ripemd160 = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 192, f.padLength = 64, f.prototype._update = function (t, e) {
      for (var r = this.h[0], n = this.h[1], i = this.h[2], h = this.h[3], f = this.h[4], v = r, g = n, w = i, _ = h, M = f, S = 0; S < 80; S++) {
        var O = s(o(u(r, c(S, n, i, h), t[p[S] + e], l(S)), m[S]), f);
        r = f, f = h, h = o(i, 10), i = n, n = O, O = s(o(u(v, c(79 - S, g, w, _), t[y[S] + e], d(S)), b[S]), M), v = M, M = _, _ = o(w, 10), w = g, g = O;
      }

      O = a(this.h[1], i, _), this.h[1] = a(this.h[2], h, M), this.h[2] = a(this.h[3], f, v), this.h[3] = a(this.h[4], r, g), this.h[4] = a(this.h[0], n, w), this.h[0] = O;
    }, f.prototype._digest = function (t) {
      return "hex" === t ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
    };
    var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
        y = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
        m = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
        b = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
  }, function (t, e, r) {
    "use strict";

    var n = r(17),
        i = r(12);

    function o(t, e, r) {
      if (!(this instanceof o)) return new o(t, e, r);
      this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(e, r));
    }

    t.exports = o, o.prototype._init = function (t) {
      t.length > this.blockSize && (t = new this.Hash().update(t).digest()), i(t.length <= this.blockSize);

      for (var e = t.length; e < this.blockSize; e++) {
        t.push(0);
      }

      for (e = 0; e < t.length; e++) {
        t[e] ^= 54;
      }

      for (this.inner = new this.Hash().update(t), e = 0; e < t.length; e++) {
        t[e] ^= 106;
      }

      this.outer = new this.Hash().update(t);
    }, o.prototype.update = function (t, e) {
      return this.inner.update(t, e), this;
    }, o.prototype.digest = function (t) {
      return this.outer.update(this.inner.digest()), this.outer.digest(t);
    };
  }, function (t, e) {
    t.exports = {
      doubles: {
        step: 4,
        points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]
      },
      naf: {
        wnd: 7,
        points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]
      }
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(19),
        o = r(264),
        s = r(13),
        a = r(78),
        u = r(72),
        h = s.assert,
        f = r(265),
        c = r(266);

    function l(t) {
      if (!(this instanceof l)) return new l(t);
      "string" == typeof t && (h(Object.prototype.hasOwnProperty.call(a, t), "Unknown curve " + t), t = a[t]), t instanceof a.PresetCurve && (t = {
        curve: t
      }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash;
    }

    t.exports = l, l.prototype.keyPair = function (t) {
      return new f(this, t);
    }, l.prototype.keyFromPrivate = function (t, e) {
      return f.fromPrivate(this, t, e);
    }, l.prototype.keyFromPublic = function (t, e) {
      return f.fromPublic(this, t, e);
    }, l.prototype.genKeyPair = function (t) {
      t || (t = {});

      for (var e = new o({
        hash: this.hash,
        pers: t.pers,
        persEnc: t.persEnc || "utf8",
        entropy: t.entropy || u(this.hash.hmacStrength),
        entropyEnc: t.entropy && t.entropyEnc || "utf8",
        nonce: this.n.toArray()
      }), r = this.n.byteLength(), n = this.n.sub(new i(2));;) {
        var s = new i(e.generate(r));
        if (!(s.cmp(n) > 0)) return s.iaddn(1), this.keyFromPrivate(s);
      }
    }, l.prototype._truncateToN = function (t, e) {
      var r = 8 * t.byteLength() - this.n.bitLength();
      return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
    }, l.prototype.sign = function (t, e, r, s) {
      "object" === n(r) && (s = r, r = null), s || (s = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new i(t, 16));

      for (var a = this.n.byteLength(), u = e.getPrivate().toArray("be", a), h = t.toArray("be", a), f = new o({
        hash: this.hash,
        entropy: u,
        nonce: h,
        pers: s.pers,
        persEnc: s.persEnc || "utf8"
      }), l = this.n.sub(new i(1)), d = 0;; d++) {
        var p = s.k ? s.k(d) : new i(f.generate(this.n.byteLength()));

        if (!((p = this._truncateToN(p, !0)).cmpn(1) <= 0 || p.cmp(l) >= 0)) {
          var y = this.g.mul(p);

          if (!y.isInfinity()) {
            var m = y.getX(),
                b = m.umod(this.n);

            if (0 !== b.cmpn(0)) {
              var v = p.invm(this.n).mul(b.mul(e.getPrivate()).iadd(t));

              if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                var g = (y.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(b) ? 2 : 0);
                return s.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), g ^= 1), new c({
                  r: b,
                  s: v,
                  recoveryParam: g
                });
              }
            }
          }
        }
      }
    }, l.prototype.verify = function (t, e, r, n) {
      t = this._truncateToN(new i(t, 16)), r = this.keyFromPublic(r, n);
      var o = (e = new c(e, "hex")).r,
          s = e.s;
      if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
      var a,
          u = s.invm(this.n),
          h = u.mul(t).umod(this.n),
          f = u.mul(o).umod(this.n);
      return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(h, r.getPublic(), f)).isInfinity() && a.eqXToP(o) : !(a = this.g.mulAdd(h, r.getPublic(), f)).isInfinity() && 0 === a.getX().umod(this.n).cmp(o);
    }, l.prototype.recoverPubKey = function (t, e, r, n) {
      h((3 & r) === r, "The recovery param is more than two bits"), e = new c(e, n);
      var o = this.n,
          s = new i(t),
          a = e.r,
          u = e.s,
          f = 1 & r,
          l = r >> 1;
      if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l) throw new Error("Unable to find sencond key candinate");
      a = l ? this.curve.pointFromX(a.add(this.curve.n), f) : this.curve.pointFromX(a, f);
      var d = e.r.invm(o),
          p = o.sub(s).mul(d).umod(o),
          y = u.mul(d).umod(o);
      return this.g.mulAdd(p, a, y);
    }, l.prototype.getKeyRecoveryParam = function (t, e, r, n) {
      if (null !== (e = new c(e, n)).recoveryParam) return e.recoveryParam;

      for (var i = 0; i < 4; i++) {
        var o;

        try {
          o = this.recoverPubKey(t, e, i);
        } catch (t) {
          continue;
        }

        if (o.eq(r)) return i;
      }

      throw new Error("Unable to find valid recovery factor");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(79),
        i = r(136),
        o = r(12);

    function s(t) {
      if (!(this instanceof s)) return new s(t);
      this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
      var e = i.toArray(t.entropy, t.entropyEnc || "hex"),
          r = i.toArray(t.nonce, t.nonceEnc || "hex"),
          n = i.toArray(t.pers, t.persEnc || "hex");
      o(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n);
    }

    t.exports = s, s.prototype._init = function (t, e, r) {
      var n = t.concat(e).concat(r);
      this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);

      for (var i = 0; i < this.V.length; i++) {
        this.K[i] = 0, this.V[i] = 1;
      }

      this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
    }, s.prototype._hmac = function () {
      return new n.hmac(this.hash, this.K);
    }, s.prototype._update = function (t) {
      var e = this._hmac().update(this.V).update([0]);

      t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());
    }, s.prototype.reseed = function (t, e, r, n) {
      "string" != typeof e && (n = r, r = e, e = null), t = i.toArray(t, e), r = i.toArray(r, n), o(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1;
    }, s.prototype.generate = function (t, e, r, n) {
      if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
      "string" != typeof e && (n = r, r = e, e = null), r && (r = i.toArray(r, n || "hex"), this._update(r));

      for (var o = []; o.length < t;) {
        this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);
      }

      var s = o.slice(0, t);
      return this._update(r), this._reseed++, i.encode(s, e);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(19),
        i = r(13).assert;

    function o(t, e) {
      this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);
    }

    t.exports = o, o.fromPublic = function (t, e, r) {
      return e instanceof o ? e : new o(t, {
        pub: e,
        pubEnc: r
      });
    }, o.fromPrivate = function (t, e, r) {
      return e instanceof o ? e : new o(t, {
        priv: e,
        privEnc: r
      });
    }, o.prototype.validate = function () {
      var t = this.getPublic();
      return t.isInfinity() ? {
        result: !1,
        reason: "Invalid public key"
      } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
        result: !0,
        reason: null
      } : {
        result: !1,
        reason: "Public key * N != O"
      } : {
        result: !1,
        reason: "Public key is not a point"
      };
    }, o.prototype.getPublic = function (t, e) {
      return "string" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub;
    }, o.prototype.getPrivate = function (t) {
      return "hex" === t ? this.priv.toString(16, 2) : this.priv;
    }, o.prototype._importPrivate = function (t, e) {
      this.priv = new n(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n);
    }, o.prototype._importPublic = function (t, e) {
      if (t.x || t.y) return "mont" === this.ec.curve.type ? i(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(t.x && t.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(t.x, t.y));
      this.pub = this.ec.curve.decodePoint(t, e);
    }, o.prototype.derive = function (t) {
      return t.validate() || i(t.validate(), "public point not validated"), t.mul(this.priv).getX();
    }, o.prototype.sign = function (t, e, r) {
      return this.ec.sign(t, this, e, r);
    }, o.prototype.verify = function (t, e) {
      return this.ec.verify(t, e, this);
    }, o.prototype.inspect = function () {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(19),
        i = r(13),
        o = i.assert;

    function s(t, e) {
      if (t instanceof s) return t;
      this._importDER(t, e) || (o(t.r && t.s, "Signature without r or s"), this.r = new n(t.r, 16), this.s = new n(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam);
    }

    function a() {
      this.place = 0;
    }

    function u(t, e) {
      var r = t[e.place++];
      if (!(128 & r)) return r;
      var n = 15 & r;
      if (0 === n || n > 4) return !1;

      for (var i = 0, o = 0, s = e.place; o < n; o++, s++) {
        i <<= 8, i |= t[s], i >>>= 0;
      }

      return !(i <= 127) && (e.place = s, i);
    }

    function h(t) {
      for (var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;) {
        e++;
      }

      return 0 === e ? t : t.slice(e);
    }

    function f(t, e) {
      if (e < 128) t.push(e);else {
        var r = 1 + (Math.log(e) / Math.LN2 >>> 3);

        for (t.push(128 | r); --r;) {
          t.push(e >>> (r << 3) & 255);
        }

        t.push(e);
      }
    }

    t.exports = s, s.prototype._importDER = function (t, e) {
      t = i.toArray(t, e);
      var r = new a();
      if (48 !== t[r.place++]) return !1;
      var o = u(t, r);
      if (!1 === o) return !1;
      if (o + r.place !== t.length) return !1;
      if (2 !== t[r.place++]) return !1;
      var s = u(t, r);
      if (!1 === s) return !1;
      var h = t.slice(r.place, s + r.place);
      if (r.place += s, 2 !== t[r.place++]) return !1;
      var f = u(t, r);
      if (!1 === f) return !1;
      if (t.length !== f + r.place) return !1;
      var c = t.slice(r.place, f + r.place);

      if (0 === h[0]) {
        if (!(128 & h[1])) return !1;
        h = h.slice(1);
      }

      if (0 === c[0]) {
        if (!(128 & c[1])) return !1;
        c = c.slice(1);
      }

      return this.r = new n(h), this.s = new n(c), this.recoveryParam = null, !0;
    }, s.prototype.toDER = function (t) {
      var e = this.r.toArray(),
          r = this.s.toArray();

      for (128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = h(e), r = h(r); !(r[0] || 128 & r[1]);) {
        r = r.slice(1);
      }

      var n = [2];
      f(n, e.length), (n = n.concat(e)).push(2), f(n, r.length);
      var o = n.concat(r),
          s = [48];
      return f(s, o.length), s = s.concat(o), i.encode(s, t);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(79),
        i = r(78),
        o = r(13),
        s = o.assert,
        a = o.parseBytes,
        u = r(268),
        h = r(269);

    function f(t) {
      if (s("ed25519" === t, "only tested with ed25519 so far"), !(this instanceof f)) return new f(t);
      t = i[t].curve, this.curve = t, this.g = t.g, this.g.precompute(t.n.bitLength() + 1), this.pointClass = t.point().constructor, this.encodingLength = Math.ceil(t.n.bitLength() / 8), this.hash = n.sha512;
    }

    t.exports = f, f.prototype.sign = function (t, e) {
      t = a(t);
      var r = this.keyFromSecret(e),
          n = this.hashInt(r.messagePrefix(), t),
          i = this.g.mul(n),
          o = this.encodePoint(i),
          s = this.hashInt(o, r.pubBytes(), t).mul(r.priv()),
          u = n.add(s).umod(this.curve.n);
      return this.makeSignature({
        R: i,
        S: u,
        Rencoded: o
      });
    }, f.prototype.verify = function (t, e, r) {
      t = a(t), e = this.makeSignature(e);
      var n = this.keyFromPublic(r),
          i = this.hashInt(e.Rencoded(), n.pubBytes(), t),
          o = this.g.mul(e.S());
      return e.R().add(n.pub().mul(i)).eq(o);
    }, f.prototype.hashInt = function () {
      for (var t = this.hash(), e = 0; e < arguments.length; e++) {
        t.update(arguments[e]);
      }

      return o.intFromLE(t.digest()).umod(this.curve.n);
    }, f.prototype.keyFromPublic = function (t) {
      return u.fromPublic(this, t);
    }, f.prototype.keyFromSecret = function (t) {
      return u.fromSecret(this, t);
    }, f.prototype.makeSignature = function (t) {
      return t instanceof h ? t : new h(this, t);
    }, f.prototype.encodePoint = function (t) {
      var e = t.getY().toArray("le", this.encodingLength);
      return e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, e;
    }, f.prototype.decodePoint = function (t) {
      var e = (t = o.parseBytes(t)).length - 1,
          r = t.slice(0, e).concat(-129 & t[e]),
          n = 0 != (128 & t[e]),
          i = o.intFromLE(r);
      return this.curve.pointFromY(i, n);
    }, f.prototype.encodeInt = function (t) {
      return t.toArray("le", this.encodingLength);
    }, f.prototype.decodeInt = function (t) {
      return o.intFromLE(t);
    }, f.prototype.isPoint = function (t) {
      return t instanceof this.pointClass;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(13),
        i = n.assert,
        o = n.parseBytes,
        s = n.cachedProperty;

    function a(t, e) {
      this.eddsa = t, this._secret = o(e.secret), t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = o(e.pub);
    }

    a.fromPublic = function (t, e) {
      return e instanceof a ? e : new a(t, {
        pub: e
      });
    }, a.fromSecret = function (t, e) {
      return e instanceof a ? e : new a(t, {
        secret: e
      });
    }, a.prototype.secret = function () {
      return this._secret;
    }, s(a, "pubBytes", function () {
      return this.eddsa.encodePoint(this.pub());
    }), s(a, "pub", function () {
      return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
    }), s(a, "privBytes", function () {
      var t = this.eddsa,
          e = this.hash(),
          r = t.encodingLength - 1,
          n = e.slice(0, t.encodingLength);
      return n[0] &= 248, n[r] &= 127, n[r] |= 64, n;
    }), s(a, "priv", function () {
      return this.eddsa.decodeInt(this.privBytes());
    }), s(a, "hash", function () {
      return this.eddsa.hash().update(this.secret()).digest();
    }), s(a, "messagePrefix", function () {
      return this.hash().slice(this.eddsa.encodingLength);
    }), a.prototype.sign = function (t) {
      return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this);
    }, a.prototype.verify = function (t, e) {
      return this.eddsa.verify(t, e, this);
    }, a.prototype.getSecret = function (t) {
      return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), t);
    }, a.prototype.getPublic = function (t) {
      return n.encode(this.pubBytes(), t);
    }, t.exports = a;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(19),
        o = r(13),
        s = o.assert,
        a = o.cachedProperty,
        u = o.parseBytes;

    function h(t, e) {
      this.eddsa = t, "object" !== n(e) && (e = u(e)), Array.isArray(e) && (e = {
        R: e.slice(0, t.encodingLength),
        S: e.slice(t.encodingLength)
      }), s(e.R && e.S, "Signature without R or S"), t.isPoint(e.R) && (this._R = e.R), e.S instanceof i && (this._S = e.S), this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded, this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded;
    }

    a(h, "S", function () {
      return this.eddsa.decodeInt(this.Sencoded());
    }), a(h, "R", function () {
      return this.eddsa.decodePoint(this.Rencoded());
    }), a(h, "Rencoded", function () {
      return this.eddsa.encodePoint(this.R());
    }), a(h, "Sencoded", function () {
      return this.eddsa.encodeInt(this.S());
    }), h.prototype.toBytes = function () {
      return this.Rencoded().concat(this.Sencoded());
    }, h.prototype.toHex = function () {
      return o.encode(this.toBytes(), "hex").toUpperCase();
    }, t.exports = h;
  }, function (t, e, r) {
    "use strict";

    var n = r(141);
    e.certificate = r(277);
    var i = n.define("RSAPrivateKey", function () {
      this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
    });
    e.RSAPrivateKey = i;
    var o = n.define("RSAPublicKey", function () {
      this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
    });
    e.RSAPublicKey = o;
    var s = n.define("SubjectPublicKeyInfo", function () {
      this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
    });
    e.PublicKey = s;
    var a = n.define("AlgorithmIdentifier", function () {
      this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
    }),
        u = n.define("PrivateKeyInfo", function () {
      this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr());
    });
    e.PrivateKey = u;
    var h = n.define("EncryptedPrivateKeyInfo", function () {
      this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
    });
    e.EncryptedPrivateKey = h;
    var f = n.define("DSAPrivateKey", function () {
      this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
    });
    e.DSAPrivateKey = f, e.DSAparam = n.define("DSAparam", function () {
      this.int();
    });
    var c = n.define("ECPrivateKey", function () {
      this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(l), this.key("publicKey").optional().explicit(1).bitstr());
    });
    e.ECPrivateKey = c;
    var l = n.define("ECParameters", function () {
      this.choice({
        namedCurve: this.objid()
      });
    });
    e.signature = n.define("signature", function () {
      this.seq().obj(this.key("r").int(), this.key("s").int());
    });
  }, function (t, e) {}, function (t, e, r) {
    "use strict";

    var n = r(143),
        i = r(145),
        o = r(0);

    function s(t, e) {
      this.name = t, this.body = e, this.decoders = {}, this.encoders = {};
    }

    e.define = function (t, e) {
      return new s(t, e);
    }, s.prototype._createNamed = function (t) {
      var e = this.name;

      function r(t) {
        this._initNamed(t, e);
      }

      return o(r, t), r.prototype._initNamed = function (e, r) {
        t.call(this, e, r);
      }, new r(this);
    }, s.prototype._getDecoder = function (t) {
      return t = t || "der", this.decoders.hasOwnProperty(t) || (this.decoders[t] = this._createNamed(i[t])), this.decoders[t];
    }, s.prototype.decode = function (t, e, r) {
      return this._getDecoder(e).decode(t, r);
    }, s.prototype._getEncoder = function (t) {
      return t = t || "der", this.encoders.hasOwnProperty(t) || (this.encoders[t] = this._createNamed(n[t])), this.encoders[t];
    }, s.prototype.encode = function (t, e, r) {
      return this._getEncoder(e).encode(t, r);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(144);

    function o(t) {
      i.call(this, t), this.enc = "pem";
    }

    n(o, i), t.exports = o, o.prototype.encode = function (t, e) {
      for (var r = i.prototype.encode.call(this, t).toString("base64"), n = ["-----BEGIN " + e.label + "-----"], o = 0; o < r.length; o += 64) {
        n.push(r.slice(o, o + 64));
      }

      return n.push("-----END " + e.label + "-----"), n.join("\n");
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(0),
        i = r(80).Buffer,
        o = r(146);

    function s(t) {
      o.call(this, t), this.enc = "pem";
    }

    n(s, o), t.exports = s, s.prototype.decode = function (t, e) {
      for (var r = t.toString().split(/[\r\n]+/g), n = e.label.toUpperCase(), s = /^-----(BEGIN|END) ([^-]+)-----$/, a = -1, u = -1, h = 0; h < r.length; h++) {
        var f = r[h].match(s);

        if (null !== f && f[2] === n) {
          if (-1 !== a) {
            if ("END" !== f[1]) break;
            u = h;
            break;
          }

          if ("BEGIN" !== f[1]) break;
          a = h;
        }
      }

      if (-1 === a || -1 === u) throw new Error("PEM section not found for: " + n);
      var c = r.slice(a + 1, u).join("");
      c.replace(/[^a-z0-9+/=]+/gi, "");
      var l = i.from(c, "base64");
      return o.prototype.decode.call(this, l, e);
    };
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.Reporter = r(82).Reporter, n.DecoderBuffer = r(43).DecoderBuffer, n.EncoderBuffer = r(43).EncoderBuffer, n.Node = r(81);
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n._reverse = function (t) {
      var e = {};
      return Object.keys(t).forEach(function (r) {
        (0 | r) == r && (r |= 0);
        var n = t[r];
        e[n] = r;
      }), e;
    }, n.der = r(83);
  }, function (t, e, r) {
    "use strict";

    var n = r(141),
        i = n.define("Time", function () {
      this.choice({
        utcTime: this.utctime(),
        generalTime: this.gentime()
      });
    }),
        o = n.define("AttributeTypeValue", function () {
      this.seq().obj(this.key("type").objid(), this.key("value").any());
    }),
        s = n.define("AlgorithmIdentifier", function () {
      this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
    }),
        a = n.define("SubjectPublicKeyInfo", function () {
      this.seq().obj(this.key("algorithm").use(s), this.key("subjectPublicKey").bitstr());
    }),
        u = n.define("RelativeDistinguishedName", function () {
      this.setof(o);
    }),
        h = n.define("RDNSequence", function () {
      this.seqof(u);
    }),
        f = n.define("Name", function () {
      this.choice({
        rdnSequence: this.use(h)
      });
    }),
        c = n.define("Validity", function () {
      this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i));
    }),
        l = n.define("Extension", function () {
      this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
    }),
        d = n.define("TBSCertificate", function () {
      this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(s), this.key("issuer").use(f), this.key("validity").use(c), this.key("subject").use(f), this.key("subjectPublicKeyInfo").use(a), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(l).optional());
    }),
        p = n.define("X509Certificate", function () {
      this.seq().obj(this.key("tbsCertificate").use(d), this.key("signatureAlgorithm").use(s), this.key("signatureValue").bitstr());
    });
    t.exports = p;
  }, function (t) {
    t.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
  }, function (t, e, r) {
    var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m,
        i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,
        o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m,
        s = r(50),
        a = r(70),
        u = r(2).Buffer;

    t.exports = function (t, e) {
      var r,
          h = t.toString(),
          f = h.match(n);

      if (f) {
        var c = "aes" + f[1],
            l = u.from(f[2], "hex"),
            d = u.from(f[3].replace(/[\r\n]/g, ""), "base64"),
            p = s(e, l.slice(0, 8), parseInt(f[1], 10)).key,
            y = [],
            m = a.createDecipheriv(c, p, l);
        y.push(m.update(d)), y.push(m.final()), r = u.concat(y);
      } else {
        var b = h.match(o);
        r = u.from(b[2].replace(/[\r\n]/g, ""), "base64");
      }

      return {
        tag: h.match(i)[1],
        data: r
      };
    };
  }, function (t, e, r) {
    var n = r(73).Buffer,
        i = r(76),
        o = r(77).ec,
        s = r(52),
        a = r(147);

    function u(t, e) {
      if (t.cmpn(0) <= 0) throw new Error("invalid sig");
      if (t.cmp(e) >= e) throw new Error("invalid sig");
    }

    t.exports = function (t, e, r, h, f) {
      var c = s(r);

      if ("ec" === c.type) {
        if ("ecdsa" !== h && "ecdsa/rsa" !== h) throw new Error("wrong public key type");
        return function (t, e, r) {
          var n = a[r.data.algorithm.curve.join(".")];
          if (!n) throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
          var i = new o(n),
              s = r.data.subjectPrivateKey.data;
          return i.verify(e, t, s);
        }(t, e, c);
      }

      if ("dsa" === c.type) {
        if ("dsa" !== h) throw new Error("wrong public key type");
        return function (t, e, r) {
          var n = r.data.p,
              o = r.data.q,
              a = r.data.g,
              h = r.data.pub_key,
              f = s.signature.decode(t, "der"),
              c = f.s,
              l = f.r;
          u(c, o), u(l, o);
          var d = i.mont(n),
              p = c.invm(o);
          return 0 === a.toRed(d).redPow(new i(e).mul(p).mod(o)).fromRed().mul(h.toRed(d).redPow(l.mul(p).mod(o)).fromRed()).mod(n).mod(o).cmp(l);
        }(t, e, c);
      }

      if ("rsa" !== h && "ecdsa/rsa" !== h) throw new Error("wrong public key type");
      e = n.concat([f, e]);

      for (var l = c.modulus.byteLength(), d = [1], p = 0; e.length + d.length + 2 < l;) {
        d.push(255), p++;
      }

      d.push(0);

      for (var y = -1; ++y < e.length;) {
        d.push(e[y]);
      }

      d = n.from(d);
      var m = i.mont(c.modulus);
      t = (t = new i(t).toRed(m)).redPow(new i(c.publicExponent)), t = n.from(t.fromRed().toArray());
      var b = p < 8 ? 1 : 0;

      for (l = Math.min(t.length, d.length), t.length !== d.length && (b = 1), y = -1; ++y < l;) {
        b |= t[y] ^ d[y];
      }

      return 0 === b;
    };
  }, function (t, e, r) {
    (function (e) {
      var n = r(77),
          i = r(282);

      t.exports = function (t) {
        return new s(t);
      };

      var o = {
        secp256k1: {
          name: "secp256k1",
          byteLength: 32
        },
        secp224r1: {
          name: "p224",
          byteLength: 28
        },
        prime256v1: {
          name: "p256",
          byteLength: 32
        },
        prime192v1: {
          name: "p192",
          byteLength: 24
        },
        ed25519: {
          name: "ed25519",
          byteLength: 32
        },
        secp384r1: {
          name: "p384",
          byteLength: 48
        },
        secp521r1: {
          name: "p521",
          byteLength: 66
        }
      };

      function s(t) {
        this.curveType = o[t], this.curveType || (this.curveType = {
          name: t
        }), this.curve = new n.ec(this.curveType.name), this.keys = void 0;
      }

      function a(t, r, n) {
        Array.isArray(t) || (t = t.toArray());
        var i = new e(t);

        if (n && i.length < n) {
          var o = new e(n - i.length);
          o.fill(0), i = e.concat([o, i]);
        }

        return r ? i.toString(r) : i;
      }

      o.p224 = o.secp224r1, o.p256 = o.secp256r1 = o.prime256v1, o.p192 = o.secp192r1 = o.prime192v1, o.p384 = o.secp384r1, o.p521 = o.secp521r1, s.prototype.generateKeys = function (t, e) {
        return this.keys = this.curve.genKeyPair(), this.getPublicKey(t, e);
      }, s.prototype.computeSecret = function (t, r, n) {
        return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), a(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(), n, this.curveType.byteLength);
      }, s.prototype.getPublicKey = function (t, e) {
        var r = this.keys.getPublic("compressed" === e, !0);
        return "hybrid" === e && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6), a(r, t);
      }, s.prototype.getPrivateKey = function (t) {
        return a(this.keys.getPrivate(), t);
      }, s.prototype.setPublicKey = function (t, r) {
        return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this.keys._importPublic(t), this;
      }, s.prototype.setPrivateKey = function (t, r) {
        r = r || "utf8", e.isBuffer(t) || (t = new e(t, r));
        var n = new i(t);
        return n = n.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(n), this;
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    (function (t) {
      function e(t) {
        return (e = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      !function (t, n) {
        "use strict";

        function i(t, e) {
          if (!t) throw new Error(e || "Assertion failed");
        }

        function o(t, e) {
          t.super_ = e;

          var r = function r() {};

          r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
        }

        function s(t, e, r) {
          if (s.isBN(t)) return t;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"));
        }

        var a;
        "object" === e(t) ? t.exports = s : n.BN = s, s.BN = s, s.wordSize = 26;

        try {
          a = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(283).Buffer;
        } catch (t) {}

        function u(t, e) {
          var r = t.charCodeAt(e);
          return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
        }

        function h(t, e, r) {
          var n = u(t, r);
          return r - 1 >= e && (n |= u(t, r - 1) << 4), n;
        }

        function f(t, e, r, n) {
          for (var i = 0, o = Math.min(t.length, r), s = e; s < o; s++) {
            var a = t.charCodeAt(s) - 48;
            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
          }

          return i;
        }

        s.isBN = function (t) {
          return t instanceof s || null !== t && "object" === e(t) && t.constructor.wordSize === s.wordSize && Array.isArray(t.words);
        }, s.max = function (t, e) {
          return t.cmp(e) > 0 ? t : e;
        }, s.min = function (t, e) {
          return t.cmp(e) < 0 ? t : e;
        }, s.prototype._init = function (t, r, n) {
          if ("number" == typeof t) return this._initNumber(t, r, n);
          if ("object" === e(t)) return this._initArray(t, r, n);
          "hex" === r && (r = 16), i(r === (0 | r) && r >= 2 && r <= 36);
          var o = 0;
          "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (o++, this.negative = 1), o < t.length && (16 === r ? this._parseHex(t, o, n) : (this._parseBase(t, r, o), "le" === n && this._initArray(this.toArray(), r, n)));
        }, s.prototype._initNumber = function (t, e, r) {
          t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (i(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r);
        }, s.prototype._initArray = function (t, e, r) {
          if (i("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var o,
              s,
              a = 0;
          if ("be" === r) for (n = t.length - 1, o = 0; n >= 0; n -= 3) {
            s = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          } else if ("le" === r) for (n = 0, o = 0; n < t.length; n += 3) {
            s = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[o] |= s << a & 67108863, this.words[o + 1] = s >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, o++);
          }
          return this.strip();
        }, s.prototype._parseHex = function (t, e, r) {
          this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);

          for (var n = 0; n < this.length; n++) {
            this.words[n] = 0;
          }

          var i,
              o = 0,
              s = 0;
          if ("be" === r) for (n = t.length - 1; n >= e; n -= 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
            i = h(t, e, n) << o, this.words[s] |= 67108863 & i, o >= 18 ? (o -= 18, s += 1, this.words[s] |= i >>> 26) : o += 8;
          }
          this.strip();
        }, s.prototype._parseBase = function (t, e, r) {
          this.words = [0], this.length = 1;

          for (var n = 0, i = 1; i <= 67108863; i *= e) {
            n++;
          }

          n--, i = i / e | 0;

          for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, h = r; h < a; h += n) {
            u = f(t, h, h + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          if (0 !== s) {
            var c = 1;

            for (u = f(t, h, t.length, e), h = 0; h < s; h++) {
              c *= e;
            }

            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
          }

          this.strip();
        }, s.prototype.copy = function (t) {
          t.words = new Array(this.length);

          for (var e = 0; e < this.length; e++) {
            t.words[e] = this.words[e];
          }

          t.length = this.length, t.negative = this.negative, t.red = this.red;
        }, s.prototype.clone = function () {
          var t = new s(null);
          return this.copy(t), t;
        }, s.prototype._expand = function (t) {
          for (; this.length < t;) {
            this.words[this.length++] = 0;
          }

          return this;
        }, s.prototype.strip = function () {
          for (; this.length > 1 && 0 === this.words[this.length - 1];) {
            this.length--;
          }

          return this._normSign();
        }, s.prototype._normSign = function () {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, s.prototype.inspect = function () {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var c = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
            l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            d = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

        function p(t, e, r) {
          r.negative = e.negative ^ t.negative;
          var n = t.length + e.length | 0;
          r.length = n, n = n - 1 | 0;
          var i = 0 | t.words[0],
              o = 0 | e.words[0],
              s = i * o,
              a = 67108863 & s,
              u = s / 67108864 | 0;
          r.words[0] = a;

          for (var h = 1; h < n; h++) {
            for (var f = u >>> 26, c = 67108863 & u, l = Math.min(h, e.length - 1), d = Math.max(0, h - t.length + 1); d <= l; d++) {
              var p = h - d | 0;
              f += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + c) / 67108864 | 0, c = 67108863 & s;
            }

            r.words[h] = 0 | c, u = 0 | f;
          }

          return 0 !== u ? r.words[h] = 0 | u : r.length--, r.strip();
        }

        s.prototype.toString = function (t, e) {
          var r;

          if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
            r = "";

            for (var n = 0, o = 0, s = 0; s < this.length; s++) {
              var a = this.words[s],
                  u = (16777215 & (a << n | o)).toString(16);
              r = 0 !== (o = a >>> 24 - n & 16777215) || s !== this.length - 1 ? c[6 - u.length] + u + r : u + r, (n += 2) >= 26 && (n -= 26, s--);
            }

            for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          if (t === (0 | t) && t >= 2 && t <= 36) {
            var h = l[t],
                f = d[t];
            r = "";
            var p = this.clone();

            for (p.negative = 0; !p.isZero();) {
              var y = p.modn(f).toString(t);
              r = (p = p.idivn(f)).isZero() ? y + r : c[h - y.length] + y + r;
            }

            for (this.isZero() && (r = "0" + r); r.length % e != 0;) {
              r = "0" + r;
            }

            return 0 !== this.negative && (r = "-" + r), r;
          }

          i(!1, "Base should be between 2 and 36");
        }, s.prototype.toNumber = function () {
          var t = this.words[0];
          return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t;
        }, s.prototype.toJSON = function () {
          return this.toString(16);
        }, s.prototype.toBuffer = function (t, e) {
          return i(void 0 !== a), this.toArrayLike(a, t, e);
        }, s.prototype.toArray = function (t, e) {
          return this.toArrayLike(Array, t, e);
        }, s.prototype.toArrayLike = function (t, e, r) {
          var n = this.byteLength(),
              o = r || Math.max(1, n);
          i(n <= o, "byte array longer than desired length"), i(o > 0, "Requested array length <= 0"), this.strip();
          var s,
              a,
              u = "le" === e,
              h = new t(o),
              f = this.clone();

          if (u) {
            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[a] = s;
            }

            for (; a < o; a++) {
              h[a] = 0;
            }
          } else {
            for (a = 0; a < o - n; a++) {
              h[a] = 0;
            }

            for (a = 0; !f.isZero(); a++) {
              s = f.andln(255), f.iushrn(8), h[o - a - 1] = s;
            }
          }

          return h;
        }, Math.clz32 ? s.prototype._countBits = function (t) {
          return 32 - Math.clz32(t);
        } : s.prototype._countBits = function (t) {
          var e = t,
              r = 0;
          return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e;
        }, s.prototype._zeroBits = function (t) {
          if (0 === t) return 26;
          var e = t,
              r = 0;
          return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r;
        }, s.prototype.bitLength = function () {
          var t = this.words[this.length - 1],
              e = this._countBits(t);

          return 26 * (this.length - 1) + e;
        }, s.prototype.zeroBits = function () {
          if (this.isZero()) return 0;

          for (var t = 0, e = 0; e < this.length; e++) {
            var r = this._zeroBits(this.words[e]);

            if (t += r, 26 !== r) break;
          }

          return t;
        }, s.prototype.byteLength = function () {
          return Math.ceil(this.bitLength() / 8);
        }, s.prototype.toTwos = function (t) {
          return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
        }, s.prototype.fromTwos = function (t) {
          return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
        }, s.prototype.isNeg = function () {
          return 0 !== this.negative;
        }, s.prototype.neg = function () {
          return this.clone().ineg();
        }, s.prototype.ineg = function () {
          return this.isZero() || (this.negative ^= 1), this;
        }, s.prototype.iuor = function (t) {
          for (; this.length < t.length;) {
            this.words[this.length++] = 0;
          }

          for (var e = 0; e < t.length; e++) {
            this.words[e] = this.words[e] | t.words[e];
          }

          return this.strip();
        }, s.prototype.ior = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuor(t);
        }, s.prototype.or = function (t) {
          return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
        }, s.prototype.uor = function (t) {
          return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
        }, s.prototype.iuand = function (t) {
          var e;
          e = this.length > t.length ? t : this;

          for (var r = 0; r < e.length; r++) {
            this.words[r] = this.words[r] & t.words[r];
          }

          return this.length = e.length, this.strip();
        }, s.prototype.iand = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuand(t);
        }, s.prototype.and = function (t) {
          return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
        }, s.prototype.uand = function (t) {
          return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
        }, s.prototype.iuxor = function (t) {
          var e, r;
          this.length > t.length ? (e = this, r = t) : (e = t, r = this);

          for (var n = 0; n < r.length; n++) {
            this.words[n] = e.words[n] ^ r.words[n];
          }

          if (this !== e) for (; n < e.length; n++) {
            this.words[n] = e.words[n];
          }
          return this.length = e.length, this.strip();
        }, s.prototype.ixor = function (t) {
          return i(0 == (this.negative | t.negative)), this.iuxor(t);
        }, s.prototype.xor = function (t) {
          return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
        }, s.prototype.uxor = function (t) {
          return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
        }, s.prototype.inotn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = 0 | Math.ceil(t / 26),
              r = t % 26;
          this._expand(e), r > 0 && e--;

          for (var n = 0; n < e; n++) {
            this.words[n] = 67108863 & ~this.words[n];
          }

          return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip();
        }, s.prototype.notn = function (t) {
          return this.clone().inotn(t);
        }, s.prototype.setn = function (t, e) {
          i("number" == typeof t && t >= 0);
          var r = t / 26 | 0,
              n = t % 26;
          return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip();
        }, s.prototype.iadd = function (t) {
          var e, r, n;
          if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
          this.length > t.length ? (r = this, n = t) : (r = t, n = this);

          for (var i = 0, o = 0; o < n.length; o++) {
            e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          for (; 0 !== i && o < r.length; o++) {
            e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
          }

          if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;else if (r !== this) for (; o < r.length; o++) {
            this.words[o] = r.words[o];
          }
          return this;
        }, s.prototype.add = function (t) {
          var e;
          return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
        }, s.prototype.isub = function (t) {
          if (0 !== t.negative) {
            t.negative = 0;
            var e = this.iadd(t);
            return t.negative = 1, e._normSign();
          }

          if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
          var r,
              n,
              i = this.cmp(t);
          if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i > 0 ? (r = this, n = t) : (r = t, n = this);

          for (var o = 0, s = 0; s < n.length; s++) {
            o = (e = (0 | r.words[s]) - (0 | n.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          for (; 0 !== o && s < r.length; s++) {
            o = (e = (0 | r.words[s]) + o) >> 26, this.words[s] = 67108863 & e;
          }

          if (0 === o && s < r.length && r !== this) for (; s < r.length; s++) {
            this.words[s] = r.words[s];
          }
          return this.length = Math.max(this.length, s), r !== this && (this.negative = 1), this.strip();
        }, s.prototype.sub = function (t) {
          return this.clone().isub(t);
        };

        var y = function y(t, e, r) {
          var n,
              i,
              o,
              s = t.words,
              a = e.words,
              u = r.words,
              h = 0,
              f = 0 | s[0],
              c = 8191 & f,
              l = f >>> 13,
              d = 0 | s[1],
              p = 8191 & d,
              y = d >>> 13,
              m = 0 | s[2],
              b = 8191 & m,
              v = m >>> 13,
              g = 0 | s[3],
              w = 8191 & g,
              _ = g >>> 13,
              M = 0 | s[4],
              S = 8191 & M,
              O = M >>> 13,
              A = 0 | s[5],
              E = 8191 & A,
              x = A >>> 13,
              k = 0 | s[6],
              j = 8191 & k,
              $ = k >>> 13,
              P = 0 | s[7],
              R = 8191 & P,
              B = P >>> 13,
              T = 0 | s[8],
              I = 8191 & T,
              N = T >>> 13,
              D = 0 | s[9],
              C = 8191 & D,
              L = D >>> 13,
              q = 0 | a[0],
              U = 8191 & q,
              F = q >>> 13,
              z = 0 | a[1],
              V = 8191 & z,
              K = z >>> 13,
              H = 0 | a[2],
              W = 8191 & H,
              Z = H >>> 13,
              J = 0 | a[3],
              Y = 8191 & J,
              G = J >>> 13,
              Q = 0 | a[4],
              X = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | a[5],
              rt = 8191 & et,
              nt = et >>> 13,
              it = 0 | a[6],
              ot = 8191 & it,
              st = it >>> 13,
              at = 0 | a[7],
              ut = 8191 & at,
              ht = at >>> 13,
              ft = 0 | a[8],
              ct = 8191 & ft,
              lt = ft >>> 13,
              dt = 0 | a[9],
              pt = 8191 & dt,
              yt = dt >>> 13;

          r.negative = t.negative ^ e.negative, r.length = 19;
          var mt = (h + (n = Math.imul(c, U)) | 0) + ((8191 & (i = (i = Math.imul(c, F)) + Math.imul(l, U) | 0)) << 13) | 0;
          h = ((o = Math.imul(l, F)) + (i >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n = Math.imul(p, U), i = (i = Math.imul(p, F)) + Math.imul(y, U) | 0, o = Math.imul(y, F);
          var bt = (h + (n = n + Math.imul(c, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, K) | 0) + Math.imul(l, V) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, K) | 0) + (i >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n = Math.imul(b, U), i = (i = Math.imul(b, F)) + Math.imul(v, U) | 0, o = Math.imul(v, F), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, K) | 0) + Math.imul(y, V) | 0, o = o + Math.imul(y, K) | 0;
          var vt = (h + (n = n + Math.imul(c, W) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, Z) | 0) + Math.imul(l, W) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, Z) | 0) + (i >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n = Math.imul(w, U), i = (i = Math.imul(w, F)) + Math.imul(_, U) | 0, o = Math.imul(_, F), n = n + Math.imul(b, V) | 0, i = (i = i + Math.imul(b, K) | 0) + Math.imul(v, V) | 0, o = o + Math.imul(v, K) | 0, n = n + Math.imul(p, W) | 0, i = (i = i + Math.imul(p, Z) | 0) + Math.imul(y, W) | 0, o = o + Math.imul(y, Z) | 0;
          var gt = (h + (n = n + Math.imul(c, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, G) | 0) + Math.imul(l, Y) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, G) | 0) + (i >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n = Math.imul(S, U), i = (i = Math.imul(S, F)) + Math.imul(O, U) | 0, o = Math.imul(O, F), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, K) | 0) + Math.imul(_, V) | 0, o = o + Math.imul(_, K) | 0, n = n + Math.imul(b, W) | 0, i = (i = i + Math.imul(b, Z) | 0) + Math.imul(v, W) | 0, o = o + Math.imul(v, Z) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, G) | 0) + Math.imul(y, Y) | 0, o = o + Math.imul(y, G) | 0;
          var wt = (h + (n = n + Math.imul(c, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, tt) | 0) + Math.imul(l, X) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, tt) | 0) + (i >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n = Math.imul(E, U), i = (i = Math.imul(E, F)) + Math.imul(x, U) | 0, o = Math.imul(x, F), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, K) | 0) + Math.imul(O, V) | 0, o = o + Math.imul(O, K) | 0, n = n + Math.imul(w, W) | 0, i = (i = i + Math.imul(w, Z) | 0) + Math.imul(_, W) | 0, o = o + Math.imul(_, Z) | 0, n = n + Math.imul(b, Y) | 0, i = (i = i + Math.imul(b, G) | 0) + Math.imul(v, Y) | 0, o = o + Math.imul(v, G) | 0, n = n + Math.imul(p, X) | 0, i = (i = i + Math.imul(p, tt) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, tt) | 0;

          var _t = (h + (n = n + Math.imul(c, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, nt) | 0) + Math.imul(l, rt) | 0)) << 13) | 0;

          h = ((o = o + Math.imul(l, nt) | 0) + (i >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n = Math.imul(j, U), i = (i = Math.imul(j, F)) + Math.imul($, U) | 0, o = Math.imul($, F), n = n + Math.imul(E, V) | 0, i = (i = i + Math.imul(E, K) | 0) + Math.imul(x, V) | 0, o = o + Math.imul(x, K) | 0, n = n + Math.imul(S, W) | 0, i = (i = i + Math.imul(S, Z) | 0) + Math.imul(O, W) | 0, o = o + Math.imul(O, Z) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, G) | 0) + Math.imul(_, Y) | 0, o = o + Math.imul(_, G) | 0, n = n + Math.imul(b, X) | 0, i = (i = i + Math.imul(b, tt) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(p, rt) | 0, i = (i = i + Math.imul(p, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
          var Mt = (h + (n = n + Math.imul(c, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, st) | 0) + Math.imul(l, ot) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, st) | 0) + (i >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n = Math.imul(R, U), i = (i = Math.imul(R, F)) + Math.imul(B, U) | 0, o = Math.imul(B, F), n = n + Math.imul(j, V) | 0, i = (i = i + Math.imul(j, K) | 0) + Math.imul($, V) | 0, o = o + Math.imul($, K) | 0, n = n + Math.imul(E, W) | 0, i = (i = i + Math.imul(E, Z) | 0) + Math.imul(x, W) | 0, o = o + Math.imul(x, Z) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, G) | 0) + Math.imul(O, Y) | 0, o = o + Math.imul(O, G) | 0, n = n + Math.imul(w, X) | 0, i = (i = i + Math.imul(w, tt) | 0) + Math.imul(_, X) | 0, o = o + Math.imul(_, tt) | 0, n = n + Math.imul(b, rt) | 0, i = (i = i + Math.imul(b, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(p, ot) | 0, i = (i = i + Math.imul(p, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
          var St = (h + (n = n + Math.imul(c, ut) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, ht) | 0) + Math.imul(l, ut) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, ht) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(I, U), i = (i = Math.imul(I, F)) + Math.imul(N, U) | 0, o = Math.imul(N, F), n = n + Math.imul(R, V) | 0, i = (i = i + Math.imul(R, K) | 0) + Math.imul(B, V) | 0, o = o + Math.imul(B, K) | 0, n = n + Math.imul(j, W) | 0, i = (i = i + Math.imul(j, Z) | 0) + Math.imul($, W) | 0, o = o + Math.imul($, Z) | 0, n = n + Math.imul(E, Y) | 0, i = (i = i + Math.imul(E, G) | 0) + Math.imul(x, Y) | 0, o = o + Math.imul(x, G) | 0, n = n + Math.imul(S, X) | 0, i = (i = i + Math.imul(S, tt) | 0) + Math.imul(O, X) | 0, o = o + Math.imul(O, tt) | 0, n = n + Math.imul(w, rt) | 0, i = (i = i + Math.imul(w, nt) | 0) + Math.imul(_, rt) | 0, o = o + Math.imul(_, nt) | 0, n = n + Math.imul(b, ot) | 0, i = (i = i + Math.imul(b, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(p, ut) | 0, i = (i = i + Math.imul(p, ht) | 0) + Math.imul(y, ut) | 0, o = o + Math.imul(y, ht) | 0;
          var Ot = (h + (n = n + Math.imul(c, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, lt) | 0) + Math.imul(l, ct) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, lt) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(C, U), i = (i = Math.imul(C, F)) + Math.imul(L, U) | 0, o = Math.imul(L, F), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, K) | 0) + Math.imul(N, V) | 0, o = o + Math.imul(N, K) | 0, n = n + Math.imul(R, W) | 0, i = (i = i + Math.imul(R, Z) | 0) + Math.imul(B, W) | 0, o = o + Math.imul(B, Z) | 0, n = n + Math.imul(j, Y) | 0, i = (i = i + Math.imul(j, G) | 0) + Math.imul($, Y) | 0, o = o + Math.imul($, G) | 0, n = n + Math.imul(E, X) | 0, i = (i = i + Math.imul(E, tt) | 0) + Math.imul(x, X) | 0, o = o + Math.imul(x, tt) | 0, n = n + Math.imul(S, rt) | 0, i = (i = i + Math.imul(S, nt) | 0) + Math.imul(O, rt) | 0, o = o + Math.imul(O, nt) | 0, n = n + Math.imul(w, ot) | 0, i = (i = i + Math.imul(w, st) | 0) + Math.imul(_, ot) | 0, o = o + Math.imul(_, st) | 0, n = n + Math.imul(b, ut) | 0, i = (i = i + Math.imul(b, ht) | 0) + Math.imul(v, ut) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(p, ct) | 0, i = (i = i + Math.imul(p, lt) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, lt) | 0;
          var At = (h + (n = n + Math.imul(c, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(c, yt) | 0) + Math.imul(l, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(l, yt) | 0) + (i >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n = Math.imul(C, V), i = (i = Math.imul(C, K)) + Math.imul(L, V) | 0, o = Math.imul(L, K), n = n + Math.imul(I, W) | 0, i = (i = i + Math.imul(I, Z) | 0) + Math.imul(N, W) | 0, o = o + Math.imul(N, Z) | 0, n = n + Math.imul(R, Y) | 0, i = (i = i + Math.imul(R, G) | 0) + Math.imul(B, Y) | 0, o = o + Math.imul(B, G) | 0, n = n + Math.imul(j, X) | 0, i = (i = i + Math.imul(j, tt) | 0) + Math.imul($, X) | 0, o = o + Math.imul($, tt) | 0, n = n + Math.imul(E, rt) | 0, i = (i = i + Math.imul(E, nt) | 0) + Math.imul(x, rt) | 0, o = o + Math.imul(x, nt) | 0, n = n + Math.imul(S, ot) | 0, i = (i = i + Math.imul(S, st) | 0) + Math.imul(O, ot) | 0, o = o + Math.imul(O, st) | 0, n = n + Math.imul(w, ut) | 0, i = (i = i + Math.imul(w, ht) | 0) + Math.imul(_, ut) | 0, o = o + Math.imul(_, ht) | 0, n = n + Math.imul(b, ct) | 0, i = (i = i + Math.imul(b, lt) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, lt) | 0;
          var Et = (h + (n = n + Math.imul(p, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, yt) | 0) + Math.imul(y, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(y, yt) | 0) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(C, W), i = (i = Math.imul(C, Z)) + Math.imul(L, W) | 0, o = Math.imul(L, Z), n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, G) | 0) + Math.imul(N, Y) | 0, o = o + Math.imul(N, G) | 0, n = n + Math.imul(R, X) | 0, i = (i = i + Math.imul(R, tt) | 0) + Math.imul(B, X) | 0, o = o + Math.imul(B, tt) | 0, n = n + Math.imul(j, rt) | 0, i = (i = i + Math.imul(j, nt) | 0) + Math.imul($, rt) | 0, o = o + Math.imul($, nt) | 0, n = n + Math.imul(E, ot) | 0, i = (i = i + Math.imul(E, st) | 0) + Math.imul(x, ot) | 0, o = o + Math.imul(x, st) | 0, n = n + Math.imul(S, ut) | 0, i = (i = i + Math.imul(S, ht) | 0) + Math.imul(O, ut) | 0, o = o + Math.imul(O, ht) | 0, n = n + Math.imul(w, ct) | 0, i = (i = i + Math.imul(w, lt) | 0) + Math.imul(_, ct) | 0, o = o + Math.imul(_, lt) | 0;
          var xt = (h + (n = n + Math.imul(b, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(b, yt) | 0) + Math.imul(v, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(v, yt) | 0) + (i >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n = Math.imul(C, Y), i = (i = Math.imul(C, G)) + Math.imul(L, Y) | 0, o = Math.imul(L, G), n = n + Math.imul(I, X) | 0, i = (i = i + Math.imul(I, tt) | 0) + Math.imul(N, X) | 0, o = o + Math.imul(N, tt) | 0, n = n + Math.imul(R, rt) | 0, i = (i = i + Math.imul(R, nt) | 0) + Math.imul(B, rt) | 0, o = o + Math.imul(B, nt) | 0, n = n + Math.imul(j, ot) | 0, i = (i = i + Math.imul(j, st) | 0) + Math.imul($, ot) | 0, o = o + Math.imul($, st) | 0, n = n + Math.imul(E, ut) | 0, i = (i = i + Math.imul(E, ht) | 0) + Math.imul(x, ut) | 0, o = o + Math.imul(x, ht) | 0, n = n + Math.imul(S, ct) | 0, i = (i = i + Math.imul(S, lt) | 0) + Math.imul(O, ct) | 0, o = o + Math.imul(O, lt) | 0;
          var kt = (h + (n = n + Math.imul(w, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, yt) | 0) + Math.imul(_, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(_, yt) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(C, X), i = (i = Math.imul(C, tt)) + Math.imul(L, X) | 0, o = Math.imul(L, tt), n = n + Math.imul(I, rt) | 0, i = (i = i + Math.imul(I, nt) | 0) + Math.imul(N, rt) | 0, o = o + Math.imul(N, nt) | 0, n = n + Math.imul(R, ot) | 0, i = (i = i + Math.imul(R, st) | 0) + Math.imul(B, ot) | 0, o = o + Math.imul(B, st) | 0, n = n + Math.imul(j, ut) | 0, i = (i = i + Math.imul(j, ht) | 0) + Math.imul($, ut) | 0, o = o + Math.imul($, ht) | 0, n = n + Math.imul(E, ct) | 0, i = (i = i + Math.imul(E, lt) | 0) + Math.imul(x, ct) | 0, o = o + Math.imul(x, lt) | 0;
          var jt = (h + (n = n + Math.imul(S, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, yt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(O, yt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(C, rt), i = (i = Math.imul(C, nt)) + Math.imul(L, rt) | 0, o = Math.imul(L, nt), n = n + Math.imul(I, ot) | 0, i = (i = i + Math.imul(I, st) | 0) + Math.imul(N, ot) | 0, o = o + Math.imul(N, st) | 0, n = n + Math.imul(R, ut) | 0, i = (i = i + Math.imul(R, ht) | 0) + Math.imul(B, ut) | 0, o = o + Math.imul(B, ht) | 0, n = n + Math.imul(j, ct) | 0, i = (i = i + Math.imul(j, lt) | 0) + Math.imul($, ct) | 0, o = o + Math.imul($, lt) | 0;
          var $t = (h + (n = n + Math.imul(E, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(E, yt) | 0) + Math.imul(x, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(x, yt) | 0) + (i >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n = Math.imul(C, ot), i = (i = Math.imul(C, st)) + Math.imul(L, ot) | 0, o = Math.imul(L, st), n = n + Math.imul(I, ut) | 0, i = (i = i + Math.imul(I, ht) | 0) + Math.imul(N, ut) | 0, o = o + Math.imul(N, ht) | 0, n = n + Math.imul(R, ct) | 0, i = (i = i + Math.imul(R, lt) | 0) + Math.imul(B, ct) | 0, o = o + Math.imul(B, lt) | 0;
          var Pt = (h + (n = n + Math.imul(j, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(j, yt) | 0) + Math.imul($, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul($, yt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(C, ut), i = (i = Math.imul(C, ht)) + Math.imul(L, ut) | 0, o = Math.imul(L, ht), n = n + Math.imul(I, ct) | 0, i = (i = i + Math.imul(I, lt) | 0) + Math.imul(N, ct) | 0, o = o + Math.imul(N, lt) | 0;
          var Rt = (h + (n = n + Math.imul(R, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(R, yt) | 0) + Math.imul(B, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(B, yt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(C, ct), i = (i = Math.imul(C, lt)) + Math.imul(L, ct) | 0, o = Math.imul(L, lt);
          var Bt = (h + (n = n + Math.imul(I, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, yt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
          h = ((o = o + Math.imul(N, yt) | 0) + (i >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863;
          var Tt = (h + (n = Math.imul(C, pt)) | 0) + ((8191 & (i = (i = Math.imul(C, yt)) + Math.imul(L, pt) | 0)) << 13) | 0;
          return h = ((o = Math.imul(L, yt)) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, u[0] = mt, u[1] = bt, u[2] = vt, u[3] = gt, u[4] = wt, u[5] = _t, u[6] = Mt, u[7] = St, u[8] = Ot, u[9] = At, u[10] = Et, u[11] = xt, u[12] = kt, u[13] = jt, u[14] = $t, u[15] = Pt, u[16] = Rt, u[17] = Bt, u[18] = Tt, 0 !== h && (u[19] = h, r.length++), r;
        };

        function m(t, e, r) {
          return new b().mulp(t, e, r);
        }

        function b(t, e) {
          this.x = t, this.y = e;
        }

        Math.imul || (y = p), s.prototype.mulTo = function (t, e) {
          var r = this.length + t.length;
          return 10 === this.length && 10 === t.length ? y(this, t, e) : r < 63 ? p(this, t, e) : r < 1024 ? function (t, e, r) {
            r.negative = e.negative ^ t.negative, r.length = t.length + e.length;

            for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
              var s = i;
              i = 0;

              for (var a = 67108863 & n, u = Math.min(o, e.length - 1), h = Math.max(0, o - t.length + 1); h <= u; h++) {
                var f = o - h,
                    c = (0 | t.words[f]) * (0 | e.words[h]),
                    l = 67108863 & c;
                a = 67108863 & (l = l + a | 0), i += (s = (s = s + (c / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26, s &= 67108863;
              }

              r.words[o] = a, n = s, s = i;
            }

            return 0 !== n ? r.words[o] = n : r.length--, r.strip();
          }(this, t, e) : m(this, t, e);
        }, b.prototype.makeRBT = function (t) {
          for (var e = new Array(t), r = s.prototype._countBits(t) - 1, n = 0; n < t; n++) {
            e[n] = this.revBin(n, r, t);
          }

          return e;
        }, b.prototype.revBin = function (t, e, r) {
          if (0 === t || t === r - 1) return t;

          for (var n = 0, i = 0; i < e; i++) {
            n |= (1 & t) << e - i - 1, t >>= 1;
          }

          return n;
        }, b.prototype.permute = function (t, e, r, n, i, o) {
          for (var s = 0; s < o; s++) {
            n[s] = e[t[s]], i[s] = r[t[s]];
          }
        }, b.prototype.transform = function (t, e, r, n, i, o) {
          this.permute(o, t, e, r, n, i);

          for (var s = 1; s < i; s <<= 1) {
            for (var a = s << 1, u = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), f = 0; f < i; f += a) {
              for (var c = u, l = h, d = 0; d < s; d++) {
                var p = r[f + d],
                    y = n[f + d],
                    m = r[f + d + s],
                    b = n[f + d + s],
                    v = c * m - l * b;
                b = c * b + l * m, m = v, r[f + d] = p + m, n[f + d] = y + b, r[f + d + s] = p - m, n[f + d + s] = y - b, d !== a && (v = u * c - h * l, l = u * l + h * c, c = v);
              }
            }
          }
        }, b.prototype.guessLen13b = function (t, e) {
          var r = 1 | Math.max(e, t),
              n = 1 & r,
              i = 0;

          for (r = r / 2 | 0; r; r >>>= 1) {
            i++;
          }

          return 1 << i + 1 + n;
        }, b.prototype.conjugate = function (t, e, r) {
          if (!(r <= 1)) for (var n = 0; n < r / 2; n++) {
            var i = t[n];
            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i;
          }
        }, b.prototype.normalize13b = function (t, e) {
          for (var r = 0, n = 0; n < e / 2; n++) {
            var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
            t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
          }

          return t;
        }, b.prototype.convert13b = function (t, e, r, n) {
          for (var o = 0, s = 0; s < e; s++) {
            o += 0 | t[s], r[2 * s] = 8191 & o, o >>>= 13, r[2 * s + 1] = 8191 & o, o >>>= 13;
          }

          for (s = 2 * e; s < n; ++s) {
            r[s] = 0;
          }

          i(0 === o), i(0 == (-8192 & o));
        }, b.prototype.stub = function (t) {
          for (var e = new Array(t), r = 0; r < t; r++) {
            e[r] = 0;
          }

          return e;
        }, b.prototype.mulp = function (t, e, r) {
          var n = 2 * this.guessLen13b(t.length, e.length),
              i = this.makeRBT(n),
              o = this.stub(n),
              s = new Array(n),
              a = new Array(n),
              u = new Array(n),
              h = new Array(n),
              f = new Array(n),
              c = new Array(n),
              l = r.words;
          l.length = n, this.convert13b(t.words, t.length, s, n), this.convert13b(e.words, e.length, h, n), this.transform(s, o, a, u, n, i), this.transform(h, o, f, c, n, i);

          for (var d = 0; d < n; d++) {
            var p = a[d] * f[d] - u[d] * c[d];
            u[d] = a[d] * c[d] + u[d] * f[d], a[d] = p;
          }

          return this.conjugate(a, u, n), this.transform(a, u, l, o, n, i), this.conjugate(l, o, n), this.normalize13b(l, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip();
        }, s.prototype.mul = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), this.mulTo(t, e);
        }, s.prototype.mulf = function (t) {
          var e = new s(null);
          return e.words = new Array(this.length + t.length), m(this, t, e);
        }, s.prototype.imul = function (t) {
          return this.clone().mulTo(t, this);
        }, s.prototype.imuln = function (t) {
          i("number" == typeof t), i(t < 67108864);

          for (var e = 0, r = 0; r < this.length; r++) {
            var n = (0 | this.words[r]) * t,
                o = (67108863 & n) + (67108863 & e);
            e >>= 26, e += n / 67108864 | 0, e += o >>> 26, this.words[r] = 67108863 & o;
          }

          return 0 !== e && (this.words[r] = e, this.length++), this;
        }, s.prototype.muln = function (t) {
          return this.clone().imuln(t);
        }, s.prototype.sqr = function () {
          return this.mul(this);
        }, s.prototype.isqr = function () {
          return this.imul(this.clone());
        }, s.prototype.pow = function (t) {
          var e = function (t) {
            for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
              var n = r / 26 | 0,
                  i = r % 26;
              e[r] = (t.words[n] & 1 << i) >>> i;
            }

            return e;
          }(t);

          if (0 === e.length) return new s(1);

          for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr()) {
            ;
          }

          if (++n < e.length) for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) {
            0 !== e[n] && (r = r.mul(i));
          }
          return r;
        }, s.prototype.iushln = function (t) {
          i("number" == typeof t && t >= 0);
          var e,
              r = t % 26,
              n = (t - r) / 26,
              o = 67108863 >>> 26 - r << 26 - r;

          if (0 !== r) {
            var s = 0;

            for (e = 0; e < this.length; e++) {
              var a = this.words[e] & o,
                  u = (0 | this.words[e]) - a << r;
              this.words[e] = u | s, s = a >>> 26 - r;
            }

            s && (this.words[e] = s, this.length++);
          }

          if (0 !== n) {
            for (e = this.length - 1; e >= 0; e--) {
              this.words[e + n] = this.words[e];
            }

            for (e = 0; e < n; e++) {
              this.words[e] = 0;
            }

            this.length += n;
          }

          return this.strip();
        }, s.prototype.ishln = function (t) {
          return i(0 === this.negative), this.iushln(t);
        }, s.prototype.iushrn = function (t, e, r) {
          var n;
          i("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
          var o = t % 26,
              s = Math.min((t - o) / 26, this.length),
              a = 67108863 ^ 67108863 >>> o << o,
              u = r;

          if (n -= s, n = Math.max(0, n), u) {
            for (var h = 0; h < s; h++) {
              u.words[h] = this.words[h];
            }

            u.length = s;
          }

          if (0 === s) ;else if (this.length > s) for (this.length -= s, h = 0; h < this.length; h++) {
            this.words[h] = this.words[h + s];
          } else this.words[0] = 0, this.length = 1;
          var f = 0;

          for (h = this.length - 1; h >= 0 && (0 !== f || h >= n); h--) {
            var c = 0 | this.words[h];
            this.words[h] = f << 26 - o | c >>> o, f = c & a;
          }

          return u && 0 !== f && (u.words[u.length++] = f), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, s.prototype.ishrn = function (t, e, r) {
          return i(0 === this.negative), this.iushrn(t, e, r);
        }, s.prototype.shln = function (t) {
          return this.clone().ishln(t);
        }, s.prototype.ushln = function (t) {
          return this.clone().iushln(t);
        }, s.prototype.shrn = function (t) {
          return this.clone().ishrn(t);
        }, s.prototype.ushrn = function (t) {
          return this.clone().iushrn(t);
        }, s.prototype.testn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          return !(this.length <= r) && !!(this.words[r] & n);
        }, s.prototype.imaskn = function (t) {
          i("number" == typeof t && t >= 0);
          var e = t % 26,
              r = (t - e) / 26;
          if (i(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;

          if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
            var n = 67108863 ^ 67108863 >>> e << e;
            this.words[this.length - 1] &= n;
          }

          return this.strip();
        }, s.prototype.maskn = function (t) {
          return this.clone().imaskn(t);
        }, s.prototype.iaddn = function (t) {
          return i("number" == typeof t), i(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t);
        }, s.prototype._iaddn = function (t) {
          this.words[0] += t;

          for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
            this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
          }

          return this.length = Math.max(this.length, e + 1), this;
        }, s.prototype.isubn = function (t) {
          if (i("number" == typeof t), i(t < 67108864), t < 0) return this.iaddn(-t);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
          if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
            this.words[e] += 67108864, this.words[e + 1] -= 1;
          }
          return this.strip();
        }, s.prototype.addn = function (t) {
          return this.clone().iaddn(t);
        }, s.prototype.subn = function (t) {
          return this.clone().isubn(t);
        }, s.prototype.iabs = function () {
          return this.negative = 0, this;
        }, s.prototype.abs = function () {
          return this.clone().iabs();
        }, s.prototype._ishlnsubmul = function (t, e, r) {
          var n,
              o,
              s = t.length + r;

          this._expand(s);

          var a = 0;

          for (n = 0; n < t.length; n++) {
            o = (0 | this.words[n + r]) + a;
            var u = (0 | t.words[n]) * e;
            a = ((o -= 67108863 & u) >> 26) - (u / 67108864 | 0), this.words[n + r] = 67108863 & o;
          }

          for (; n < this.length - r; n++) {
            a = (o = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & o;
          }

          if (0 === a) return this.strip();

          for (i(-1 === a), a = 0, n = 0; n < this.length; n++) {
            a = (o = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & o;
          }

          return this.negative = 1, this.strip();
        }, s.prototype._wordDiv = function (t, e) {
          var r = (this.length, t.length),
              n = this.clone(),
              i = t,
              o = 0 | i.words[i.length - 1];
          0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
          var a,
              u = n.length - i.length;

          if ("mod" !== e) {
            (a = new s(null)).length = u + 1, a.words = new Array(a.length);

            for (var h = 0; h < a.length; h++) {
              a.words[h] = 0;
            }
          }

          var f = n.clone()._ishlnsubmul(i, 1, u);

          0 === f.negative && (n = f, a && (a.words[u] = 1));

          for (var c = u - 1; c >= 0; c--) {
            var l = 67108864 * (0 | n.words[i.length + c]) + (0 | n.words[i.length + c - 1]);

            for (l = Math.min(l / o | 0, 67108863), n._ishlnsubmul(i, l, c); 0 !== n.negative;) {
              l--, n.negative = 0, n._ishlnsubmul(i, 1, c), n.isZero() || (n.negative ^= 1);
            }

            a && (a.words[c] = l);
          }

          return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
            div: a || null,
            mod: n
          };
        }, s.prototype.divmod = function (t, e, r) {
          return i(!t.isZero()), this.isZero() ? {
            div: new s(0),
            mod: new s(0)
          } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e), "mod" !== e && (n = a.div.neg()), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(t)), {
            div: n,
            mod: o
          }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e), "mod" !== e && (n = a.div.neg()), {
            div: n,
            mod: a.mod
          }) : 0 != (this.negative & t.negative) ? (a = this.neg().divmod(t.neg(), e), "div" !== e && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(t)), {
            div: a.div,
            mod: o
          }) : t.length > this.length || this.cmp(t) < 0 ? {
            div: new s(0),
            mod: this
          } : 1 === t.length ? "div" === e ? {
            div: this.divn(t.words[0]),
            mod: null
          } : "mod" === e ? {
            div: null,
            mod: new s(this.modn(t.words[0]))
          } : {
            div: this.divn(t.words[0]),
            mod: new s(this.modn(t.words[0]))
          } : this._wordDiv(t, e);
          var n, o, a;
        }, s.prototype.div = function (t) {
          return this.divmod(t, "div", !1).div;
        }, s.prototype.mod = function (t) {
          return this.divmod(t, "mod", !1).mod;
        }, s.prototype.umod = function (t) {
          return this.divmod(t, "mod", !0).mod;
        }, s.prototype.divRound = function (t) {
          var e = this.divmod(t);
          if (e.mod.isZero()) return e.div;
          var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
              n = t.ushrn(1),
              i = t.andln(1),
              o = r.cmp(n);
          return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
        }, s.prototype.modn = function (t) {
          i(t <= 67108863);

          for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) {
            r = (e * r + (0 | this.words[n])) % t;
          }

          return r;
        }, s.prototype.idivn = function (t) {
          i(t <= 67108863);

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = (0 | this.words[r]) + 67108864 * e;
            this.words[r] = n / t | 0, e = n % t;
          }

          return this.strip();
        }, s.prototype.divn = function (t) {
          return this.clone().idivn(t);
        }, s.prototype.egcd = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n = new s(1), o = new s(0), a = new s(0), u = new s(1), h = 0; e.isEven() && r.isEven();) {
            e.iushrn(1), r.iushrn(1), ++h;
          }

          for (var f = r.clone(), c = e.clone(); !e.isZero();) {
            for (var l = 0, d = 1; 0 == (e.words[0] & d) && l < 26; ++l, d <<= 1) {
              ;
            }

            if (l > 0) for (e.iushrn(l); l-- > 0;) {
              (n.isOdd() || o.isOdd()) && (n.iadd(f), o.isub(c)), n.iushrn(1), o.iushrn(1);
            }

            for (var p = 0, y = 1; 0 == (r.words[0] & y) && p < 26; ++p, y <<= 1) {
              ;
            }

            if (p > 0) for (r.iushrn(p); p-- > 0;) {
              (a.isOdd() || u.isOdd()) && (a.iadd(f), u.isub(c)), a.iushrn(1), u.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), n.isub(a), o.isub(u)) : (r.isub(e), a.isub(n), u.isub(o));
          }

          return {
            a: a,
            b: u,
            gcd: r.iushln(h)
          };
        }, s.prototype._invmp = function (t) {
          i(0 === t.negative), i(!t.isZero());
          var e = this,
              r = t.clone();
          e = 0 !== e.negative ? e.umod(t) : e.clone();

          for (var n, o = new s(1), a = new s(0), u = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
            for (var h = 0, f = 1; 0 == (e.words[0] & f) && h < 26; ++h, f <<= 1) {
              ;
            }

            if (h > 0) for (e.iushrn(h); h-- > 0;) {
              o.isOdd() && o.iadd(u), o.iushrn(1);
            }

            for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1) {
              ;
            }

            if (c > 0) for (r.iushrn(c); c-- > 0;) {
              a.isOdd() && a.iadd(u), a.iushrn(1);
            }
            e.cmp(r) >= 0 ? (e.isub(r), o.isub(a)) : (r.isub(e), a.isub(o));
          }

          return (n = 0 === e.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(t), n;
        }, s.prototype.gcd = function (t) {
          if (this.isZero()) return t.abs();
          if (t.isZero()) return this.abs();
          var e = this.clone(),
              r = t.clone();
          e.negative = 0, r.negative = 0;

          for (var n = 0; e.isEven() && r.isEven(); n++) {
            e.iushrn(1), r.iushrn(1);
          }

          for (;;) {
            for (; e.isEven();) {
              e.iushrn(1);
            }

            for (; r.isEven();) {
              r.iushrn(1);
            }

            var i = e.cmp(r);

            if (i < 0) {
              var o = e;
              e = r, r = o;
            } else if (0 === i || 0 === r.cmpn(1)) break;

            e.isub(r);
          }

          return r.iushln(n);
        }, s.prototype.invm = function (t) {
          return this.egcd(t).a.umod(t);
        }, s.prototype.isEven = function () {
          return 0 == (1 & this.words[0]);
        }, s.prototype.isOdd = function () {
          return 1 == (1 & this.words[0]);
        }, s.prototype.andln = function (t) {
          return this.words[0] & t;
        }, s.prototype.bincn = function (t) {
          i("number" == typeof t);
          var e = t % 26,
              r = (t - e) / 26,
              n = 1 << e;
          if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;

          for (var o = n, s = r; 0 !== o && s < this.length; s++) {
            var a = 0 | this.words[s];
            o = (a += o) >>> 26, a &= 67108863, this.words[s] = a;
          }

          return 0 !== o && (this.words[s] = o, this.length++), this;
        }, s.prototype.isZero = function () {
          return 1 === this.length && 0 === this.words[0];
        }, s.prototype.cmpn = function (t) {
          var e,
              r = t < 0;
          if (0 !== this.negative && !r) return -1;
          if (0 === this.negative && r) return 1;
          if (this.strip(), this.length > 1) e = 1;else {
            r && (t = -t), i(t <= 67108863, "Number is too big");
            var n = 0 | this.words[0];
            e = n === t ? 0 : n < t ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.cmp = function (t) {
          if (0 !== this.negative && 0 === t.negative) return -1;
          if (0 === this.negative && 0 !== t.negative) return 1;
          var e = this.ucmp(t);
          return 0 !== this.negative ? 0 | -e : e;
        }, s.prototype.ucmp = function (t) {
          if (this.length > t.length) return 1;
          if (this.length < t.length) return -1;

          for (var e = 0, r = this.length - 1; r >= 0; r--) {
            var n = 0 | this.words[r],
                i = 0 | t.words[r];

            if (n !== i) {
              n < i ? e = -1 : n > i && (e = 1);
              break;
            }
          }

          return e;
        }, s.prototype.gtn = function (t) {
          return 1 === this.cmpn(t);
        }, s.prototype.gt = function (t) {
          return 1 === this.cmp(t);
        }, s.prototype.gten = function (t) {
          return this.cmpn(t) >= 0;
        }, s.prototype.gte = function (t) {
          return this.cmp(t) >= 0;
        }, s.prototype.ltn = function (t) {
          return -1 === this.cmpn(t);
        }, s.prototype.lt = function (t) {
          return -1 === this.cmp(t);
        }, s.prototype.lten = function (t) {
          return this.cmpn(t) <= 0;
        }, s.prototype.lte = function (t) {
          return this.cmp(t) <= 0;
        }, s.prototype.eqn = function (t) {
          return 0 === this.cmpn(t);
        }, s.prototype.eq = function (t) {
          return 0 === this.cmp(t);
        }, s.red = function (t) {
          return new O(t);
        }, s.prototype.toRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), i(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t);
        }, s.prototype.fromRed = function () {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, s.prototype._forceRed = function (t) {
          return this.red = t, this;
        }, s.prototype.forceRed = function (t) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t);
        }, s.prototype.redAdd = function (t) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t);
        }, s.prototype.redIAdd = function (t) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t);
        }, s.prototype.redSub = function (t) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t);
        }, s.prototype.redISub = function (t) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t);
        }, s.prototype.redShl = function (t) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t);
        }, s.prototype.redMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t);
        }, s.prototype.redIMul = function (t) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t);
        }, s.prototype.redSqr = function () {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, s.prototype.redISqr = function () {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, s.prototype.redSqrt = function () {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, s.prototype.redInvm = function () {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, s.prototype.redNeg = function () {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, s.prototype.redPow = function (t) {
          return i(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t);
        };
        var v = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };

        function g(t, e) {
          this.name = t, this.p = new s(e, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }

        function w() {
          g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }

        function _() {
          g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }

        function M() {
          g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }

        function S() {
          g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }

        function O(t) {
          if ("string" == typeof t) {
            var e = s._prime(t);

            this.m = e.p, this.prime = e;
          } else i(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null;
        }

        function A(t) {
          O.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }

        g.prototype._tmp = function () {
          var t = new s(null);
          return t.words = new Array(Math.ceil(this.n / 13)), t;
        }, g.prototype.ireduce = function (t) {
          var e,
              r = t;

          do {
            this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (e > this.n);

          var n = e < this.n ? -1 : r.ucmp(this.p);
          return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
        }, g.prototype.split = function (t, e) {
          t.iushrn(this.n, 0, e);
        }, g.prototype.imulK = function (t) {
          return t.imul(this.k);
        }, o(w, g), w.prototype.split = function (t, e) {
          for (var r = Math.min(t.length, 9), n = 0; n < r; n++) {
            e.words[n] = t.words[n];
          }

          if (e.length = r, t.length <= 9) return t.words[0] = 0, void (t.length = 1);
          var i = t.words[9];

          for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
            var o = 0 | t.words[n];
            t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o;
          }

          i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9;
        }, w.prototype.imulK = function (t) {
          t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;

          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 0 | t.words[r];
            e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0);
          }

          return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t;
        }, o(_, g), o(M, g), o(S, g), S.prototype.imulK = function (t) {
          for (var e = 0, r = 0; r < t.length; r++) {
            var n = 19 * (0 | t.words[r]) + e,
                i = 67108863 & n;
            n >>>= 26, t.words[r] = i, e = n;
          }

          return 0 !== e && (t.words[t.length++] = e), t;
        }, s._prime = function (t) {
          if (v[t]) return v[t];
          var e;
          if ("k256" === t) e = new w();else if ("p224" === t) e = new _();else if ("p192" === t) e = new M();else {
            if ("p25519" !== t) throw new Error("Unknown prime " + t);
            e = new S();
          }
          return v[t] = e, e;
        }, O.prototype._verify1 = function (t) {
          i(0 === t.negative, "red works only with positives"), i(t.red, "red works only with red numbers");
        }, O.prototype._verify2 = function (t, e) {
          i(0 == (t.negative | e.negative), "red works only with positives"), i(t.red && t.red === e.red, "red works only with red numbers");
        }, O.prototype.imod = function (t) {
          return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
        }, O.prototype.neg = function (t) {
          return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
        }, O.prototype.add = function (t, e) {
          this._verify2(t, e);

          var r = t.add(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
        }, O.prototype.iadd = function (t, e) {
          this._verify2(t, e);

          var r = t.iadd(e);
          return r.cmp(this.m) >= 0 && r.isub(this.m), r;
        }, O.prototype.sub = function (t, e) {
          this._verify2(t, e);

          var r = t.sub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
        }, O.prototype.isub = function (t, e) {
          this._verify2(t, e);

          var r = t.isub(e);
          return r.cmpn(0) < 0 && r.iadd(this.m), r;
        }, O.prototype.shl = function (t, e) {
          return this._verify1(t), this.imod(t.ushln(e));
        }, O.prototype.imul = function (t, e) {
          return this._verify2(t, e), this.imod(t.imul(e));
        }, O.prototype.mul = function (t, e) {
          return this._verify2(t, e), this.imod(t.mul(e));
        }, O.prototype.isqr = function (t) {
          return this.imul(t, t.clone());
        }, O.prototype.sqr = function (t) {
          return this.mul(t, t);
        }, O.prototype.sqrt = function (t) {
          if (t.isZero()) return t.clone();
          var e = this.m.andln(3);

          if (i(e % 2 == 1), 3 === e) {
            var r = this.m.add(new s(1)).iushrn(2);
            return this.pow(t, r);
          }

          for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1);) {
            o++, n.iushrn(1);
          }

          i(!n.isZero());
          var a = new s(1).toRed(this),
              u = a.redNeg(),
              h = this.m.subn(1).iushrn(1),
              f = this.m.bitLength();

          for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, h).cmp(u);) {
            f.redIAdd(u);
          }

          for (var c = this.pow(f, n), l = this.pow(t, n.addn(1).iushrn(1)), d = this.pow(t, n), p = o; 0 !== d.cmp(a);) {
            for (var y = d, m = 0; 0 !== y.cmp(a); m++) {
              y = y.redSqr();
            }

            i(m < p);
            var b = this.pow(c, new s(1).iushln(p - m - 1));
            l = l.redMul(b), c = b.redSqr(), d = d.redMul(c), p = m;
          }

          return l;
        }, O.prototype.invm = function (t) {
          var e = t._invmp(this.m);

          return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e);
        }, O.prototype.pow = function (t, e) {
          if (e.isZero()) return new s(1).toRed(this);
          if (0 === e.cmpn(1)) return t.clone();
          var r = new Array(16);
          r[0] = new s(1).toRed(this), r[1] = t;

          for (var n = 2; n < r.length; n++) {
            r[n] = this.mul(r[n - 1], t);
          }

          var i = r[0],
              o = 0,
              a = 0,
              u = e.bitLength() % 26;

          for (0 === u && (u = 26), n = e.length - 1; n >= 0; n--) {
            for (var h = e.words[n], f = u - 1; f >= 0; f--) {
              var c = h >> f & 1;
              i !== r[0] && (i = this.sqr(i)), 0 !== c || 0 !== o ? (o <<= 1, o |= c, (4 === ++a || 0 === n && 0 === f) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
            }

            u = 26;
          }

          return i;
        }, O.prototype.convertTo = function (t) {
          var e = t.umod(this.m);
          return e === t ? e.clone() : e;
        }, O.prototype.convertFrom = function (t) {
          var e = t.clone();
          return e.red = null, e;
        }, s.mont = function (t) {
          return new A(t);
        }, o(A, O), A.prototype.convertTo = function (t) {
          return this.imod(t.ushln(this.shift));
        }, A.prototype.convertFrom = function (t) {
          var e = this.imod(t.mul(this.rinv));
          return e.red = null, e;
        }, A.prototype.imul = function (t, e) {
          if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
          var r = t.imul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.mul = function (t, e) {
          if (t.isZero() || e.isZero()) return new s(0)._forceRed(this);
          var r = t.mul(e),
              n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
              i = r.isub(n).iushrn(this.shift),
              o = i;
          return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
        }, A.prototype.invm = function (t) {
          return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(t, this);
    }).call(this, r(23)(t));
  }, function (t, e) {}, function (t, e, r) {
    e.publicEncrypt = r(285), e.privateDecrypt = r(287), e.privateEncrypt = function (t, r) {
      return e.publicEncrypt(t, r, !0);
    }, e.publicDecrypt = function (t, r) {
      return e.privateDecrypt(t, r, !0);
    };
  }, function (t, e, r) {
    var n = r(52),
        i = r(28),
        o = r(39),
        s = r(148),
        a = r(149),
        u = r(84),
        h = r(150),
        f = r(75),
        c = r(2).Buffer;

    t.exports = function (t, e, r) {
      var l;
      l = t.padding ? t.padding : r ? 1 : 4;
      var d,
          p = n(t);
      if (4 === l) d = function (t, e) {
        var r = t.modulus.byteLength(),
            n = e.length,
            h = o("sha1").update(c.alloc(0)).digest(),
            f = h.length,
            l = 2 * f;
        if (n > r - l - 2) throw new Error("message too long");
        var d = c.alloc(r - n - l - 2),
            p = r - f - 1,
            y = i(f),
            m = a(c.concat([h, d, c.alloc(1, 1), e], p), s(y, p)),
            b = a(y, s(m, f));
        return new u(c.concat([c.alloc(1), b, m], r));
      }(p, e);else if (1 === l) d = function (t, e, r) {
        var n,
            o = e.length,
            s = t.modulus.byteLength();
        if (o > s - 11) throw new Error("message too long");
        n = r ? c.alloc(s - o - 3, 255) : function (t) {
          var e,
              r = c.allocUnsafe(t),
              n = 0,
              o = i(2 * t),
              s = 0;

          for (; n < t;) {
            s === o.length && (o = i(2 * t), s = 0), (e = o[s++]) && (r[n++] = e);
          }

          return r;
        }(s - o - 3);
        return new u(c.concat([c.from([0, r ? 1 : 2]), n, c.alloc(1), e], s));
      }(p, e, r);else {
        if (3 !== l) throw new Error("unknown padding");
        if ((d = new u(e)).cmp(p.modulus) >= 0) throw new Error("data too long for modulus");
      }
      return r ? f(d, p) : h(d, p);
    };
  }, function (t, e) {}, function (t, e, r) {
    var n = r(52),
        i = r(148),
        o = r(149),
        s = r(84),
        a = r(75),
        u = r(39),
        h = r(150),
        f = r(2).Buffer;

    t.exports = function (t, e, r) {
      var c;
      c = t.padding ? t.padding : r ? 1 : 4;
      var l,
          d = n(t),
          p = d.modulus.byteLength();
      if (e.length > p || new s(e).cmp(d.modulus) >= 0) throw new Error("decryption error");
      l = r ? h(new s(e), d) : a(e, d);
      var y = f.alloc(p - l.length);
      if (l = f.concat([y, l], p), 4 === c) return function (t, e) {
        var r = t.modulus.byteLength(),
            n = u("sha1").update(f.alloc(0)).digest(),
            s = n.length;
        if (0 !== e[0]) throw new Error("decryption error");
        var a = e.slice(1, s + 1),
            h = e.slice(s + 1),
            c = o(a, i(h, s)),
            l = o(h, i(c, r - s - 1));
        if (function (t, e) {
          t = f.from(t), e = f.from(e);
          var r = 0,
              n = t.length;
          t.length !== e.length && (r++, n = Math.min(t.length, e.length));
          var i = -1;

          for (; ++i < n;) {
            r += t[i] ^ e[i];
          }

          return r;
        }(n, l.slice(0, s))) throw new Error("decryption error");
        var d = s;

        for (; 0 === l[d];) {
          d++;
        }

        if (1 !== l[d++]) throw new Error("decryption error");
        return l.slice(d);
      }(d, l);
      if (1 === c) return function (t, e, r) {
        var n = e.slice(0, 2),
            i = 2,
            o = 0;

        for (; 0 !== e[i++];) {
          if (i >= e.length) {
            o++;
            break;
          }
        }

        var s = e.slice(2, i - 1);
        ("0002" !== n.toString("hex") && !r || "0001" !== n.toString("hex") && r) && o++;
        s.length < 8 && o++;
        if (o) throw new Error("decryption error");
        return e.slice(i);
      }(0, l, r);
      if (3 === c) return l;
      throw new Error("unknown padding");
    };
  }, function (t, e, r) {
    "use strict";

    (function (t, n) {
      function i() {
        throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
      }

      var o = r(2),
          s = r(28),
          a = o.Buffer,
          u = o.kMaxLength,
          h = t.crypto || t.msCrypto,
          f = Math.pow(2, 32) - 1;

      function c(t, e) {
        if ("number" != typeof t || t != t) throw new TypeError("offset must be a number");
        if (t > f || t < 0) throw new TypeError("offset must be a uint32");
        if (t > u || t > e) throw new RangeError("offset out of range");
      }

      function l(t, e, r) {
        if ("number" != typeof t || t != t) throw new TypeError("size must be a number");
        if (t > f || t < 0) throw new TypeError("size must be a uint32");
        if (t + e > r || t > u) throw new RangeError("buffer too small");
      }

      function d(t, e, r, i) {
        if (n.browser) {
          var o = t.buffer,
              a = new Uint8Array(o, e, r);
          return h.getRandomValues(a), i ? void n.nextTick(function () {
            i(null, t);
          }) : t;
        }

        if (!i) return s(r).copy(t, e), t;
        s(r, function (r, n) {
          if (r) return i(r);
          n.copy(t, e), i(null, t);
        });
      }

      h && h.getRandomValues || !n.browser ? (e.randomFill = function (e, r, n, i) {
        if (!(a.isBuffer(e) || e instanceof t.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        if ("function" == typeof r) i = r, r = 0, n = e.length;else if ("function" == typeof n) i = n, n = e.length - r;else if ("function" != typeof i) throw new TypeError('"cb" argument must be a function');
        return c(r, e.length), l(n, r, e.length), d(e, r, n, i);
      }, e.randomFillSync = function (e, r, n) {
        void 0 === r && (r = 0);
        if (!(a.isBuffer(e) || e instanceof t.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        c(r, e.length), void 0 === n && (n = e.length - r);
        return l(n, r, e.length), d(e, r, n);
      }) : (e.randomFill = i, e.randomFillSync = i);
    }).call(this, r(7), r(5));
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    t.exports = r(61).Decimal128;
  }, function (t, e, r) {
    "use strict";
    /*!
     * [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) ObjectId
     * @constructor NodeMongoDbObjectId
     * @see ObjectId
     */

    var n = r(61).ObjectID;
    /*!
     * Getter for convenience with populate, see gh-6115
     */

    Object.defineProperty(n.prototype, "_id", {
      enumerable: !1,
      configurable: !0,
      get: function get() {
        return this;
      }
    }),
    /*!
     * ignore
     */
    t.exports = n;
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    t.exports = function () {};
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(14),
        i = r(365),
        o = !1;
    t.exports = function () {
      return o ? i : n;
    },
    /*!
     * ignore
     */
    t.exports.setBrowser = function (t) {
      o = t;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Dependencies
     */

    var n = r(294).ctor("require", "modify", "init", "default", "ignore");

    function i() {
      this.activePaths = new n(), this.strictMode = void 0;
    }

    t.exports = i, i.prototype.fullPath = void 0, i.prototype.strictMode = void 0, i.prototype.selected = void 0, i.prototype.shardval = void 0, i.prototype.saveError = void 0, i.prototype.validationError = void 0, i.prototype.adhocPaths = void 0, i.prototype.removing = void 0, i.prototype.inserting = void 0, i.prototype.saving = void 0, i.prototype.version = void 0, i.prototype._id = void 0, i.prototype.ownerDocument = void 0, i.prototype.populate = void 0, i.prototype.populated = void 0, i.prototype.wasPopulated = !1, i.prototype.scope = void 0, i.prototype.session = null, i.prototype.pathsToScopes = null, i.prototype.cachedRequired = null;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(4),
        i = t.exports = function () {};
    /*!
     * StateMachine represents a minimal `interface` for the
     * constructors it builds via StateMachine.ctor(...).
     *
     * @api private
     */

    /*!
     * StateMachine.ctor('state1', 'state2', ...)
     * A factory method for subclassing StateMachine.
     * The arguments are a list of states. For each state,
     * the constructor's prototype gets state transition
     * methods named after each state. These transition methods
     * place their path argument into the given state.
     *
     * @param {String} state
     * @param {String} [state]
     * @return {Function} subclass constructor
     * @private
     */


    i.ctor = function () {
      var t = n.args(arguments),
          e = function e() {
        i.apply(this, arguments), this.paths = {}, this.states = {}, this.stateNames = t;

        for (var e, r = t.length; r--;) {
          e = t[r], this.states[e] = {};
        }
      };

      return e.prototype = new i(), t.forEach(function (t) {
        e.prototype[t] = function (e) {
          this._changeState(e, t);
        };
      }), e;
    },
    /*!
     * This function is wrapped by the state change functions:
     *
     * - `require(path)`
     * - `modify(path)`
     * - `init(path)`
     *
     * @api private
     */
    i.prototype._changeState = function (t, e) {
      var r = this.states[this.paths[t]];
      r && delete r[t], this.paths[t] = e, this.states[e][t] = !0;
    },
    /*!
     * ignore
     */
    i.prototype.clear = function (t) {
      for (var e, r = Object.keys(this.states[t]), n = r.length; n--;) {
        e = r[n], delete this.states[t][e], delete this.paths[e];
      }
    },
    /*!
     * Checks to see if at least one path is in the states passed in via `arguments`
     * e.g., this.some('required', 'inited')
     *
     * @param {String} state that we want to check for.
     * @private
     */
    i.prototype.some = function () {
      var t = this,
          e = arguments.length ? arguments : this.stateNames;
      return Array.prototype.some.call(e, function (e) {
        return Object.keys(t.states[e]).length;
      });
    },
    /*!
     * This function builds the functions that get assigned to `forEach` and `map`,
     * since both of those methods share a lot of the same logic.
     *
     * @param {String} iterMethod is either 'forEach' or 'map'
     * @return {Function}
     * @api private
     */
    i.prototype._iter = function (t) {
      return function () {
        var e = arguments.length,
            r = n.args(arguments, 0, e - 1),
            i = arguments[e - 1];
        r.length || (r = this.stateNames);
        var o = this,
            s = r.reduce(function (t, e) {
          return t.concat(Object.keys(o.states[e]));
        }, []);
        return s[t](function (t, e, r) {
          return i(t, e, r);
        });
      };
    },
    /*!
     * Iterates over the paths that belong to one of the parameter states.
     *
     * The function profile can look like:
     * this.forEach(state1, fn);         // iterates over all paths in state1
     * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
     * this.forEach(fn);                 // iterates over all paths in all states
     *
     * @param {String} [state]
     * @param {String} [state]
     * @param {Function} callback
     * @private
     */
    i.prototype.forEach = function () {
      return this.forEach = this._iter("forEach"), this.forEach.apply(this, arguments);
    },
    /*!
     * Maps over the paths that belong to one of the parameter states.
     *
     * The function profile can look like:
     * this.forEach(state1, fn);         // iterates over all paths in state1
     * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2
     * this.forEach(fn);                 // iterates over all paths in all states
     *
     * @param {String} [state]
     * @param {String} [state]
     * @param {Function} callback
     * @return {Array}
     * @private
     */
    i.prototype.map = function () {
      return this.map = this._iter("map"), this.map.apply(this, arguments);
    };
  }, function (t, e, r) {
    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(296),
        o = ["__proto__", "constructor", "prototype"];
    /*!
     * Returns the value passed to it.
     */

    function s(t) {
      return t;
    }

    e.get = function (t, r, o, a) {
      var u;
      "function" == typeof o && (o.length < 2 ? (a = o, o = void 0) : (u = o, o = void 0)), a || (a = s);
      var h = "string" == typeof t ? i(t) : t;
      if (!Array.isArray(h)) throw new TypeError("Invalid `path`. Must be either string or array");

      for (var f, c = r, l = 0; l < h.length; ++l) {
        if (f = h[l], "string" != typeof h[l] && "number" != typeof h[l]) throw new TypeError("Each segment of path to `get()` must be a string or number, got " + n(h[l]));

        if (Array.isArray(c) && !/^\d+$/.test(f)) {
          var d = h.slice(l);
          return [].concat(c).map(function (t) {
            return t ? e.get(d, t, o || u, a) : a(void 0);
          });
        }

        if (u) c = u(c, f);else {
          var p = o && c[o] ? c[o] : c;
          c = p instanceof Map ? p.get(f) : p[f];
        }
        if (!c) return a(c);
      }

      return a(c);
    }, e.has = function (t, e) {
      var r = "string" == typeof t ? i(t) : t;
      if (!Array.isArray(r)) throw new TypeError("Invalid `path`. Must be either string or array");

      for (var o = r.length, s = e, a = 0; a < o; ++a) {
        if ("string" != typeof r[a] && "number" != typeof r[a]) throw new TypeError("Each segment of path to `has()` must be a string or number, got " + n(r[a]));
        if (null == s || "object" !== n(s) || !(r[a] in s)) return !1;
        s = s[r[a]];
      }

      return !0;
    }, e.unset = function (t, e) {
      var r = "string" == typeof t ? i(t) : t;
      if (!Array.isArray(r)) throw new TypeError("Invalid `path`. Must be either string or array");

      for (var s = r.length, a = e, u = 0; u < s; ++u) {
        if (null == a || "object" !== n(a) || !(r[u] in a)) return !1;
        if ("string" != typeof r[u] && "number" != typeof r[u]) throw new TypeError("Each segment of path to `unset()` must be a string or number, got " + n(r[u]));
        if (-1 !== o.indexOf(r[u])) return !1;
        if (u === s - 1) return delete a[r[u]], !0;
        a = a instanceof Map ? a.get(r[u]) : a[r[u]];
      }

      return !0;
    }, e.set = function (t, r, a, u, h, f) {
      var c;
      "function" == typeof u && (u.length < 2 ? (h = u, u = void 0) : (c = u, u = void 0)), h || (h = s);
      var l = "string" == typeof t ? i(t) : t;
      if (!Array.isArray(l)) throw new TypeError("Invalid `path`. Must be either string or array");

      if (null != a) {
        for (var d = 0; d < l.length; ++d) {
          if ("string" != typeof l[d] && "number" != typeof l[d]) throw new TypeError("Each segment of path to `set()` must be a string or number, got " + n(l[d]));
          if (-1 !== o.indexOf(l[d])) return;
        }

        for (var p, y = f || /\$/.test(t) && !1 !== f, m = a, b = (d = 0, l.length - 1); d < b; ++d) {
          if ("$" != (p = l[d])) {
            if (Array.isArray(m) && !/^\d+$/.test(p)) {
              var v = l.slice(d);
              if (!y && Array.isArray(r)) for (var g = 0; g < m.length && g < r.length; ++g) {
                e.set(v, r[g], m[g], u || c, h, y);
              } else for (g = 0; g < m.length; ++g) {
                e.set(v, r, m[g], u || c, h, y);
              }
              return;
            }

            if (c) m = c(m, p);else {
              var w = u && m[u] ? m[u] : m;
              m = w instanceof Map ? w.get(p) : w[p];
            }
            if (!m) return;
          } else if (d == b - 1) break;
        }

        if (p = l[b], u && m[u] && (m = m[u]), Array.isArray(m) && !/^\d+$/.test(p)) {
          if (!y && Array.isArray(r)) !
          /*!
           * Recursively set nested arrays
           */
          function t(e, r, n, i, o, s) {
            for (var a, u = 0; u < e.length && u < r.length; ++u) {
              a = e[u], Array.isArray(a) && Array.isArray(r[u]) ? t(a, r[u], n, i, o, s) : a && (i ? i(a, n, s(r[u])) : (a[o] && (a = a[o]), a[n] = s(r[u])));
            }
          }(m, r, p, c, u, h);else for (g = 0; g < m.length; ++g) {
            var _ = m[g];
            _ && (c ? c(_, p, h(r)) : (_[u] && (_ = _[u]), _[p] = h(r)));
          }
        } else c ? c(m, p, h(r)) : m instanceof Map ? m.set(p, h(r)) : m[p] = h(r);
      }
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t) {
      for (var e = [], r = "", n = "DEFAULT", i = 0; i < t.length; ++i) {
        "IN_SQUARE_BRACKETS" !== n || /\d/.test(t[i]) || "]" === t[i] || (n = "DEFAULT", r = e[e.length - 1] + "[" + r, e.splice(e.length - 1, 1)), "[" === t[i] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e.push(r), r = ""), n = "IN_SQUARE_BRACKETS") : "]" === t[i] ? "IN_SQUARE_BRACKETS" === n ? (n = "IMMEDIATELY_AFTER_SQUARE_BRACKETS", e.push(r), r = "") : (n = "DEFAULT", r += t[i]) : "." === t[i] ? ("IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && (e.push(r), r = ""), n = "DEFAULT") : r += t[i];
      }

      return "IMMEDIATELY_AFTER_SQUARE_BRACKETS" !== n && e.push(r), e;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e, r) {
      return e && i(t.prototype, e), r && i(t, r), Object.defineProperty(t, "prototype", {
        writable: !1
      }), t;
    }

    var s = r(44),
        a = o(function t(e) {
      if (function (t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
      }(this, t), this._docs = {}, this._childDocs = [], null != e && (e = s(e), Object.assign(this, e), "object" === n(e.subPopulate) && (this.populate = e.subPopulate), null != e.perDocumentLimit && null != e.limit)) throw new Error("Can not use `limit` and `perDocumentLimit` at the same time. Path: `" + e.path + "`.");
    });
    t.exports = a;
  }, function (t, e, r) {
    "use strict";
    /*
    object-assign
    (c) Sindre Sorhus
    @license MIT
    */

    var n = Object.getOwnPropertySymbols,
        i = Object.prototype.hasOwnProperty,
        o = Object.prototype.propertyIsEnumerable;

    function s(t) {
      if (null == t) throw new TypeError("Object.assign cannot be called with null or undefined");
      return Object(t);
    }

    t.exports = function () {
      try {
        if (!Object.assign) return !1;
        var t = new String("abc");
        if (t[5] = "de", "5" === Object.getOwnPropertyNames(t)[0]) return !1;

        for (var e = {}, r = 0; r < 10; r++) {
          e["_" + String.fromCharCode(r)] = r;
        }

        if ("0123456789" !== Object.getOwnPropertyNames(e).map(function (t) {
          return e[t];
        }).join("")) return !1;
        var n = {};
        return "abcdefghijklmnopqrst".split("").forEach(function (t) {
          n[t] = t;
        }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, n)).join("");
      } catch (t) {
        return !1;
      }
    }() ? Object.assign : function (t, e) {
      for (var r, a, u = s(t), h = 1; h < arguments.length; h++) {
        for (var f in r = Object(arguments[h])) {
          i.call(r, f) && (u[f] = r[f]);
        }

        if (n) {
          a = n(r);

          for (var c = 0; c < a.length; c++) {
            o.call(r, a[c]) && (u[a[c]] = r[a[c]]);
          }
        }
      }

      return u;
    };
  }, function (t, e) {
    function r(t) {
      return (r = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    t.exports = function (t) {
      return t && "object" === r(t) && "function" == typeof t.copy && "function" == typeof t.fill && "function" == typeof t.readUInt8;
    };
  }, function (t, e) {
    "function" == typeof Object.create ? t.exports = function (t, e) {
      t.super_ = e, t.prototype = Object.create(e.prototype, {
        constructor: {
          value: t,
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      });
    } : t.exports = function (t, e) {
      t.super_ = e;

      var r = function r() {};

      r.prototype = e.prototype, t.prototype = new r(), t.prototype.constructor = t;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n11 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n11 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n11++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    function o(t) {
      return (o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var s = r(152),
        a = r(36),
        u = r(9),
        h = r(158),
        f = r(302)("mquery");

    function c(t, e) {
      if (!(this instanceof c)) return new c(t, e);
      var r = this.constructor.prototype;
      this.op = r.op || void 0, this.options = Object.assign({}, r.options), this._conditions = r._conditions ? h.clone(r._conditions) : {}, this._fields = r._fields ? h.clone(r._fields) : void 0, this._update = r._update ? h.clone(r._update) : void 0, this._path = r._path || void 0, this._distinct = r._distinct || void 0, this._collection = r._collection || void 0, this._traceFunction = r._traceFunction || void 0, e && this.setOptions(e), t && (t.find && t.remove && t.update ? this.collection(t) : this.find(t));
    }

    var l = "$geoWithin";
    Object.defineProperty(c, "use$geoWithin", {
      get: function get() {
        return "$geoWithin" == l;
      },
      set: function set(t) {
        l = !0 === t ? "$geoWithin" : "$within";
      }
    }), c.prototype.toConstructor = function () {
      function t(e, r) {
        if (!(this instanceof t)) return new t(e, r);
        c.call(this, e, r);
      }

      h.inherits(t, c);
      var e = t.prototype;
      return e.options = {}, e.setOptions(this.options), e.op = this.op, e._conditions = h.clone(this._conditions), e._fields = h.clone(this._fields), e._update = h.clone(this._update), e._path = this._path, e._distinct = this._distinct, e._collection = this._collection, e._traceFunction = this._traceFunction, t;
    }, c.prototype.setOptions = function (t) {
      if (!t || !h.isObject(t)) return this;

      for (var e, r = h.keys(t), n = 0; n < r.length; ++n) {
        if ("function" == typeof this[e = r[n]]) {
          var i = h.isArray(t[e]) ? t[e] : [t[e]];
          this[e].apply(this, i);
        } else this.options[e] = t[e];
      }

      return this;
    }, c.prototype.collection = function (t) {
      return this._collection = new c.Collection(t), this;
    }, c.prototype.collation = function (t) {
      return this.options.collation = t, this;
    }, c.prototype.$where = function (t) {
      return this._conditions.$where = t, this;
    }, c.prototype.where = function () {
      if (!arguments.length) return this;
      this.op || (this.op = "find");
      var t = o(arguments[0]);
      if ("string" == t) return this._path = arguments[0], 2 === arguments.length && (this._conditions[this._path] = arguments[1]), this;
      if ("object" == t && !Array.isArray(arguments[0])) return this.merge(arguments[0]);
      throw new TypeError("path must be a string or object");
    }, c.prototype.equals = function (t) {
      this._ensurePath("equals");

      var e = this._path;
      return this._conditions[e] = t, this;
    }, c.prototype.eq = function (t) {
      this._ensurePath("eq");

      var e = this._path;
      return this._conditions[e] = t, this;
    }, c.prototype.or = function (t) {
      var e = this._conditions.$or || (this._conditions.$or = []);
      return h.isArray(t) || (t = [t]), e.push.apply(e, t), this;
    }, c.prototype.nor = function (t) {
      var e = this._conditions.$nor || (this._conditions.$nor = []);
      return h.isArray(t) || (t = [t]), e.push.apply(e, t), this;
    }, c.prototype.and = function (t) {
      var e = this._conditions.$and || (this._conditions.$and = []);
      return Array.isArray(t) || (t = [t]), e.push.apply(e, t), this;
    },
    /*!
     * gt, gte, lt, lte, ne, in, nin, all, regex, size, maxDistance
     *
     *     Thing.where('type').nin(array)
     */
    "gt gte lt lte ne in nin all regex size maxDistance minDistance".split(" ").forEach(function (t) {
      c.prototype[t] = function () {
        var e, r;
        1 === arguments.length ? (this._ensurePath(t), r = arguments[0], e = this._path) : (r = arguments[1], e = arguments[0]);
        var n = null === this._conditions[e] || "object" === o(this._conditions[e]) ? this._conditions[e] : this._conditions[e] = {};
        return n["$" + t] = r, this;
      };
    }), c.prototype.mod = function () {
      var t, e;
      1 === arguments.length ? (this._ensurePath("mod"), t = arguments[0], e = this._path) : 2 !== arguments.length || h.isArray(arguments[1]) ? 3 === arguments.length ? (t = s(arguments, 1), e = arguments[0]) : (t = arguments[1], e = arguments[0]) : (this._ensurePath("mod"), t = s(arguments), e = this._path);
      var r = this._conditions[e] || (this._conditions[e] = {});
      return r.$mod = t, this;
    }, c.prototype.exists = function () {
      var t, e;
      0 === arguments.length ? (this._ensurePath("exists"), t = this._path, e = !0) : 1 === arguments.length ? "boolean" == typeof arguments[0] ? (this._ensurePath("exists"), t = this._path, e = arguments[0]) : (t = arguments[0], e = !0) : 2 === arguments.length && (t = arguments[0], e = arguments[1]);
      var r = this._conditions[t] || (this._conditions[t] = {});
      return r.$exists = e, this;
    }, c.prototype.elemMatch = function () {
      if (null == arguments[0]) throw new TypeError("Invalid argument");
      var t, e, r;
      if ("function" == typeof arguments[0]) this._ensurePath("elemMatch"), e = this._path, t = arguments[0];else if (h.isObject(arguments[0])) this._ensurePath("elemMatch"), e = this._path, r = arguments[0];else if ("function" == typeof arguments[1]) e = arguments[0], t = arguments[1];else {
        if (!arguments[1] || !h.isObject(arguments[1])) throw new TypeError("Invalid argument");
        e = arguments[0], r = arguments[1];
      }
      t && (t(r = new c()), r = r._conditions);
      var n = this._conditions[e] || (this._conditions[e] = {});
      return n.$elemMatch = r, this;
    }, c.prototype.within = function () {
      if (this._ensurePath("within"), this._geoComparison = l, 0 === arguments.length) return this;
      if (2 === arguments.length) return this.box.apply(this, arguments);
      if (2 < arguments.length) return this.polygon.apply(this, arguments);
      var t = arguments[0];
      if (!t) throw new TypeError("Invalid argument");
      if (t.center) return this.circle(t);
      if (t.box) return this.box.apply(this, t.box);
      if (t.polygon) return this.polygon.apply(this, t.polygon);
      if (t.type && t.coordinates) return this.geometry(t);
      throw new TypeError("Invalid argument");
    }, c.prototype.box = function () {
      var t, e;
      if (3 === arguments.length) t = arguments[0], e = [arguments[1], arguments[2]];else {
        if (2 !== arguments.length) throw new TypeError("Invalid argument");
        this._ensurePath("box"), t = this._path, e = [arguments[0], arguments[1]];
      }
      var r = this._conditions[t] || (this._conditions[t] = {});
      return r[this._geoComparison || l] = {
        $box: e
      }, this;
    }, c.prototype.polygon = function () {
      var t, e;
      "string" == typeof arguments[0] ? (e = arguments[0], t = s(arguments, 1)) : (this._ensurePath("polygon"), e = this._path, t = s(arguments));
      var r = this._conditions[e] || (this._conditions[e] = {});
      return r[this._geoComparison || l] = {
        $polygon: t
      }, this;
    }, c.prototype.circle = function () {
      var t, e;
      if (1 === arguments.length) this._ensurePath("circle"), t = this._path, e = arguments[0];else {
        if (2 !== arguments.length) throw new TypeError("Invalid argument");
        t = arguments[0], e = arguments[1];
      }
      if (!("radius" in e) || !e.center) throw new Error("center and radius are required");
      var r = this._conditions[t] || (this._conditions[t] = {}),
          n = e.spherical ? "$centerSphere" : "$center",
          i = this._geoComparison || l;
      return r[i] = {}, r[i][n] = [e.center, e.radius], "unique" in e && (r[i].$uniqueDocs = !!e.unique), this;
    }, c.prototype.near = function () {
      var t, e;
      if (this._geoComparison = "$near", 0 === arguments.length) return this;
      if (1 === arguments.length) this._ensurePath("near"), t = this._path, e = arguments[0];else {
        if (2 !== arguments.length) throw new TypeError("Invalid argument");
        t = arguments[0], e = arguments[1];
      }
      if (!e.center) throw new Error("center is required");
      var r = this._conditions[t] || (this._conditions[t] = {}),
          n = e.spherical ? "$nearSphere" : "$near";

      if (Array.isArray(e.center)) {
        r[n] = e.center;
        var i = "maxDistance" in e ? e.maxDistance : null;
        null != i && (r.$maxDistance = i), null != e.minDistance && (r.$minDistance = e.minDistance);
      } else {
        if ("Point" != e.center.type || !Array.isArray(e.center.coordinates)) throw new Error(u.format("Invalid GeoJSON specified for %s", n));
        r[n] = {
          $geometry: e.center
        }, "maxDistance" in e && (r[n].$maxDistance = e.maxDistance), "minDistance" in e && (r[n].$minDistance = e.minDistance);
      }

      return this;
    }, c.prototype.intersects = function () {
      if (this._ensurePath("intersects"), this._geoComparison = "$geoIntersects", 0 === arguments.length) return this;
      var t = arguments[0];
      if (null != t && t.type && t.coordinates) return this.geometry(t);
      throw new TypeError("Invalid argument");
    }, c.prototype.geometry = function () {
      if ("$within" != this._geoComparison && "$geoWithin" != this._geoComparison && "$near" != this._geoComparison && "$geoIntersects" != this._geoComparison) throw new Error("geometry() must come after `within()`, `intersects()`, or `near()");
      var t, e;
      if (1 !== arguments.length) throw new TypeError("Invalid argument");
      if (this._ensurePath("geometry"), e = this._path, !(t = arguments[0]).type || !Array.isArray(t.coordinates)) throw new TypeError("Invalid argument");
      var r = this._conditions[e] || (this._conditions[e] = {});
      return r[this._geoComparison] = {
        $geometry: t
      }, this;
    }, c.prototype.select = function () {
      var t = arguments[0];
      if (!t) return this;
      if (1 !== arguments.length) throw new Error("Invalid select: select only takes 1 argument");

      this._validate("select");

      var e,
          r,
          n = this._fields || (this._fields = {}),
          i = o(t);

      if (("string" == i || h.isArgumentsObject(t)) && "number" == typeof t.length || Array.isArray(t)) {
        for ("string" == i && (t = t.split(/\s+/)), e = 0, r = t.length; e < r; ++e) {
          var s = t[e];

          if (s) {
            var a = "-" == s[0] ? 0 : 1;
            0 === a && (s = s.substring(1)), n[s] = a;
          }
        }

        return this;
      }

      if (h.isObject(t)) {
        var u = h.keys(t);

        for (e = 0; e < u.length; ++e) {
          n[u[e]] = t[u[e]];
        }

        return this;
      }

      throw new TypeError("Invalid select() argument. Must be string or object.");
    }, c.prototype.slice = function () {
      if (0 === arguments.length) return this;
      var t, e;

      if (this._validate("slice"), 1 === arguments.length) {
        var r = arguments[0];

        if ("object" === o(r) && !Array.isArray(r)) {
          for (var n = Object.keys(r), i = n.length, a = 0; a < i; ++a) {
            this.slice(n[a], r[n[a]]);
          }

          return this;
        }

        this._ensurePath("slice"), t = this._path, e = arguments[0];
      } else 2 === arguments.length ? "number" == typeof arguments[0] ? (this._ensurePath("slice"), t = this._path, e = s(arguments)) : (t = arguments[0], e = arguments[1]) : 3 === arguments.length && (t = arguments[0], e = s(arguments, 1));

      var u = this._fields || (this._fields = {});
      return u[t] = {
        $slice: e
      }, this;
    }, c.prototype.sort = function (t) {
      if (!t) return this;
      var e, r, n;

      this._validate("sort");

      var i = o(t);

      if (Array.isArray(t)) {
        for (r = t.length, e = 0; e < t.length; ++e) {
          if (!Array.isArray(t[e])) throw new Error("Invalid sort() argument, must be array of arrays");
          y(this.options, t[e][0], t[e][1]);
        }

        return this;
      }

      if (1 === arguments.length && "string" == i) {
        for (r = (t = t.split(/\s+/)).length, e = 0; e < r; ++e) {
          if (n = t[e]) {
            var s = "-" == n[0] ? -1 : 1;
            -1 === s && (n = n.substring(1)), p(this.options, n, s);
          }
        }

        return this;
      }

      if (h.isObject(t)) {
        var a = h.keys(t);

        for (e = 0; e < a.length; ++e) {
          n = a[e], p(this.options, n, t[n]);
        }

        return this;
      }

      if ("undefined" != typeof Map && t instanceof Map) return m(this.options, t), this;
      throw new TypeError("Invalid sort() argument. Must be a string, object, or array.");
    };
    /*!
     * @ignore
     */

    var d = {
      1: 1,
      "-1": -1,
      asc: 1,
      ascending: 1,
      desc: -1,
      descending: -1
    };

    function p(t, e, r) {
      if (Array.isArray(t.sort)) throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");
      var n;
      if (r && r.$meta) (n = t.sort || (t.sort = {}))[e] = {
        $meta: r.$meta
      };else {
        n = t.sort || (t.sort = {});
        var i = String(r || 1).toLowerCase();
        if (!(i = d[i])) throw new TypeError("Invalid sort value: { " + e + ": " + r + " }");
        n[e] = i;
      }
    }

    function y(t, e, r) {
      if (t.sort = t.sort || [], !Array.isArray(t.sort)) throw new TypeError("Can't mix sort syntaxes. Use either array or object:\n- `.sort([['field', 1], ['test', -1]])`\n- `.sort({ field: 1, test: -1 })`");
      var n = String(r || 1).toLowerCase();
      if (!(n = d[n])) throw new TypeError("Invalid sort value: [ " + e + ", " + r + " ]");
      t.sort.push([e, n]);
    }

    function m(t, e) {
      if (t.sort = t.sort || new Map(), !(t.sort instanceof Map)) throw new TypeError("Can't mix sort syntaxes. Use either array or object or map consistently");
      e.forEach(function (e, r) {
        var n = String(e || 1).toLowerCase();
        if (!(n = d[n])) throw new TypeError("Invalid sort value: < " + r + ": " + e + " >");
        t.sort.set(r, n);
      });
    }
    /*!
     * limit, skip, maxScan, batchSize, comment
     *
     * Sets these associated options.
     *
     *     query.comment('feed query');
     */

    /*!
     * Internal helper for update, updateMany, updateOne
     */


    function b(t, e, r, n, i, o, s) {
      return t.op = e, c.canMerge(r) && t.merge(r), n && t._mergeUpdate(n), h.isObject(i) && t.setOptions(i), o || s ? !t._update || !t.options.overwrite && 0 === h.keys(t._update).length ? (s && h.soon(s.bind(null, null, 0)), t) : (i = t._optionsForExec(), s || (i.safe = !1), r = t._conditions, n = t._updateForExec(), f("update", t._collection.collectionName, r, n, i), s = t._wrapCallback(e, s, {
        conditions: r,
        doc: n,
        options: i
      }), t._collection[e](r, n, i, h.tick(s)), t) : t;
    }

    ["limit", "skip", "maxScan", "batchSize", "comment"].forEach(function (t) {
      c.prototype[t] = function (e) {
        return this._validate(t), this.options[t] = e, this;
      };
    }), c.prototype.maxTime = c.prototype.maxTimeMS = function (t) {
      return this._validate("maxTime"), this.options.maxTimeMS = t, this;
    }, c.prototype.snapshot = function () {
      return this._validate("snapshot"), this.options.snapshot = !arguments.length || !!arguments[0], this;
    }, c.prototype.hint = function () {
      if (0 === arguments.length) return this;

      this._validate("hint");

      var t = arguments[0];

      if (h.isObject(t)) {
        var e = this.options.hint || (this.options.hint = {});

        for (var r in t) {
          e[r] = t[r];
        }

        return this;
      }

      if ("string" == typeof t) return this.options.hint = t, this;
      throw new TypeError("Invalid hint. " + t);
    }, c.prototype.j = function (t) {
      return this.options.j = t, this;
    }, c.prototype.slaveOk = function (t) {
      return this.options.slaveOk = !arguments.length || !!t, this;
    }, c.prototype.read = c.prototype.setReadPreference = function (t) {
      return arguments.length > 1 && !c.prototype.read.deprecationWarningIssued && (console.error("Deprecation warning: 'tags' argument is not supported anymore in Query.read() method. Please use mongodb.ReadPreference object instead."), c.prototype.read.deprecationWarningIssued = !0), this.options.readPreference = h.readPref(t), this;
    }, c.prototype.readConcern = c.prototype.r = function (t) {
      return this.options.readConcern = h.readConcern(t), this;
    }, c.prototype.tailable = function () {
      return this._validate("tailable"), this.options.tailable = !arguments.length || !!arguments[0], this;
    }, c.prototype.writeConcern = c.prototype.w = function (t) {
      return "object" === o(t) ? (void 0 !== t.j && (this.options.j = t.j), void 0 !== t.w && (this.options.w = t.w), void 0 !== t.wtimeout && (this.options.wtimeout = t.wtimeout)) : this.options.w = "m" === t ? "majority" : t, this;
    }, c.prototype.wtimeout = c.prototype.wTimeout = function (t) {
      return this.options.wtimeout = t, this;
    }, c.prototype.merge = function (t) {
      if (!t) return this;
      if (!c.canMerge(t)) throw new TypeError("Invalid argument. Expected instanceof mquery or plain object");
      return t instanceof c ? (t._conditions && h.merge(this._conditions, t._conditions), t._fields && (this._fields || (this._fields = {}), h.merge(this._fields, t._fields)), t.options && (this.options || (this.options = {}), h.merge(this.options, t.options)), t._update && (this._update || (this._update = {}), h.mergeClone(this._update, t._update)), t._distinct && (this._distinct = t._distinct), this) : (h.merge(this._conditions, t), this);
    }, c.prototype.find = function (t, e) {
      if (this.op = "find", "function" == typeof t ? (e = t, t = void 0) : c.canMerge(t) && this.merge(t), !e) return this;

      var r = this._conditions,
          n = this._optionsForExec();

      return this.$useProjection ? n.projection = this._fieldsForExec() : n.fields = this._fieldsForExec(), f("find", this._collection.collectionName, r, n), e = this._wrapCallback("find", e, {
        conditions: r,
        options: n
      }), this._collection.find(r, n, h.tick(e)), this;
    }, c.prototype.cursor = function (t) {
      if (this.op) {
        if ("find" !== this.op) throw new TypeError(".cursor only support .find method");
      } else this.find(t);

      var e = this._conditions,
          r = this._optionsForExec();

      return this.$useProjection ? r.projection = this._fieldsForExec() : r.fields = this._fieldsForExec(), f("findCursor", this._collection.collectionName, e, r), this._collection.findCursor(e, r);
    }, c.prototype.findOne = function (t, e) {
      if (this.op = "findOne", "function" == typeof t ? (e = t, t = void 0) : c.canMerge(t) && this.merge(t), !e) return this;

      var r = this._conditions,
          n = this._optionsForExec();

      return this.$useProjection ? n.projection = this._fieldsForExec() : n.fields = this._fieldsForExec(), f("findOne", this._collection.collectionName, r, n), e = this._wrapCallback("findOne", e, {
        conditions: r,
        options: n
      }), this._collection.findOne(r, n, h.tick(e)), this;
    }, c.prototype.count = function (t, e) {
      if (this.op = "count", this._validate(), "function" == typeof t ? (e = t, t = void 0) : c.canMerge(t) && this.merge(t), !e) return this;

      var r = this._conditions,
          n = this._optionsForExec();

      return f("count", this._collection.collectionName, r, n), e = this._wrapCallback("count", e, {
        conditions: r,
        options: n
      }), this._collection.count(r, n, h.tick(e)), this;
    }, c.prototype.distinct = function (t, e, r) {
      if (this.op = "distinct", this._validate(), !r) {
        switch (o(e)) {
          case "function":
            r = e, "string" == typeof t && (e = t, t = void 0);
            break;

          case "undefined":
          case "string":
            break;

          default:
            throw new TypeError("Invalid `field` argument. Must be string or function");
        }

        switch (o(t)) {
          case "function":
            r = t, t = e = void 0;
            break;

          case "string":
            e = t, t = void 0;
        }
      }

      if ("string" == typeof e && (this._distinct = e), c.canMerge(t) && this.merge(t), !r) return this;
      if (!this._distinct) throw new Error("No value for `distinct` has been declared");

      var n = this._conditions,
          i = this._optionsForExec();

      return f("distinct", this._collection.collectionName, n, i), r = this._wrapCallback("distinct", r, {
        conditions: n,
        options: i
      }), this._collection.distinct(this._distinct, n, i, h.tick(r)), this;
    }, c.prototype.update = function (t, e, r, n) {
      var i;

      switch (arguments.length) {
        case 3:
          "function" == typeof r && (n = r, r = void 0);
          break;

        case 2:
          "function" == typeof e && (n = e, e = t, t = void 0);
          break;

        case 1:
          switch (o(t)) {
            case "function":
              n = t, t = r = e = void 0;
              break;

            case "boolean":
              i = t, t = void 0;
              break;

            default:
              e = t, t = r = void 0;
          }

      }

      return b(this, "update", t, e, r, i, n);
    }, c.prototype.updateMany = function (t, e, r, n) {
      var i;

      switch (arguments.length) {
        case 3:
          "function" == typeof r && (n = r, r = void 0);
          break;

        case 2:
          "function" == typeof e && (n = e, e = t, t = void 0);
          break;

        case 1:
          switch (o(t)) {
            case "function":
              n = t, t = r = e = void 0;
              break;

            case "boolean":
              i = t, t = void 0;
              break;

            default:
              e = t, t = r = void 0;
          }

      }

      return b(this, "updateMany", t, e, r, i, n);
    }, c.prototype.updateOne = function (t, e, r, n) {
      var i;

      switch (arguments.length) {
        case 3:
          "function" == typeof r && (n = r, r = void 0);
          break;

        case 2:
          "function" == typeof e && (n = e, e = t, t = void 0);
          break;

        case 1:
          switch (o(t)) {
            case "function":
              n = t, t = r = e = void 0;
              break;

            case "boolean":
              i = t, t = void 0;
              break;

            default:
              e = t, t = r = void 0;
          }

      }

      return b(this, "updateOne", t, e, r, i, n);
    }, c.prototype.replaceOne = function (t, e, r, n) {
      var i;

      switch (arguments.length) {
        case 3:
          "function" == typeof r && (n = r, r = void 0);
          break;

        case 2:
          "function" == typeof e && (n = e, e = t, t = void 0);
          break;

        case 1:
          switch (o(t)) {
            case "function":
              n = t, t = r = e = void 0;
              break;

            case "boolean":
              i = t, t = void 0;
              break;

            default:
              e = t, t = r = void 0;
          }

      }

      return this.setOptions({
        overwrite: !0
      }), b(this, "replaceOne", t, e, r, i, n);
    }, c.prototype.remove = function (t, e) {
      var r;
      if (this.op = "remove", "function" == typeof t ? (e = t, t = void 0) : c.canMerge(t) ? this.merge(t) : !0 === t && (r = t, t = void 0), !r && !e) return this;

      var n = this._optionsForExec();

      e || (n.safe = !1);
      var i = this._conditions;
      return f("remove", this._collection.collectionName, i, n), e = this._wrapCallback("remove", e, {
        conditions: i,
        options: n
      }), this._collection.remove(i, n, h.tick(e)), this;
    }, c.prototype.deleteOne = function (t, e) {
      var r;
      if (this.op = "deleteOne", "function" == typeof t ? (e = t, t = void 0) : c.canMerge(t) ? this.merge(t) : !0 === t && (r = t, t = void 0), !r && !e) return this;

      var n = this._optionsForExec();

      e || (n.safe = !1), delete n.justOne;
      var i = this._conditions;
      return f("deleteOne", this._collection.collectionName, i, n), e = this._wrapCallback("deleteOne", e, {
        conditions: i,
        options: n
      }), this._collection.deleteOne(i, n, h.tick(e)), this;
    }, c.prototype.deleteMany = function (t, e) {
      var r;
      if (this.op = "deleteMany", "function" == typeof t ? (e = t, t = void 0) : c.canMerge(t) ? this.merge(t) : !0 === t && (r = t, t = void 0), !r && !e) return this;

      var n = this._optionsForExec();

      e || (n.safe = !1), delete n.justOne;
      var i = this._conditions;
      return f("deleteOne", this._collection.collectionName, i, n), e = this._wrapCallback("deleteOne", e, {
        conditions: i,
        options: n
      }), this._collection.deleteMany(i, n, h.tick(e)), this;
    }, c.prototype.findOneAndUpdate = function (t, e, r, n) {
      switch (this.op = "findOneAndUpdate", this._validate(), arguments.length) {
        case 3:
          "function" == typeof r && (n = r, r = {});
          break;

        case 2:
          "function" == typeof e && (n = e, e = t, t = void 0), r = void 0;
          break;

        case 1:
          "function" == typeof t ? (n = t, t = r = e = void 0) : (e = t, t = r = void 0);
      }

      if (c.canMerge(t) && this.merge(t), e && this._mergeUpdate(e), r && this.setOptions(r), !n) return this;

      var i = this._conditions,
          o = this._updateForExec();

      return r = this._optionsForExec(), this._collection.findOneAndUpdate(i, o, r, h.tick(n));
    }, c.prototype.findOneAndRemove = c.prototype.findOneAndDelete = function (t, e, r) {
      if (this.op = "findOneAndRemove", this._validate(), "function" == typeof e ? (r = e, e = void 0) : "function" == typeof t && (r = t, t = void 0), c.canMerge(t) && this.merge(t), e && this.setOptions(e), !r) return this;
      e = this._optionsForExec();
      var n = this._conditions;
      return this._collection.findOneAndDelete(n, e, h.tick(r));
    }, c.prototype._wrapCallback = function (t, e, r) {
      var n = this._traceFunction || c.traceFunction;

      if (n) {
        r.collectionName = this._collection.collectionName;
        var i = n && n.call(null, t, r, this),
            o = new Date().getTime();
        return function (t, r) {
          if (i) {
            var n = new Date().getTime() - o;
            i.call(null, t, r, n);
          }

          e && e.apply(null, arguments);
        };
      }

      return e;
    }, c.prototype.setTraceFunction = function (t) {
      return this._traceFunction = t, this;
    }, c.prototype.exec = function (t, e) {
      switch (o(t)) {
        case "function":
          e = t, t = null;
          break;

        case "string":
          this.op = t;
      }

      a.ok(this.op, "Missing query type: (find, update, etc)"), "update" != this.op && "remove" != this.op || e || (e = !0);
      var r = this;
      if ("function" != typeof e) return new c.Promise(function (t, e) {
        r[r.op](function (r, n) {
          r ? e(r) : t(n), t = e = null;
        });
      });
      this[this.op](e);
    }, c.prototype.thunk = function () {
      var t = this;
      return function (e) {
        t.exec(e);
      };
    }, c.prototype.then = function (t, e) {
      var r = this;
      return new c.Promise(function (t, e) {
        r.exec(function (r, n) {
          r ? e(r) : t(n), t = e = null;
        });
      }).then(t, e);
    }, c.prototype.cursor = function () {
      if ("find" != this.op) throw new Error("cursor() is only available for find");

      var t = this._conditions,
          e = this._optionsForExec();

      return this.$useProjection ? e.projection = this._fieldsForExec() : e.fields = this._fieldsForExec(), f("cursor", this._collection.collectionName, t, e), this._collection.findCursor(t, e);
    }, c.prototype.selected = function () {
      return !!(this._fields && Object.keys(this._fields).length > 0);
    }, c.prototype.selectedInclusively = function () {
      if (!this._fields) return !1;
      var t = Object.keys(this._fields);
      if (0 === t.length) return !1;

      for (var e = 0; e < t.length; ++e) {
        var r = t[e];
        if (0 === this._fields[r]) return !1;
        if (this._fields[r] && "object" === o(this._fields[r]) && this._fields[r].$meta) return !1;
      }

      return !0;
    }, c.prototype.selectedExclusively = function () {
      if (!this._fields) return !1;
      var t = Object.keys(this._fields);
      if (0 === t.length) return !1;

      for (var e = 0; e < t.length; ++e) {
        var r = t[e];
        if (0 === this._fields[r]) return !0;
      }

      return !1;
    }, c.prototype._mergeUpdate = function (t) {
      this._update || (this._update = {}), t instanceof c ? t._update && h.mergeClone(this._update, t._update) : h.mergeClone(this._update, t);
    }, c.prototype._optionsForExec = function () {
      return h.clone(this.options);
    }, c.prototype._fieldsForExec = function () {
      return h.clone(this._fields);
    }, c.prototype._updateForExec = function () {
      var t,
          e = h.clone(this._update),
          r = h.keys(e),
          i = {},
          o = n(r);

      try {
        for (o.s(); !(t = o.n()).done;) {
          var s = t.value;
          this.options.overwrite ? i[s] = e[s] : "$" !== s[0] ? (i.$set || (e.$set ? i.$set = e.$set : i.$set = {}), i.$set[s] = e[s], ~r.indexOf("$set") || r.push("$set")) : "$set" === s && i.$set || (i[s] = e[s]);
        }
      } catch (t) {
        o.e(t);
      } finally {
        o.f();
      }

      return this._compiledUpdate = i, i;
    }, c.prototype._ensurePath = function (t) {
      if (!this._path) throw new Error(t + "() must be used after where() when called with these arguments");
    },
    /*!
     * Permissions
     */
    c.permissions = r(304), c._isPermitted = function (t, e) {
      var r = c.permissions[e];
      return !r || !0 !== r[t];
    }, c.prototype._validate = function (t) {
      var e, r;

      if (void 0 === t) {
        if ("function" != typeof (r = c.permissions[this.op])) return !0;
        e = r(this);
      } else c._isPermitted(t, this.op) || (e = t);

      if (e) throw new Error(e + " cannot be used with " + this.op);
    }, c.canMerge = function (t) {
      return t instanceof c || h.isObject(t);
    }, c.setGlobalTraceFunction = function (t) {
      c.traceFunction = t;
    },
    /*!
     * Exports.
     */
    c.utils = h, c.env = r(159), c.Collection = r(305), c.BaseCollection = r(55), c.Promise = Promise, t.exports = c;
  }, function (t, e, r) {
    (function (n) {
      var i;
      e.formatArgs = function (e) {
        if (e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" + t.exports.humanize(this.diff), !this.useColors) return;
        var r = "color: " + this.color;
        e.splice(1, 0, r, "color: inherit");
        var n = 0,
            i = 0;
        e[0].replace(/%[a-zA-Z%]/g, function (t) {
          "%%" !== t && (n++, "%c" === t && (i = n));
        }), e.splice(i, 0, r);
      }, e.save = function (t) {
        try {
          t ? e.storage.setItem("debug", t) : e.storage.removeItem("debug");
        } catch (t) {}
      }, e.load = function () {
        var t;

        try {
          t = e.storage.getItem("debug");
        } catch (t) {}

        !t && void 0 !== n && "env" in n && (t = n.env.DEBUG);
        return t;
      }, e.useColors = function () {
        if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs)) return !0;
        if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
        return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
      }, e.storage = function () {
        try {
          return localStorage;
        } catch (t) {}
      }(), e.destroy = (i = !1, function () {
        i || (i = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
      }), e.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.log = console.debug || console.log || function () {}, t.exports = r(303)(e), t.exports.formatters.j = function (t) {
        try {
          return JSON.stringify(t);
        } catch (t) {
          return "[UnexpectedJSONParseError]: " + t.message;
        }
      };
    }).call(this, r(5));
  }, function (t, e, r) {
    function n(t) {
      return function (t) {
        if (Array.isArray(t)) return i(t);
      }(t) || function (t) {
        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
      }(t) || function (t, e) {
        if (!t) return;
        if ("string" == typeof t) return i(t, e);
        var r = Object.prototype.toString.call(t).slice(8, -1);
        "Object" === r && t.constructor && (r = t.constructor.name);
        if ("Map" === r || "Set" === r) return Array.from(t);
        if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
      }(t) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    t.exports = function (t) {
      function e(t) {
        var r,
            n,
            o,
            s = null;

        function a() {
          for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
            n[i] = arguments[i];
          }

          if (a.enabled) {
            var o = a,
                s = Number(new Date()),
                u = s - (r || s);
            o.diff = u, o.prev = r, o.curr = s, r = s, n[0] = e.coerce(n[0]), "string" != typeof n[0] && n.unshift("%O");
            var h = 0;
            n[0] = n[0].replace(/%([a-zA-Z%])/g, function (t, r) {
              if ("%%" === t) return "%";
              h++;
              var i = e.formatters[r];

              if ("function" == typeof i) {
                var s = n[h];
                t = i.call(o, s), n.splice(h, 1), h--;
              }

              return t;
            }), e.formatArgs.call(o, n);
            var f = o.log || e.log;
            f.apply(o, n);
          }
        }

        return a.namespace = t, a.useColors = e.useColors(), a.color = e.selectColor(t), a.extend = i, a.destroy = e.destroy, Object.defineProperty(a, "enabled", {
          enumerable: !0,
          configurable: !1,
          get: function get() {
            return null !== s ? s : (n !== e.namespaces && (n = e.namespaces, o = e.enabled(t)), o);
          },
          set: function set(t) {
            s = t;
          }
        }), "function" == typeof e.init && e.init(a), a;
      }

      function i(t, r) {
        var n = e(this.namespace + (void 0 === r ? ":" : r) + t);
        return n.log = this.log, n;
      }

      function o(t) {
        return t.toString().substring(2, t.toString().length - 2).replace(/\.\*\?$/, "*");
      }

      return e.debug = e, e.default = e, e.coerce = function (t) {
        if (t instanceof Error) return t.stack || t.message;
        return t;
      }, e.disable = function () {
        var t = [].concat(n(e.names.map(o)), n(e.skips.map(o).map(function (t) {
          return "-" + t;
        }))).join(",");
        return e.enable(""), t;
      }, e.enable = function (t) {
        var r;
        e.save(t), e.namespaces = t, e.names = [], e.skips = [];
        var n = ("string" == typeof t ? t : "").split(/[\s,]+/),
            i = n.length;

        for (r = 0; r < i; r++) {
          n[r] && ("-" === (t = n[r].replace(/\*/g, ".*?"))[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")));
        }
      }, e.enabled = function (t) {
        if ("*" === t[t.length - 1]) return !0;
        var r, n;

        for (r = 0, n = e.skips.length; r < n; r++) {
          if (e.skips[r].test(t)) return !1;
        }

        for (r = 0, n = e.names.length; r < n; r++) {
          if (e.names[r].test(t)) return !0;
        }

        return !1;
      }, e.humanize = r(151), e.destroy = function () {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }, Object.keys(t).forEach(function (r) {
        e[r] = t[r];
      }), e.names = [], e.skips = [], e.formatters = {}, e.selectColor = function (t) {
        for (var r = 0, n = 0; n < t.length; n++) {
          r = (r << 5) - r + t.charCodeAt(n), r |= 0;
        }

        return e.colors[Math.abs(r) % e.colors.length];
      }, e.enable(e.load()), e;
    };
  }, function (t, e, r) {
    "use strict";

    var n = e;
    n.distinct = function (t) {
      return t._fields && Object.keys(t._fields).length > 0 ? "field selection and slice" : (Object.keys(n.distinct).every(function (r) {
        return !t.options[r] || (e = r, !1);
      }), e);
      var e;
    }, n.distinct.select = n.distinct.slice = n.distinct.sort = n.distinct.limit = n.distinct.skip = n.distinct.batchSize = n.distinct.comment = n.distinct.maxScan = n.distinct.snapshot = n.distinct.hint = n.distinct.tailable = !0, n.findOneAndUpdate = n.findOneAndRemove = function (t) {
      var e;
      return Object.keys(n.findOneAndUpdate).every(function (r) {
        return !t.options[r] || (e = r, !1);
      }), e;
    }, n.findOneAndUpdate.limit = n.findOneAndUpdate.skip = n.findOneAndUpdate.batchSize = n.findOneAndUpdate.maxScan = n.findOneAndUpdate.snapshot = n.findOneAndUpdate.hint = n.findOneAndUpdate.tailable = n.findOneAndUpdate.comment = !0, n.count = function (t) {
      return t._fields && Object.keys(t._fields).length > 0 ? "field selection and slice" : (Object.keys(n.count).every(function (r) {
        return !t.options[r] || (e = r, !1);
      }), e);
      var e;
    }, n.count.slice = n.count.batchSize = n.count.comment = n.count.maxScan = n.count.snapshot = n.count.tailable = !0;
  }, function (t, e, r) {
    "use strict";

    var n = r(159);
    if ("unknown" == n.type) throw new Error("Unknown environment");
    t.exports = n.isNode ? r(306) : (n.isMongo, r(55));
  }, function (t, e, r) {
    "use strict";

    var n = r(55);

    function i(t) {
      this.collection = t, this.collectionName = t.collectionName;
    }

    r(158).inherits(i, n), i.prototype.find = function (t, e, r) {
      var n = this.collection.find(t, e);

      try {
        n.toArray(r);
      } catch (t) {
        r(t);
      }
    }, i.prototype.findOne = function (t, e, r) {
      this.collection.findOne(t, e, r);
    }, i.prototype.count = function (t, e, r) {
      this.collection.count(t, e, r);
    }, i.prototype.distinct = function (t, e, r, n) {
      this.collection.distinct(t, e, r, n);
    }, i.prototype.update = function (t, e, r, n) {
      this.collection.update(t, e, r, n);
    }, i.prototype.updateMany = function (t, e, r, n) {
      this.collection.updateMany(t, e, r, n);
    }, i.prototype.updateOne = function (t, e, r, n) {
      this.collection.updateOne(t, e, r, n);
    }, i.prototype.replaceOne = function (t, e, r, n) {
      this.collection.replaceOne(t, e, r, n);
    }, i.prototype.deleteOne = function (t, e, r) {
      this.collection.deleteOne(t, e, r);
    }, i.prototype.deleteMany = function (t, e, r) {
      this.collection.deleteMany(t, e, r);
    }, i.prototype.remove = function (t, e, r) {
      this.collection.remove(t, e, r);
    }, i.prototype.findOneAndDelete = function (t, e, r) {
      this.collection.findOneAndDelete(t, e, r);
    }, i.prototype.findOneAndUpdate = function (t, e, r, n) {
      this.collection.findOneAndUpdate(t, e, r, n);
    }, i.prototype.findCursor = function (t, e) {
      return this.collection.find(t, e);
    }, t.exports = i;
  }, function (t, e, r) {
    "use strict";

    var n = t.exports = {};
    n.DocumentNotFoundError = null, n.general = {}, n.general.default = "Validator failed for path `{PATH}` with value `{VALUE}`", n.general.required = "Path `{PATH}` is required.", n.Number = {}, n.Number.min = "Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).", n.Number.max = "Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).", n.Number.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", n.Date = {}, n.Date.min = "Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).", n.Date.max = "Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).", n.String = {}, n.String.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", n.String.match = "Path `{PATH}` is invalid ({VALUE}).", n.String.minlength = "Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).", n.String.maxlength = "Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).";
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = r(8),
        f = r(9),
        c = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);
      /*!
         * OverwriteModel Error constructor.
         */

      function u(t, e, r, n) {
        var i, o;
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        var s = h.messages;
        return o = null != s.DocumentNotFoundError ? "function" == typeof s.DocumentNotFoundError ? s.DocumentNotFoundError(t, e) : s.DocumentNotFoundError : 'No document found for query "' + f.inspect(t) + '" on model "' + e + '"', (i = a.call(this, o)).result = n, i.numAffected = r, i.filter = t, i.query = t, i;
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(h);

    Object.defineProperty(c.prototype, "name", {
      value: "DocumentNotFoundError"
    }),
    /*!
     * exports
     */
    t.exports = c;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t, e, r) {
        var n;
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        var i = r.join(", ");
        return (n = a.call(this, 'No matching document found for id "' + t._id + '" version ' + e + ' modifiedPaths "' + i + '"')).version = e, n.modifiedPaths = r, n;
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "VersionError"
    }),
    /*!
     * exports
     */
    t.exports = h;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t) {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        return a.call(this, "Can't save() the same doc multiple times in parallel. Document: " + t._id);
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "ParallelSaveError"
    }),
    /*!
     * exports
     */
    t.exports = h;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);
      /*!
         * OverwriteModel Error constructor.
         * @param {String} name
         */

      function u(t) {
        return function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u), a.call(this, "Cannot overwrite `" + t + "` model once compiled.");
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "OverwriteModelError"
    }),
    /*!
     * exports
     */
    t.exports = h;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);
      /*!
         * MissingSchema Error constructor.
         * @param {String} name
         */

      function u(t) {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        var e = "Schema hasn't been registered for model \"" + t + '".\nUse mongoose.model(name, schema)';
        return a.call(this, e);
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "MissingSchemaError"
    }),
    /*!
     * exports
     */
    t.exports = h;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);
      /*!
         * DivergentArrayError constructor.
         * @param {Array<String>} paths
         */

      function u(t) {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        var e = "For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  " + t.join("\n  ") + "\nUse Model.update() to update these arrays instead.";
        return a.call(this, e);
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "DivergentArrayError"
    }),
    /*!
     * exports
     */
    t.exports = h;
  }, function (t, e, r) {
    "use strict";

    var n = r(56);
    /*!
     * ignore
     */

    t.exports = function (t) {
      var e, r;
      t.$immutable ? (t.$immutableSetter = (e = t.path, r = t.options.immutable, function (t) {
        if (null == this || null == this.$__) return t;
        if (this.isNew) return t;
        if (!("function" == typeof r ? r.call(this, this) : r)) return t;
        var i = null != this.$__.priorDoc ? this.$__.priorDoc.$__getValue(e) : this.$__getValue(e);
        if ("throw" === this.$__.strictMode && t !== i) throw new n(e, "Path `" + e + "` is immutable and strict mode is set to throw.", !0);
        return i;
      }), t.set(t.$immutableSetter)) : t.$immutableSetter && (t.setters = t.setters.filter(function (e) {
        return e !== t.$immutableSetter;
      }), delete t.$immutableSetter);
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(9).inspect;

    t.exports = function (t) {
      if ("function" == typeof t) return n(t).startsWith("[AsyncFunction:");
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t, e, r) {
        return function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u), a.call(this, 'Parameter "' + e + '" to ' + r + "() must be an object, got " + t.toString());
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(8));

    Object.defineProperty(h.prototype, "name", {
      value: "ObjectParameterError"
    }), t.exports = h;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      return (o = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function s(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = u(t);

        if (e) {
          var i = u(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return a(this, r);
      };
    }

    function a(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function u(t) {
      return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var h = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && o(t, e);
      }(u, t);
      var e,
          r,
          n,
          a = s(u);

      function u(t) {
        !function (t, e) {
          if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }(this, u);
        return a.call(this, "Can't validate() the same doc multiple times in parallel. Document: " + t._id);
      }

      return e = u, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(20));

    Object.defineProperty(h.prototype, "name", {
      value: "ParallelValidateError"
    }),
    /*!
     * exports
     */
    t.exports = h;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function r(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

        if (!r) {
          if (Array.isArray(t) || (r = function (t, e) {
            if (!t) return;
            if ("string" == typeof t) return n(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === r && t.constructor && (r = t.constructor.name);
            if ("Map" === r || "Set" === r) return Array.from(t);
            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return n(t, e);
          }(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);

            var i = 0,
                o = function o() {};

            return {
              s: o,
              n: function n() {
                return i >= t.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: t[i++]
                };
              },
              e: function e(t) {
                throw t;
              },
              f: o
            };
          }

          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }

        var s,
            a = !0,
            u = !1;
        return {
          s: function s() {
            r = r.call(t);
          },
          n: function n() {
            var t = r.next();
            return a = t.done, t;
          },
          e: function e(t) {
            u = !0, s = t;
          },
          f: function f() {
            try {
              a || null == r.return || r.return();
            } finally {
              if (u) throw s;
            }
          }
        };
      }

      function n(t, e) {
        (null == e || e > t.length) && (e = t.length);

        for (var r = 0, n = new Array(e); r < e; r++) {
          n[r] = t[r];
        }

        return n;
      }

      function i(t) {
        return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      function o() {
        this._pres = new Map(), this._posts = new Map();
      }

      function s(t, e, r, n, i, o, s) {
        if (o.useErrorHandlers) {
          var a = {
            error: e
          };
          return t.execPost(r, n, i, a, function (t) {
            return "function" == typeof s && s(t);
          });
        }

        return "function" == typeof s ? s(e) : void 0;
      }

      function a(t, e, r) {
        return t.has(e) ? t.get(e) : r;
      }

      function u(t, e, r, n) {
        var i;

        try {
          i = t.apply(e, r);
        } catch (t) {
          return n(t);
        }

        h(i) && i.then(function () {
          return n();
        }, function (t) {
          return n(t);
        });
      }

      function h(t) {
        return null != t && "function" == typeof t.then;
      }

      function f(t) {
        var r = !1,
            n = this;
        return function () {
          var i = arguments;
          if (!r) return r = !0, e.nextTick(function () {
            return t.apply(n, i);
          });
        };
      }

      o.prototype.execPre = function (t, r, n, i) {
        3 === arguments.length && (i = n, n = []);
        var o = a(this._pres, t, []),
            s = o.length,
            c = o.numAsync || 0,
            l = 0,
            d = c,
            p = !1,
            y = n;
        if (!s) return e.nextTick(function () {
          i(null);
        });

        var m = function t() {
          if (!(l >= s)) {
            var n = o[l];

            if (n.isAsync) {
              var a = [f(b), f(function (t) {
                if (t) {
                  if (p) return;
                  return p = !0, i(t);
                }

                if (0 == --d && l >= s) return i(null);
              })];
              u(n.fn, r, a, a[0]);
            } else if (n.fn.length > 0) {
              a = [f(b)];

              for (var c = arguments.length >= 2 ? arguments : [null].concat(y), m = 1; m < c.length; ++m) {
                a.push(c[m]);
              }

              u(n.fn, r, a, a[0]);
            } else {
              var v = null;

              try {
                v = n.fn.call(r);
              } catch (t) {
                if (null != t) return i(t);
              }

              if (h(v)) v.then(function () {
                return b();
              }, function (t) {
                return b(t);
              });else {
                if (++l >= s) return d > 0 ? void 0 : e.nextTick(function () {
                  i(null);
                });
                t();
              }
            }
          }
        };

        function b(t) {
          if (t) {
            if (p) return;
            return p = !0, i(t);
          }

          if (++l >= s) return d > 0 ? void 0 : i(null);
          m.apply(r, arguments);
        }

        m.apply(null, [null].concat(n));
      }, o.prototype.execPreSync = function (t, e, r) {
        for (var n = a(this._pres, t, []), i = n.length, o = 0; o < i; ++o) {
          n[o].fn.apply(e, r || []);
        }
      }, o.prototype.execPost = function (t, r, n, i, o) {
        arguments.length < 5 && (o = i, i = null);
        var s = a(this._posts, t, []),
            c = s.length,
            l = 0,
            d = null;
        if (i && i.error && (d = i.error), !c) return e.nextTick(function () {
          o.apply(null, [d].concat(n));
        });

        var p = function t() {
          for (var e = s[l].fn, i = 0, a = n.length, p = [], y = 0; y < a; ++y) {
            i += n[y] && n[y]._kareemIgnore ? 0 : 1, n[y] && n[y]._kareemIgnore || p.push(n[y]);
          }

          if (d) {
            if (e.length === i + 2) {
              var m = f(function (e) {
                if (e && (d = e), ++l >= c) return o.call(null, d);
                t();
              });
              u(e, r, [d].concat(p).concat([m]), m);
            } else {
              if (++l >= c) return o.call(null, d);
              t();
            }
          } else {
            var b = f(function (e) {
              return e ? (d = e, t()) : ++l >= c ? o.apply(null, [null].concat(n)) : void t();
            });
            if (e.length === i + 2) return ++l >= c ? o.apply(null, [null].concat(n)) : t();
            if (e.length === i + 1) u(e, r, p.concat([b]), b);else {
              var v, g;

              try {
                g = e.apply(r, p);
              } catch (t) {
                v = t, d = t;
              }

              if (h(g)) return g.then(function () {
                return b();
              }, function (t) {
                return b(t);
              });
              if (++l >= c) return o.apply(null, [v].concat(n));
              t();
            }
          }
        };

        p();
      }, o.prototype.execPostSync = function (t, e, r) {
        for (var n = a(this._posts, t, []), i = n.length, o = 0; o < i; ++o) {
          n[o].fn.apply(e, r || []);
        }
      }, o.prototype.createWrapperSync = function (t, e) {
        var r = this;
        return function () {
          r.execPreSync(t, this, arguments);
          var n = e.apply(this, arguments);
          return r.execPostSync(t, this, [n]), n;
        };
      }, o.prototype.wrap = function (t, e, r, n, i) {
        var o = n.length > 0 ? n[n.length - 1] : null,
            a = ("function" == typeof o && n.slice(0, n.length - 1), this),
            u = (i = i || {}).checkForPromise;
        this.execPre(t, r, n, function (h) {
          if (h) {
            for (var f = i.numCallbackParams || 0, c = i.contextParameter ? [r] : [], l = c.length; l < f; ++l) {
              c.push(null);
            }

            return s(a, h, t, r, c, i, o);
          }

          var d,
              p = "function" == typeof o ? n.length - 1 : n.length,
              y = e.length;

          try {
            d = e.apply(r, n.slice(0, p).concat(m));
          } catch (t) {
            return m(t);
          }

          if (u) {
            if (null != d && "function" == typeof d.then) return d.then(function (t) {
              return m(null, t);
            }, function (t) {
              return m(t);
            });
            if (y < p + 1) return m(null, d);
          }

          function m() {
            var e = Array.prototype.slice.call(arguments, 1);
            if (i.nullResultByDefault && 0 === e.length && e.push(null), arguments[0]) return s(a, arguments[0], t, r, e, i, o);
            a.execPost(t, r, e, function () {
              return arguments[0] ? "function" == typeof o ? o(arguments[0]) : void 0 : "function" == typeof o ? o.apply(r, arguments) : void 0;
            });
          }
        });
      }, o.prototype.filter = function (t) {
        for (var e = this, r = this.clone(), n = Array.from(r._pres.keys()), i = function i() {
          var n = s[o],
              i = e._pres.get(n).map(function (t) {
            return Object.assign({}, t, {
              name: n
            });
          }).filter(t);

          if (0 === i.length) return r._pres.delete(n), "continue";
          i.numAsync = i.filter(function (t) {
            return t.isAsync;
          }).length, r._pres.set(n, i);
        }, o = 0, s = n; o < s.length; o++) {
          i();
        }

        for (var a = Array.from(r._posts.keys()), u = function u() {
          var n = f[h],
              i = e._posts.get(n).map(function (t) {
            return Object.assign({}, t, {
              name: n
            });
          }).filter(t);

          if (0 === i.length) return r._posts.delete(n), "continue";

          r._posts.set(n, i);
        }, h = 0, f = a; h < f.length; h++) {
          u();
        }

        return r;
      }, o.prototype.hasHooks = function (t) {
        return this._pres.has(t) || this._posts.has(t);
      }, o.prototype.createWrapper = function (t, r, n, i) {
        var o = this;
        return this.hasHooks(t) ? function () {
          var e = n || this,
              s = Array.prototype.slice.call(arguments);
          o.wrap(t, r, e, s, i);
        } : function () {
          var t = arguments,
              n = this;
          e.nextTick(function () {
            return r.apply(n, t);
          });
        };
      }, o.prototype.pre = function (t, e, r, n, o) {
        var s = {};
        "object" === i(e) && null != e ? e = (s = e).isAsync : "boolean" != typeof arguments[1] && (n = r, r = e, e = !1);
        var u = a(this._pres, t, []);
        if (this._pres.set(t, u), e && (u.numAsync = u.numAsync || 0, ++u.numAsync), "function" != typeof r) throw new Error('pre() requires a function, got "' + i(r) + '"');
        return o ? u.unshift(Object.assign({}, s, {
          fn: r,
          isAsync: e
        })) : u.push(Object.assign({}, s, {
          fn: r,
          isAsync: e
        })), this;
      }, o.prototype.post = function (t, e, r, n) {
        var o = a(this._posts, t, []);
        if ("function" == typeof e && (n = !!r, r = e, e = {}), "function" != typeof r) throw new Error('post() requires a function, got "' + i(r) + '"');
        return n ? o.unshift(Object.assign({}, e, {
          fn: r
        })) : o.push(Object.assign({}, e, {
          fn: r
        })), this._posts.set(t, o), this;
      }, o.prototype.clone = function () {
        var t,
            e = new o(),
            n = r(this._pres.keys());

        try {
          for (n.s(); !(t = n.n()).done;) {
            var i = t.value,
                s = this._pres.get(i).slice();

            s.numAsync = this._pres.get(i).numAsync, e._pres.set(i, s);
          }
        } catch (t) {
          n.e(t);
        } finally {
          n.f();
        }

        var a,
            u = r(this._posts.keys());

        try {
          for (u.s(); !(a = u.n()).done;) {
            var h = a.value;

            e._posts.set(h, this._posts.get(h).slice());
          }
        } catch (t) {
          u.e(t);
        } finally {
          u.f();
        }

        return e;
      }, o.prototype.merge = function (t, e) {
        var n,
            i = (e = 1 === arguments.length || e) ? this.clone() : this,
            o = r(t._pres.keys());

        try {
          var s = function s() {
            var e = n.value,
                r = a(i._pres, e, []),
                o = t._pres.get(e).filter(function (t) {
              return -1 === r.map(function (t) {
                return t.fn;
              }).indexOf(t.fn);
            }),
                s = r.concat(o);

            s.numAsync = r.numAsync || 0, s.numAsync += o.filter(function (t) {
              return t.isAsync;
            }).length, i._pres.set(e, s);
          };

          for (o.s(); !(n = o.n()).done;) {
            s();
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }

        var u,
            h = r(t._posts.keys());

        try {
          var f = function f() {
            var e = u.value,
                r = a(i._posts, e, []),
                n = t._posts.get(e).filter(function (t) {
              return -1 === r.indexOf(t);
            });

            i._posts.set(e, r.concat(n));
          };

          for (h.s(); !(u = h.n()).done;) {
            f();
          }
        } catch (t) {
          h.e(t);
        } finally {
          h.f();
        }

        return i;
      }, t.exports = o;
    }).call(this, r(5));
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function i(t, e, r) {
      return e && n(t.prototype, e), r && n(t, r), Object.defineProperty(t, "prototype", {
        writable: !1
      }), t;
    }

    var o = r(16),
        s = i(function t(e) {
      !function (t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
      }(this, t), Object.assign(this, e), null != e && null != e.options && (this.options = Object.assign({}, e.options));
    });
    Object.defineProperty(s.prototype, "ref", o), Object.defineProperty(s.prototype, "refPath", o), Object.defineProperty(s.prototype, "localField", o), Object.defineProperty(s.prototype, "foreignField", o), Object.defineProperty(s.prototype, "justOne", o), Object.defineProperty(s.prototype, "count", o), Object.defineProperty(s.prototype, "match", o), Object.defineProperty(s.prototype, "options", o), Object.defineProperty(s.prototype, "skip", o), Object.defineProperty(s.prototype, "limit", o), Object.defineProperty(s.prototype, "perDocumentLimit", o), t.exports = s;
  }, function (t, e, r) {
    "use strict";

    var n = r(6),
        i = r(35);
    /*!
     * Gather all indexes defined in the schema, including single nested,
     * document arrays, and embedded discriminators.
     */

    t.exports = function (t) {
      var e = [],
          r = new WeakMap(),
          o = t.constructor.indexTypes,
          s = new Map();
      return function t(a, u, h) {
        if (r.has(a)) return;
        r.set(a, !0), u = u || "";

        for (var f = Object.keys(a.paths), c = 0, l = f; c < l.length; c++) {
          var d = l[c],
              p = a.paths[d];

          if (null == h || !h.paths[d]) {
            if (p.$isMongooseDocumentArray || p.$isSingleNested) {
              if (!0 !== n(p, "options.excludeIndexes") && !0 !== n(p, "schemaOptions.excludeIndexes") && !0 !== n(p, "schema.options.excludeIndexes") && t(p.schema, u + d + "."), null != p.schema.discriminators) for (var y = p.schema.discriminators, m = Object.keys(y), b = 0, v = m; b < v.length; b++) {
                var g = v[b];
                t(y[g], u + d + ".", p.schema);
              }
              if (p.$isMongooseDocumentArray) continue;
            }

            var w = p._index || p.caster && p.caster._index;

            if (!1 !== w && null != w) {
              var _ = {},
                  M = i(w),
                  S = M ? w : {},
                  O = "string" == typeof w ? w : !!M && w.type;
              if (O && -1 !== o.indexOf(O)) _[u + d] = O;else if (S.text) _[u + d] = "text", delete S.text;else {
                var A = -1 === Number(w);
                _[u + d] = A ? -1 : 1;
              }
              delete S.type, "background" in S || (S.background = !0), null != a.options.autoIndex && (S._autoIndex = a.options.autoIndex);
              var E = S && S.name;
              "string" == typeof E && s.has(E) ? Object.assign(s.get(E), _) : (e.push([_, S]), s.set(E, _));
            }
          }
        }

        r.delete(a), u ?
        /*!
           * Checks for indexes added to subdocs using Schema.index().
           * These indexes need their paths prefixed properly.
           *
           * schema._indexes = [ [indexObj, options], [indexObj, options] ..]
           */
        function (t, r) {
          for (var n = t._indexes, i = n.length, o = 0; o < i; ++o) {
            for (var s = n[o][0], a = n[o][1], u = Object.keys(s), h = u.length, f = {}, c = 0; c < h; ++c) {
              var l = u[c];
              f[r + l] = s[l];
            }

            var d = Object.assign({}, a);

            if (null != a && null != a.partialFilterExpression) {
              d.partialFilterExpression = {};

              for (var p = a.partialFilterExpression, y = 0, m = Object.keys(p); y < m.length; y++) {
                var b = m[y];
                d.partialFilterExpression[r + b] = p[b];
              }
            }

            e.push([f, d]);
          }
        }(a, u) : (a._indexes.forEach(function (t) {
          "background" in t[1] || (t[1].background = !0);
        }), e = e.concat(a._indexes));
      }(t), e;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    /*!
     * Returns this documents _id cast to a string.
     */

    function n() {
      return null != this._id ? String(this._id) : null;
    }

    t.exports = function (t) {
      return !t.paths.id && t.paths._id && t.options.id ? (t.virtual("id").get(n), t) : t;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e, r) {
      return e in t ? Object.defineProperty(t, e, {
        value: r,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = r, t;
    }

    var i = r(323),
        o = r(325),
        s = r(6),
        a = r(166),
        u = r(57);

    t.exports = function (t, e) {
      var r = t.childSchemas.find(function (t) {
        return !!t.schema.options.timestamps;
      });

      if (e || r) {
        var h,
            f = a(e, "createdAt"),
            c = a(e, "updatedAt"),
            l = null != e && e.hasOwnProperty("currentTime") ? e.currentTime : null,
            d = {};
        if (t.$timestamps = {
          createdAt: f,
          updatedAt: c
        }, c && !t.paths[c] && (d[c] = Date), f && !t.paths[f]) d[f] = (n(h = {}, t.options.typeKey || "type", Date), n(h, "immutable", !0), h);
        t.add(d), t.pre("save", function (t) {
          var e = s(this, "$__.saveOptions.timestamps");
          if (!1 === e) return t();
          var r = null != e && !1 === e.updatedAt,
              n = null != e && !1 === e.createdAt,
              i = null != l ? l() : this.ownerDocument().constructor.base.now(),
              o = this._id && this._id.auto;

          if (!n && this.isNew && f && !this.$__getValue(f) && this.$__isSelected(f) && this.$set(f, o ? this._id.getTimestamp() : i), !r && c && (this.isNew || this.$isModified())) {
            var a = i;
            this.isNew && (null != f ? a = this.$__getValue(f) : o && (a = this._id.getTimestamp())), this.$set(c, a);
          }

          t();
        }), t.methods.initializeTimestamps = function () {
          var t = null != l ? l() : this.constructor.base.now();
          return f && !this.get(f) && this.$set(f, t), c && !this.get(c) && this.$set(c, t), this;
        }, y[u.builtInMiddleware] = !0;
        var p = {
          query: !0,
          model: !1
        };
        t.pre("findOneAndReplace", p, y), t.pre("findOneAndUpdate", p, y), t.pre("replaceOne", p, y), t.pre("update", p, y), t.pre("updateOne", p, y), t.pre("updateMany", p, y);
      }

      function y(t) {
        var e = null != l ? l() : this.model.base.now();
        "findOneAndReplace" === this.op && null == this.getUpdate() && this.setUpdate({}), o(e, f, c, this.getUpdate(), this.options, this.schema), i(e, this.getUpdate(), this.model.schema), t();
      }
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n12 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n12 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n12++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o = r(324),
        s = r(166);
    /*!
     * ignore
     */

    function a(t, e, r) {
      if (null != e) {
        if (Object.keys(e).some(function (t) {
          return t.startsWith("$");
        })) {
          if (e.$push && y(e.$push), e.$addToSet && y(e.$addToSet), null != e.$set) for (var i = 0, o = Object.keys(e.$set); i < o.length; i++) {
            var a = o[i];
            u(r, a, e.$set, t);
          }
          if (null != e.$setOnInsert) for (var h = 0, f = Object.keys(e.$setOnInsert); h < f.length; h++) {
            var c = f[h];
            u(r, c, e.$setOnInsert, t);
          }
        }

        var l,
            d = n(Object.keys(e).filter(function (t) {
          return !t.startsWith("$");
        }));

        try {
          for (d.s(); !(l = d.n()).done;) {
            var p = l.value;
            u(r, p, e, t);
          }
        } catch (t) {
          d.e(t);
        } finally {
          d.f();
        }
      }

      function y(e) {
        for (var n = 0, i = Object.keys(e); n < i.length; n++) {
          var o = i[n],
              a = r.path(o.replace(/\.\$\./i, ".").replace(/.\$$/, ""));
          e[o] && a && a.$isMongooseDocumentArray && a.schema.options.timestamps && function () {
            var r = a.schema.options.timestamps,
                n = s(r, "createdAt"),
                i = s(r, "updatedAt");
            e[o].$each ? e[o].$each.forEach(function (e) {
              null != i && (e[i] = t), null != n && (e[n] = t);
            }) : (null != i && (e[o][i] = t), null != n && (e[o][n] = t));
          }();
        }
      }
    }

    function u(t, e, r, i) {
      var u = o(e),
          h = t.path(u);

      if (h) {
        for (var f = [], c = u.split("."), l = c.length - 1; l > 0; --l) {
          var d = t.path(c.slice(0, l).join("."));
          null != d && (d.$isMongooseDocumentArray || d.$isSingleNested) && f.push({
            parentPath: e.split(".").slice(0, l).join("."),
            parentSchemaType: d
          });
        }

        if (Array.isArray(r[e]) && h.$isMongooseDocumentArray) !function (t, e, r) {
          var n = e.schema.options.timestamps;
          if (n) for (var i = t.length, o = s(n, "createdAt"), u = s(n, "updatedAt"), h = 0; h < i; ++h) {
            null != u && (t[h][u] = r), null != o && (t[h][o] = r), a(r, t[h], e.schema);
          }
        }(r[e], h, i);else if (r[e] && h.$isSingleNested) !function (t, e, r) {
          var n = e.schema.options.timestamps;

          if (n) {
            var i = s(n, "createdAt"),
                o = s(n, "updatedAt");
            null != o && (t[o] = r), null != i && (t[i] = r), a(r, t, e.schema);
          }
        }(r[e], h, i);else if (f.length > 0) {
          var p,
              y = n(f);

          try {
            for (y.s(); !(p = y.n()).done;) {
              var m = p.value,
                  b = m.parentPath,
                  v = m.parentSchemaType,
                  g = v.schema.options.timestamps,
                  w = s(g, "updatedAt");
              if (g && null != w) if (v.$isSingleNested) r[b + "." + w] = i;else if (v.$isMongooseDocumentArray) {
                var _ = e.substr(b.length + 1);

                if (/^\d+$/.test(_)) {
                  r[b + "." + _][w] = i;
                  continue;
                }

                var M = _.indexOf(".");

                r[b + "." + (_ = -1 !== M ? _.substr(0, M) : _) + "." + w] = i;
              }
            }
          } catch (t) {
            y.e(t);
          } finally {
            y.f();
          }
        } else if (null != h.schema && h.schema != t && r[e]) {
          var S = h.schema.options.timestamps,
              O = s(S, "createdAt"),
              A = s(S, "updatedAt");
          if (!S) return;
          null != A && (r[e][A] = i), null != O && (r[e][O] = i);
        }
      }
    }

    t.exports = a;
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t) {
      return t.replace(/\.\$(\[[^\]]*\])?(?=\.)/g, ".0").replace(/\.\$(\[[^\]]*\])?$/g, ".0");
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    var n = r(6);

    t.exports =
    /*!
     * ignore
     */
    function (t, e, r, i, o) {
      var s = i,
          a = s,
          u = n(o, "overwrite", !1),
          h = n(o, "timestamps", !0);
      if (!h || null == s) return i;
      var f = null != h && !1 === h.createdAt,
          c = null != h && !1 === h.updatedAt;
      if (u) return i && i.$set && (i = i.$set, s.$set = {}, a = s.$set), c || !r || i[r] || (a[r] = t), f || !e || i[e] || (a[e] = t), s;
      if (i = i || {}, Array.isArray(s)) return s.push({
        $set: {
          updatedAt: t
        }
      }), s;

      if (s.$set = s.$set || {}, !c && r && (!i.$currentDate || !i.$currentDate[r])) {
        var l = !1;
        if (-1 !== r.indexOf(".")) for (var d = r.split("."), p = 1; p < d.length; ++p) {
          var y = d.slice(-p).join("."),
              m = d.slice(0, -p).join(".");

          if (null != i[m]) {
            i[m][y] = t, l = !0;
            break;
          }

          if (i.$set && i.$set[m]) {
            i.$set[m][y] = t, l = !0;
            break;
          }
        }
        l || (s.$set[r] = t), s.hasOwnProperty(r) && delete s[r];
      }

      if (!f && e) {
        i[e] && delete i[e], i.$set && i.$set[e] && delete i.$set[e];
        var b = !1;
        if (-1 !== e.indexOf(".")) for (var v = e.split("."), g = 1; g < v.length; ++g) {
          var w = v.slice(-g).join("."),
              _ = v.slice(0, -g).join(".");

          if (null != i[_]) {
            i[_][w] = t, b = !0;
            break;
          }

          if (i.$set && i.$set[_]) {
            i.$set[_][w] = t, b = !0;
            break;
          }
        }
        b || (s.$setOnInsert = s.$setOnInsert || {}, s.$setOnInsert[e] = t);
      }

      0 === Object.keys(s.$set).length && delete s.$set;
      return s;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(20),
        i = r(9);

    t.exports = function (t, e) {
      if ("string" == typeof t) return;
      if ("function" == typeof t) return;
      throw new n('Invalid ref at path "' + e + '". Got ' + i.inspect(t, {
        depth: 0
      }));
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * ignore
     */

    t.exports = i;
    var n = r(328);
    /*!
     * ignore
     */

    /*!
     * Apply query middleware
     *
     * @param {Query} query constructor
     * @param {Model} model
     */

    function i(t, e) {
      var r = {
        useErrorHandlers: !0,
        numCallbackParams: 1,
        nullResultByDefault: !0
      },
          n = e.hooks.filter(function (t) {
        var e = function (t) {
          var e = {};
          t.hasOwnProperty("query") && (e.query = t.query);
          t.hasOwnProperty("document") && (e.document = t.document);
          return e;
        }(t);

        return "updateOne" === t.name ? null == e.query || !!e.query : "deleteOne" === t.name ? !!e.query || 0 === Object.keys(e).length : "validate" === t.name || "remove" === t.name ? !!e.query : null == t.query && null == t.document || !!t.query;
      });
      t.prototype._execUpdate = n.createWrapper("update", t.prototype._execUpdate, null, r), t.prototype.__distinct = n.createWrapper("distinct", t.prototype.__distinct, null, r), t.prototype.validate = n.createWrapper("validate", t.prototype.validate, null, r), i.middlewareFunctions.filter(function (t) {
        return "update" !== t && "distinct" !== t && "validate" !== t;
      }).forEach(function (e) {
        t.prototype["_".concat(e)] = n.createWrapper(e, t.prototype["_".concat(e)], null, r);
      });
    }

    i.middlewareFunctions = n.concat(["validate"]);
  }, function (t, e, r) {
    "use strict";

    t.exports = Object.freeze(["count", "countDocuments", "distinct", "estimatedDocumentCount", "find", "findOne", "findOneAndReplace", "findOneAndUpdate", "replaceOne", "update", "updateMany", "updateOne", "deleteMany", "deleteOne", "findOneAndDelete", "findOneAndRemove", "remove"]);
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n13 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n13 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n13++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o = r(10),
        s = r(8),
        a = r(330),
        u = r(168),
        h = r(4),
        f = o.CastError;

    function c(t, e) {
      this.enumValues = [], this.regExp = null, o.call(this, t, e, "String");
    }
    /*!
     * ignore
     */


    function l(t) {
      return this.castForQuery(t);
    }

    c.schemaName = "String", c.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    c.prototype = Object.create(o.prototype), c.prototype.constructor = c, Object.defineProperty(c.prototype, "OptionsConstructor", {
      configurable: !1,
      enumerable: !1,
      writable: !1,
      value: a
    }),
    /*!
     * ignore
     */
    c._cast = u, c.cast = function (t) {
      return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
    },
    /*!
     * ignore
     */
    c._defaultCaster = function (t) {
      if (null != t && "string" != typeof t) throw new Error();
      return t;
    }, c.get = o.get, c.set = o.set,
    /*!
     * ignore
     */
    c._checkRequired = function (t) {
      return (t instanceof String || "string" == typeof t) && t.length;
    }, c.checkRequired = o.checkRequired, c.prototype.enum = function () {
      if (this.enumValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.enumValidator;
      }, this), this.enumValidator = !1), void 0 === arguments[0] || !1 === arguments[0]) return this;
      var t, e;
      h.isObject(arguments[0]) ? Array.isArray(arguments[0].values) ? (t = arguments[0].values, e = arguments[0].message) : (t = h.object.vals(arguments[0]), e = s.messages.String.enum) : (t = arguments, e = s.messages.String.enum);
      var r,
          i = n(t);

      try {
        for (i.s(); !(r = i.n()).done;) {
          var o = r.value;
          void 0 !== o && this.enumValues.push(this.cast(o));
        }
      } catch (t) {
        i.e(t);
      } finally {
        i.f();
      }

      var a = this.enumValues;
      return this.enumValidator = function (t) {
        return void 0 === t || ~a.indexOf(t);
      }, this.validators.push({
        validator: this.enumValidator,
        message: e,
        type: "enum",
        enumValues: a
      }), this;
    }, c.prototype.lowercase = function (t) {
      var e = this;
      return arguments.length > 0 && !t ? this : this.set(function (t) {
        return "string" != typeof t && (t = e.cast(t)), t ? t.toLowerCase() : t;
      });
    }, c.prototype.uppercase = function (t) {
      var e = this;
      return arguments.length > 0 && !t ? this : this.set(function (t) {
        return "string" != typeof t && (t = e.cast(t)), t ? t.toUpperCase() : t;
      });
    }, c.prototype.trim = function (t) {
      var e = this;
      return arguments.length > 0 && !t ? this : this.set(function (t) {
        return "string" != typeof t && (t = e.cast(t)), t ? t.trim() : t;
      });
    }, c.prototype.minlength = function (t, e) {
      if (this.minlengthValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.minlengthValidator;
      }, this)), null != t) {
        var r = e || s.messages.String.minlength;
        r = r.replace(/{MINLENGTH}/, t), this.validators.push({
          validator: this.minlengthValidator = function (e) {
            return null === e || e.length >= t;
          },
          message: r,
          type: "minlength",
          minlength: t
        });
      }

      return this;
    }, c.prototype.minLength = c.prototype.minlength, c.prototype.maxlength = function (t, e) {
      if (this.maxlengthValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.maxlengthValidator;
      }, this)), null != t) {
        var r = e || s.messages.String.maxlength;
        r = r.replace(/{MAXLENGTH}/, t), this.validators.push({
          validator: this.maxlengthValidator = function (e) {
            return null === e || e.length <= t;
          },
          message: r,
          type: "maxlength",
          maxlength: t
        });
      }

      return this;
    }, c.prototype.maxLength = c.prototype.maxlength, c.prototype.match = function (t, e) {
      var r = e || s.messages.String.match;
      return this.validators.push({
        validator: function validator(e) {
          return !!t && (t.lastIndex = 0, null == e || "" === e || t.test(e));
        },
        message: r,
        type: "regexp",
        regexp: t
      }), this;
    }, c.prototype.checkRequired = function (t, e) {
      return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : c.checkRequired())(t);
    }, c.prototype.cast = function (t, e, r) {
      if (o._isRef(this, t, e, r)) return "string" == typeof t ? t : this._castRef(t, e, r);
      var n;
      n = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : c.cast();

      try {
        return n(t);
      } catch (e) {
        throw new f("string", t, this.path, null, this);
      }
    };
    var d = h.options(o.prototype.$conditionalHandlers, {
      $all: function $all(t) {
        var e = this;
        return Array.isArray(t) ? t.map(function (t) {
          return e.castForQuery(t);
        }) : [this.castForQuery(t)];
      },
      $gt: l,
      $gte: l,
      $lt: l,
      $lte: l,
      $options: String,
      $regex: l,
      $not: l
    });
    Object.defineProperty(c.prototype, "$conditionalHandlers", {
      configurable: !1,
      enumerable: !1,
      writable: !1,
      value: Object.freeze(d)
    }), c.prototype.castForQuery = function (t, e) {
      var r;

      if (2 === arguments.length) {
        if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with String.");
        return r.call(this, e);
      }

      return e = t, "[object RegExp]" === Object.prototype.toString.call(e) ? e : this._castForQuery(e);
    },
    /*!
     * Module exports.
     */
    t.exports = c;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "enum", c), Object.defineProperty(f.prototype, "match", c), Object.defineProperty(f.prototype, "lowercase", c), Object.defineProperty(f.prototype, "trim", c), Object.defineProperty(f.prototype, "uppercase", c), Object.defineProperty(f.prototype, "minLength", c), Object.defineProperty(f.prototype, "minlength", c), Object.defineProperty(f.prototype, "maxLength", c), Object.defineProperty(f.prototype, "maxlength", c), Object.defineProperty(f.prototype, "populate", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "min", c), Object.defineProperty(f.prototype, "max", c), Object.defineProperty(f.prototype, "enum", c), Object.defineProperty(f.prototype, "populate", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";

    var n = r(36);
    /*!
     * Given a value, cast it to a number, or throw a `CastError` if the value
     * cannot be casted. `null` and `undefined` are considered valid.
     *
     * @param {Any} value
     * @param {String} [path] optional the path to set on the CastError
     * @return {Boolean|null|undefined}
     * @throws {Error} if `value` is not one of the allowed values
     * @api private
     */

    t.exports = function (t) {
      return null == t ? t : "" === t ? null : ("string" != typeof t && "boolean" != typeof t || (t = Number(t)), n.ok(!isNaN(t)), t instanceof Number ? t.valueOf() : "number" == typeof t ? t : Array.isArray(t) || "function" != typeof t.valueOf ? t.toString && !Array.isArray(t) && t.toString() == Number(t) ? Number(t) : void n.ok(!1) : Number(t.valueOf()));
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(21),
        i = r(10),
        o = r(88),
        s = r(4);

    function a(t, e) {
      i.call(this, t, e, "Boolean");
    }

    a.schemaName = "Boolean", a.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    a.prototype = Object.create(i.prototype), a.prototype.constructor = a,
    /*!
     * ignore
     */
    a._cast = o, a.set = i.set, a.cast = function (t) {
      return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
    },
    /*!
     * ignore
     */
    a._defaultCaster = function (t) {
      if (null != t && "boolean" != typeof t) throw new Error();
      return t;
    },
    /*!
     * ignore
     */
    a._checkRequired = function (t) {
      return !0 === t || !1 === t;
    }, a.checkRequired = i.checkRequired, a.prototype.checkRequired = function (t) {
      return this.constructor._checkRequired(t);
    }, Object.defineProperty(a, "convertToTrue", {
      get: function get() {
        return o.convertToTrue;
      },
      set: function set(t) {
        o.convertToTrue = t;
      }
    }), Object.defineProperty(a, "convertToFalse", {
      get: function get() {
        return o.convertToFalse;
      },
      set: function set(t) {
        o.convertToFalse = t;
      }
    }), a.prototype.cast = function (t) {
      var e;
      e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : a.cast();

      try {
        return e(t);
      } catch (e) {
        throw new n("Boolean", t, this.path, e, this);
      }
    }, a.$conditionalHandlers = s.options(i.prototype.$conditionalHandlers, {}), a.prototype.castForQuery = function (t, e) {
      var r;
      return 2 === arguments.length ? (r = a.$conditionalHandlers[t]) ? r.call(this, e) : this._castForQuery(e) : this._castForQuery(t);
    }, a.prototype._castNullish = function (t) {
      if (void 0 === t) return t;
      var e = "function" == typeof this.constructor.cast ? this.constructor.cast() : a.cast();
      return null == e ? t : !(e.convertToFalse instanceof Set && e.convertToFalse.has(t)) && (!!(e.convertToTrue instanceof Set && e.convertToTrue.has(t)) || t);
    },
    /*!
     * Module exports.
     */
    t.exports = a;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n,
        i,
        o = r(92),
        s = r(21),
        a = r(11).EventEmitter,
        u = r(340),
        h = r(10),
        f = r(181),
        c = r(6),
        l = r(182),
        d = r(9),
        p = r(4),
        y = r(183),
        m = r(1).arrayAtomicsSymbol,
        b = r(1).arrayPathSymbol,
        v = r(1).documentArrayParent;

    function g(t, e, r, n) {
      null != n && null != n._id ? e = l(e, n) : null != r && null != r._id && (e = l(e, r));
      var i = w(e, r);
      i.prototype.$basePath = t, o.call(this, t, i, r), this.schema = e, this.schemaOptions = n || {}, this.$isMongooseDocumentArray = !0, this.Constructor = i, i.base = e.base;
      var s = this.defaultValue;
      "defaultValue" in this && void 0 === s || this.default(function () {
        var t = s.call(this);
        return null == t || Array.isArray(t) || (t = [t]), t;
      });
      var a = this;
      this.$embeddedSchemaType = new h(t + ".$", {
        required: c(this, "schemaOptions.required", !1)
      }), this.$embeddedSchemaType.cast = function (t, e, r) {
        return a.cast(t, e, r)[0];
      }, this.$embeddedSchemaType.$isMongooseDocumentArrayElement = !0, this.$embeddedSchemaType.caster = this.Constructor, this.$embeddedSchemaType.schema = this.schema;
    }
    /*!
     * Ignore
     */


    function w(t, e, n) {
      function o() {
        i.apply(this, arguments), this.$session(this.ownerDocument().$session());
      }

      i || (i = r(47)), t._preCompile();
      var s = null != n ? n.prototype : i.prototype;

      for (var u in o.prototype = Object.create(s), o.prototype.$__setSchema(t), o.schema = t, o.prototype.constructor = o, o.$isArraySubdocument = !0, o.events = new a(), t.methods) {
        o.prototype[u] = t.methods[u];
      }

      for (var h in t.statics) {
        o[h] = t.statics[h];
      }

      for (var f in a.prototype) {
        o[f] = a.prototype[f];
      }

      return o.options = e, o;
    }
    /*!
     * Scopes paths selected in a query to this array.
     * Necessary for proper default application of subdocument values.
     *
     * @param {DocumentArrayPath} array - the array to scope `fields` paths
     * @param {Object|undefined} fields - the root fields selected in the query
     * @param {Boolean|undefined} init - if we are being created part of a query result
     */


    function _(t, e, r) {
      if (r && e) {
        for (var n, i, o, s = t.path + ".", a = Object.keys(e), u = a.length, h = {}; u--;) {
          if ((i = a[u]).startsWith(s)) {
            if ("$" === (o = i.substring(s.length))) continue;
            o.startsWith("$.") && (o = o.substr(2)), n || (n = !0), h[o] = e[i];
          }
        }

        return n && h || void 0;
      }
    }

    g.schemaName = "DocumentArray", g.options = {
      castNonArrays: !0
    },
    /*!
     * Inherits from ArrayType.
     */
    g.prototype = Object.create(o.prototype), g.prototype.constructor = g, g.prototype.OptionsConstructor = u, g.prototype.discriminator = function (t, e, r) {
      "function" == typeof t && (t = p.getFunctionName(t)), r = r || {};
      var n = p.isPOJO(r) ? r.value : r,
          i = c(r, "clone", !0);
      e.instanceOfSchema && i && (e = e.clone());
      var o = w(e = f(this.casterConstructor, t, e, n), null, this.casterConstructor);
      o.baseCasterConstructor = this.casterConstructor;

      try {
        Object.defineProperty(o, "name", {
          value: t
        });
      } catch (t) {}

      return this.casterConstructor.discriminators[t] = o, this.casterConstructor.discriminators[t];
    }, g.prototype.doValidate = function (t, e, o, s) {
      n || (n = r(27));
      var a = this;

      try {
        h.prototype.doValidate.call(this, t, function (r) {
          if (r) return e(r);
          var u,
              h = t && t.length;
          if (!h) return e();
          if (s && s.updateValidator) return e();
          t.isMongooseDocumentArray || (t = new n(t, a.path, o));

          function f(t) {
            null != t && (u = t), --h || e(u);
          }

          for (var c = 0, l = h; c < l; ++c) {
            var d = t[c];

            if (null != d) {
              if (!(d instanceof i)) {
                var p = y(a.casterConstructor, t[c]);
                d = t[c] = new p(d, t, void 0, void 0, c);
              }

              null == s || !s.validateModifiedOnly || d.$isModified() ? d.$__validate(f) : --h || e(u);
            } else --h || e(u);
          }
        }, o);
      } catch (t) {
        return e(t);
      }
    }, g.prototype.doValidateSync = function (t, e, r) {
      var n = h.prototype.doValidateSync.call(this, t, e);
      if (null != n) return n;
      var o = t && t.length,
          s = null;

      if (o) {
        for (var a = 0, u = o; a < u; ++a) {
          var f = t[a];

          if (f) {
            if (!(f instanceof i)) {
              var c = y(this.casterConstructor, t[a]);
              f = t[a] = new c(f, t, void 0, void 0, a);
            }

            if (null == r || !r.validateModifiedOnly || f.$isModified()) {
              var l = f.validateSync();
              l && null == s && (s = l);
            }
          }
        }

        return s;
      }
    },
    /*!
     * ignore
     */
    g.prototype.getDefault = function (t) {
      var e = "function" == typeof this.defaultValue ? this.defaultValue.call(t) : this.defaultValue;
      if (null == e) return e;
      n || (n = r(27)), Array.isArray(e) || (e = [e]), e = new n(e, this.path, t);

      for (var i = 0; i < e.length; ++i) {
        var o = new (y(this.casterConstructor, e[i]))({}, e, void 0, void 0, i);
        o.$init(e[i]), o.isNew = !0, Object.assign(o.$__.activePaths.default, o.$__.activePaths.init), o.$__.activePaths.init = {}, e[i] = o;
      }

      return e;
    }, g.prototype.cast = function (t, e, o, a, u) {
      if (n || (n = r(27)), null != t && null != t[b] && t === a) return t;
      var h,
          f,
          c = {
        transform: !1,
        virtuals: !1
      };

      if (u = u || {}, !Array.isArray(t)) {
        if (!o && !g.options.castNonArrays) throw new s("DocumentArray", d.inspect(t), this.path, null, this);
        return e && o && e.markModified(this.path), this.cast([t], e, o, a, u);
      }

      t && t.isMongooseDocumentArray || u.skipDocumentArrayCast ? t && t.isMongooseDocumentArray && (t = new n(t, this.path, e)) : t = new n(t, this.path, e), null != a && (t[m] = a[m] || {}), null != u.arrayPathIndex && (t[b] = this.path + "." + u.arrayPathIndex);

      for (var l = t.isMongooseDocumentArrayProxy ? t.__array : t, w = l.length, M = {
        skipId: !0,
        willInit: !0
      }, S = 0; S < w; ++S) {
        if (l[S]) {
          var O = y(this.casterConstructor, t[S]);

          if (!l[S].$__ || l[S] instanceof O || (l[S] = l[S].toObject({
            transform: !1,
            virtuals: l[S].schema === O.schema
          })), l[S] instanceof i) {
            if (l[S][v] !== e) if (o) {
              var A = new O(null, t, M, h, S);
              l[S] = A.$init(l[S]);
            } else {
              var E = new O(l[S], t, void 0, void 0, S);
              l[S] = E;
            }
            null == l[S].__index && l[S].$setIndex(S);
          } else if (null != l[S]) if (o) e ? h || (h = _(this, e.$__.selected, o)) : h = !0, f = new O(null, t, M, h, S), l[S] = f.$init(l[S]);else if (a && "function" == typeof a.id && (f = a.id(l[S]._id)), a && f && p.deepEqual(f.toObject(c), l[S])) f.set(l[S]), l[S] = f;else try {
            f = new O(l[S], t, void 0, void 0, S), l[S] = f;
          } catch (e) {
            var x = d.inspect(l[S]);
            throw new s("embedded", x, t[b], e, this);
          }
        }
      }

      return t;
    },
    /*!
     * ignore
     */
    g.prototype.clone = function () {
      var t = Object.assign({}, this.options),
          e = new this.constructor(this.path, this.schema, t, this.schemaOptions);
      return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e.Constructor.discriminators = Object.assign({}, this.Constructor.discriminators), e;
    },
    /*!
     * ignore
     */
    g.prototype.applyGetters = function (t, e) {
      return h.prototype.applyGetters.call(this, t, e);
    }, g.defaultOptions = {}, g.set = h.set,
    /*!
     * Module exports.
     */
    t.exports = g;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "enum", c), Object.defineProperty(f.prototype, "of", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";

    t.exports = function t(e) {
      if (!Array.isArray(e)) return {
        min: 0,
        max: 0,
        containsNonArrayItem: !0
      };
      if (0 === e.length) return {
        min: 1,
        max: 1,
        containsNonArrayItem: !1
      };
      if (1 === e.length && !Array.isArray(e[0])) return {
        min: 1,
        max: 1,
        containsNonArrayItem: !1
      };

      for (var r = t(e[0]), n = 1; n < e.length; ++n) {
        var i = t(e[n]);
        i.min < r.min && (r.min = i.min), i.max > r.max && (r.max = i.max), r.containsNonArrayItem = r.containsNonArrayItem || i.containsNonArrayItem;
      }

      return r.min = r.min + 1, r.max = r.max + 1, r;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n14 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n14 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n14++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    function o(t) {
      return (o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var s = r(21),
        a = r(56),
        u = r(91),
        h = r(338),
        f = r(6),
        c = r(37),
        l = r(171),
        d = r(173),
        p = r(9),
        y = r(35),
        m = r(53),
        b = ["Polygon", "MultiPolygon"];

    function v(t, e, r) {
      if (Array.isArray(t)) t.forEach(function (n, i) {
        if (Array.isArray(n) || y(n)) return v(n, e, r);
        t[i] = e.castForQueryWrapper({
          val: n,
          context: r
        });
      });else for (var n = Object.keys(t), i = n.length; i--;) {
        var o = n[i],
            s = t[o];
        Array.isArray(s) || y(s) ? (v(s, e, r), t[o] = s) : t[o] = e.castForQuery({
          val: s,
          context: r
        });
      }
    }

    t.exports = function t(e, r, i, g) {
      if (Array.isArray(r)) throw new Error("Query filter must be an object, got an array ", p.inspect(r));
      if (null == r) return r;
      r.hasOwnProperty("_bsontype") && "ObjectID" !== r._bsontype && delete r._bsontype, null != e && null != e.discriminators && null != r[e.options.discriminatorKey] && (e = l(e, r[e.options.discriminatorKey]) || e);

      var w,
          _,
          M,
          S,
          O,
          A,
          E = Object.keys(r),
          x = E.length;

      for (i = i || {}; x--;) {
        if (A = r[S = E[x]], "$or" === S || "$nor" === S || "$and" === S) {
          if (!Array.isArray(A)) throw new s("Array", A, S);

          for (var k = 0; k < A.length; ++k) {
            if (null == A[k] || "object" !== o(A[k])) throw new s("Object", A[k], S + "." + k);
            A[k] = t(e, A[k], i, g);
          }
        } else {
          if ("$where" === S) {
            if ("string" !== (O = o(A)) && "function" !== O) throw new Error("Must have a string or function for $where");
            "function" === O && (r[S] = A.toString());
            continue;
          }

          if ("$expr" === S) {
            if ("object" !== o(A) || null == A) throw new Error("`$expr` must be an object");
            continue;
          }

          if ("$elemMatch" === S) A = t(e, A, i, g);else if ("$text" === S) A = h(A, S);else {
            if (!e) continue;
            if (!(_ = e.path(S))) for (var j = S.split("."), $ = j.length; $--;) {
              var P = j.slice(0, $).join("."),
                  R = j.slice($).join("."),
                  B = e.path(P),
                  T = f(B, "schema.options.discriminatorKey");

              if (null != B && null != f(B, "schema.discriminators") && null != T && R !== T) {
                var I = f(r, P + "." + T);
                null != I && (_ = B.schema.discriminators[I].path(R));
              }
            }

            if (_) {
              if (null == A) continue;
              if ("Object" === c(A)) {
                if (Object.keys(A).some(d)) for (var N = Object.keys(A), D = void 0, C = N.length; C--;) {
                  if (M = A[D = N[C]], "$not" === D) {
                    if (M && _) {
                      if ((w = Object.keys(M)).length && d(w[0])) for (var L in M) {
                        M[L] = _.castForQueryWrapper({
                          $conditional: L,
                          val: M[L],
                          context: g
                        });
                      } else A[D] = _.castForQueryWrapper({
                        $conditional: D,
                        val: M,
                        context: g
                      });
                      continue;
                    }
                  } else A[D] = _.castForQueryWrapper({
                    $conditional: D,
                    val: M,
                    context: g
                  });
                } else r[S] = _.castForQueryWrapper({
                  val: A,
                  context: g
                });
              } else if (Array.isArray(A) && -1 === ["Buffer", "Array"].indexOf(_.instance)) {
                var q,
                    U = [],
                    F = n(A);

                try {
                  for (F.s(); !(q = F.n()).done;) {
                    var z = q.value;
                    U.push(_.castForQueryWrapper({
                      val: z,
                      context: g
                    }));
                  }
                } catch (t) {
                  F.e(t);
                } finally {
                  F.f();
                }

                r[S] = {
                  $in: U
                };
              } else r[S] = _.castForQueryWrapper({
                val: A,
                context: g
              });
            } else {
              for (var V = S.split("."), K = V.length, H = void 0, W = void 0, Z = void 0; K-- && (H = V.slice(0, K).join("."), !(_ = e.path(H)));) {
                ;
              }

              if (_) {
                _.caster && _.caster.schema ? ((Z = {})[W = V.slice(K).join(".")] = A, r[S] = t(_.caster.schema, Z, i, g)[W]) : r[S] = A;
                continue;
              }

              if (y(A)) {
                var J = "";

                if (A.$near ? J = "$near" : A.$nearSphere ? J = "$nearSphere" : A.$within ? J = "$within" : A.$geoIntersects ? J = "$geoIntersects" : A.$geoWithin && (J = "$geoWithin"), J) {
                  var Y = new u.Number("__QueryCasting__"),
                      G = A[J];

                  if (null != A.$maxDistance && (A.$maxDistance = Y.castForQueryWrapper({
                    val: A.$maxDistance,
                    context: g
                  })), null != A.$minDistance && (A.$minDistance = Y.castForQueryWrapper({
                    val: A.$minDistance,
                    context: g
                  })), "$within" === J) {
                    var Q = G.$center || G.$centerSphere || G.$box || G.$polygon;
                    if (!Q) throw new Error("Bad $within parameter: " + JSON.stringify(A));
                    G = Q;
                  } else if ("$near" === J && "string" == typeof G.type && Array.isArray(G.coordinates)) G = G.coordinates;else if (("$near" === J || "$nearSphere" === J || "$geoIntersects" === J) && G.$geometry && "string" == typeof G.$geometry.type && Array.isArray(G.$geometry.coordinates)) null != G.$maxDistance && (G.$maxDistance = Y.castForQueryWrapper({
                    val: G.$maxDistance,
                    context: g
                  })), null != G.$minDistance && (G.$minDistance = Y.castForQueryWrapper({
                    val: G.$minDistance,
                    context: g
                  })), m(G.$geometry) && (G.$geometry = G.$geometry.toObject({
                    transform: !1,
                    virtuals: !1
                  })), G = G.$geometry.coordinates;else if ("$geoWithin" === J) if (G.$geometry) {
                    m(G.$geometry) && (G.$geometry = G.$geometry.toObject({
                      virtuals: !1
                    }));
                    var X = G.$geometry.type;
                    if (-1 === b.indexOf(X)) throw new Error('Invalid geoJSON type for $geoWithin "' + X + '", must be "Polygon" or "MultiPolygon"');
                    G = G.$geometry.coordinates;
                  } else G = G.$box || G.$polygon || G.$center || G.$centerSphere, m(G) && (G = G.toObject({
                    virtuals: !1
                  }));

                  v(G, Y, g);
                  continue;
                }
              }

              if (e.nested[S]) continue;

              if (i.upsert && i.strict) {
                if ("throw" === i.strict) throw new a(S);
                throw new a(S, 'Path "' + S + '" is not in schema, strict mode is `true`, and upsert is `true`.');
              }

              if ("throw" === i.strictQuery) throw new a(S, 'Path "' + S + "\" is not in schema and strictQuery is 'throw'.");
              i.strictQuery && delete r[S];
            }
          }
        }
      }

      return r;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(21),
        o = r(88),
        s = r(168);
    /*!
     * Casts val to an object suitable for `$text`. Throws an error if the object
     * can't be casted.
     *
     * @param {Any} val value to cast
     * @param {String} [path] path to associate with any errors that occured
     * @return {Object} casted object
     * @see https://docs.mongodb.com/manual/reference/operator/query/text/
     * @api private
     */

    t.exports = function (t, e) {
      if (null == t || "object" !== n(t)) throw new i("$text", t, e);
      return null != t.$search && (t.$search = s(t.$search, e + ".$search")), null != t.$language && (t.$language = s(t.$language, e + ".$language")), null != t.$caseSensitive && (t.$caseSensitive = o(t.$caseSensitive, e + ".$castSensitive")), null != t.$diacriticSensitive && (t.$diacriticSensitive = o(t.$diacriticSensitive, e + ".$diacriticSensitive")), t;
    };
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function n(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

        if (!r) {
          if (Array.isArray(t) || (r = function (t, e) {
            if (!t) return;
            if ("string" == typeof t) return i(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === r && t.constructor && (r = t.constructor.name);
            if ("Map" === r || "Set" === r) return Array.from(t);
            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
          }(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);

            var _n15 = 0,
                o = function o() {};

            return {
              s: o,
              n: function n() {
                return _n15 >= t.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: t[_n15++]
                };
              },
              e: function e(t) {
                throw t;
              },
              f: o
            };
          }

          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }

        var s,
            a = !0,
            u = !1;
        return {
          s: function s() {
            r = r.call(t);
          },
          n: function n() {
            var t = r.next();
            return a = t.done, t;
          },
          e: function e(t) {
            u = !0, s = t;
          },
          f: function f() {
            try {
              a || null == r.return || r.return();
            } finally {
              if (u) throw s;
            }
          }
        };
      }

      function i(t, e) {
        (null == e || e > t.length) && (e = t.length);

        for (var r = 0, n = new Array(e); r < e; r++) {
          n[r] = t[r];
        }

        return n;
      }

      var o = r(93),
          s = r(14),
          a = r(18),
          u = r(178),
          h = r(59),
          f = r(38).internalToObjectOptions,
          c = r(4),
          l = r(1).arrayParentSymbol,
          d = r(1).arrayPathSymbol,
          p = r(1).arraySchemaSymbol,
          y = r(1).documentArrayParent,
          m = {
        /*!
           * ignore
           */
        toBSON: function toBSON() {
          return this.toObject(f);
        },
        _cast: function _cast(t, r) {
          if (null == this[p]) return t;
          var n = this[p].casterConstructor;
          if ((n.$isMongooseDocumentArray ? t && t.isMongooseDocumentArray : t instanceof n) || t && t.constructor && t.constructor.baseCasterConstructor === n) return t[y] && t.__parentArray || (t[y] = this[l], t.__parentArray = this), t.$setIndex(r), t;
          if (null == t) return null;
          if ((e.isBuffer(t) || t instanceof a || !c.isObject(t)) && (t = {
            _id: t
          }), t && n.discriminators && n.schema && n.schema.options && n.schema.options.discriminatorKey) if ("string" == typeof t[n.schema.options.discriminatorKey] && n.discriminators[t[n.schema.options.discriminatorKey]]) n = n.discriminators[t[n.schema.options.discriminatorKey]];else {
            var i = h(n.discriminators, t[n.schema.options.discriminatorKey]);
            i && (n = i);
          }
          if (n.$isMongooseDocumentArray) return n.cast(t, this, void 0, void 0, r);
          var o = new n(t, this, void 0, void 0, r);
          return o.isNew = !0, o;
        },
        id: function id(t) {
          var e, r, i;

          try {
            e = u(t).toString();
          } catch (t) {
            e = null;
          }

          var o,
              h = n(this);

          try {
            for (h.s(); !(o = h.n()).done;) {
              var f = o.value;
              if (f && null != (i = f.get("_id"))) if (i instanceof s) {
                if (r || (r = String(t)), r == i._id) return f;
              } else if (t instanceof a || i instanceof a) {
                if (e == i) return f;
              } else if (t == i || c.deepEqual(t, i)) return f;
            }
          } catch (t) {
            h.e(t);
          } finally {
            h.f();
          }

          return null;
        },
        toObject: function toObject(t) {
          return [].concat(this.map(function (e) {
            return null == e ? null : "function" != typeof e.toObject ? e : e.toObject(t);
          }));
        },
        $toObject: function $toObject() {
          return this.constructor.prototype.toObject.apply(this, arguments);
        },
        push: function push() {
          var t = o.push.apply(this, arguments);
          return b(this), t;
        },
        pull: function pull() {
          var t = o.pull.apply(this, arguments);
          return b(this), t;
        },

        /*!
           * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.
           */
        shift: function shift() {
          var t = o.shift.apply(this, arguments);
          return b(this), t;
        },

        /*!
           * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.
           */
        splice: function splice() {
          var t = o.splice.apply(this, arguments);
          return b(this), t;
        },
        inspect: function inspect() {
          return this.toObject();
        },
        create: function create(t) {
          var e = this[p].casterConstructor;
          if (t && e.discriminators && e.schema && e.schema.options && e.schema.options.discriminatorKey) if ("string" == typeof t[e.schema.options.discriminatorKey] && e.discriminators[t[e.schema.options.discriminatorKey]]) e = e.discriminators[t[e.schema.options.discriminatorKey]];else {
            var r = h(e.discriminators, t[e.schema.options.discriminatorKey]);
            r && (e = r);
          }
          return new e(t, this);
        },

        /*!
           * ignore
           */
        notify: function notify(t) {
          var e = this;
          return function r(n, i) {
            for (var o = (i = i || e).length; o--;) {
              if (null != i[o]) {
                switch (t) {
                  case "save":
                    n = e[o];
                }

                i[o].isMongooseArray ? r(n, i[o]) : i[o] && i[o].emit(t, n);
              }
            }
          };
        },
        _markModified: function _markModified(t, e) {
          var r,
              n = this[l];

          if (n) {
            if (r = this[d], arguments.length) if (null != e) {
              var i = t.__index;
              r = r + "." + i + "." + e;
            } else r = r + "." + t;
            if (null != r && r.endsWith(".$")) return this;
            n.markModified(r, arguments.length > 0 ? t : n);
          }

          return this;
        }
      };
      /*!
       * If this is a document array, each element may contain single
       * populated paths, so we need to modify the top-level document's
       * populated cache. See gh-8247, gh-8265.
       */

      function b(t) {
        var e = t[l];

        if (e && null != e.$__.populated) {
          var r,
              i = n(Object.keys(e.$__.populated).filter(function (e) {
            return e.startsWith(t[d] + ".");
          }));

          try {
            var o = function o() {
              var n = r.value,
                  i = n.slice((t[d] + ".").length);
              if (!Array.isArray(e.$__.populated[n].value)) return "continue";
              e.$__.populated[n].value = t.map(function (t) {
                return t.$populated(i);
              });
            };

            for (i.s(); !(r = i.n()).done;) {
              o();
            }
          } catch (t) {
            i.e(t);
          } finally {
            i.f();
          }
        }
      }

      t.exports = m;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "excludeIndexes", c), Object.defineProperty(f.prototype, "_id", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i,
        o = r(21),
        s = r(11).EventEmitter,
        a = r(164),
        u = r(342),
        h = r(10),
        f = r(87),
        c = r(58).castToNumber,
        l = r(181),
        d = r(174),
        p = r(6),
        y = r(183),
        m = r(182),
        b = r(38).internalToObjectOptions,
        v = r(4);

    function g(t, e, r) {
      t = m(t, r), this.caster = w(t), this.caster.path = e, this.caster.prototype.$basePath = e, this.schema = t, this.$isSingleNested = !0, h.call(this, e, r, "Embedded");
    }
    /*!
     * ignore
     */

    /*!
     * ignore
     */


    function w(t, e) {
      i || (i = r(94));

      var n = function n(t, e, r) {
        var n = this;
        this.$__parent = r, i.apply(this, arguments), this.$session(this.ownerDocument().$session()), r && (r.$on("save", function () {
          n.emit("save", n), n.constructor.emit("save", n);
        }), r.$on("isNew", function (t) {
          n.isNew = t, n.emit("isNew", t), n.constructor.emit("isNew", t);
        }));
      };

      t._preCompile();

      var o = null != e ? e.prototype : i.prototype;

      for (var a in (n.prototype = Object.create(o)).$__setSchema(t), n.prototype.constructor = n, n.schema = t, n.$isSingleNested = !0, n.events = new s(), n.prototype.toBSON = function () {
        return this.toObject(b);
      }, t.methods) {
        n.prototype[a] = t.methods[a];
      }

      for (var u in t.statics) {
        n[u] = t.statics[u];
      }

      for (var h in s.prototype) {
        n[h] = s.prototype[h];
      }

      return n;
    }
    /*!
     * Special case for when users use a common location schema to represent
     * locations for use with $geoWithin.
     * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/
     *
     * @param {Object} val
     * @api private
     */


    t.exports = g, g.prototype = Object.create(h.prototype), g.prototype.constructor = g, g.prototype.OptionsConstructor = u, g.prototype.$conditionalHandlers.$geoWithin = function (t) {
      return {
        $geometry: this.castForQuery(t.$geometry)
      };
    },
    /*!
     * ignore
     */
    g.prototype.$conditionalHandlers.$near = g.prototype.$conditionalHandlers.$nearSphere = d.cast$near, g.prototype.$conditionalHandlers.$within = g.prototype.$conditionalHandlers.$geoWithin = d.cast$within, g.prototype.$conditionalHandlers.$geoIntersects = d.cast$geoIntersects, g.prototype.$conditionalHandlers.$minDistance = c, g.prototype.$conditionalHandlers.$maxDistance = c, g.prototype.$conditionalHandlers.$exists = f, g.prototype.cast = function (t, e, r, i, o) {
      if (t && t.$isSingleNested && t.parent === e) return t;
      if (null != t && ("object" !== n(t) || Array.isArray(t))) throw new a(this.path, t);
      var s,
          u = y(this.caster, t),
          h = p(e, "$__.selected", {}),
          f = this.path,
          c = Object.keys(h).reduce(function (t, e) {
        return e.startsWith(f + ".") && (t[e.substr(f.length + 1)] = h[e]), t;
      }, {});
      return o = Object.assign({}, o, {
        priorDoc: i
      }), r ? ((s = new u(void 0, c, e)).$init(t), s) : 0 === Object.keys(t).length ? new u({}, c, e, void 0, o) : new u(t, c, e, void 0, o);
    }, g.prototype.castForQuery = function (t, e, r) {
      var n;

      if (2 === arguments.length) {
        if (!(n = this.$conditionalHandlers[t])) throw new Error("Can't use " + t);
        return n.call(this, e);
      }

      if (null == (e = t)) return e;
      this.options.runSetters && (e = this._applySetters(e));
      var i = y(this.caster, e),
          s = null != r && null != r.strict ? r.strict : void 0;

      try {
        e = new i(e, s);
      } catch (t) {
        if (!(t instanceof o)) throw new o("Embedded", e, this.path, t, this);
        throw t;
      }

      return e;
    }, g.prototype.doValidate = function (t, e, r, n) {
      var i = y(this.caster, t);
      if (!t || t instanceof i || (t = new i(t, null, r)), n && n.skipSchemaValidators) return t.validate(e);
      h.prototype.doValidate.call(this, t, function (r) {
        return r ? e(r) : t ? void t.validate(e) : e(null);
      }, r, n);
    }, g.prototype.doValidateSync = function (t, e, r) {
      if (!r || !r.skipSchemaValidators) {
        var n = h.prototype.doValidateSync.call(this, t, e);
        if (n) return n;
      }

      if (t) return t.validateSync();
    }, g.prototype.discriminator = function (t, e, r) {
      r = r || {};
      var n = v.isPOJO(r) ? r.value : r,
          i = p(r, "clone", !0);
      return e.instanceOfSchema && i && (e = e.clone()), e = l(this.caster, t, e, n), this.caster.discriminators[t] = w(e, this.caster), this.caster.discriminators[t];
    }, g.defaultOptions = {}, g.set = h.set,
    /*!
     * ignore
     */
    g.prototype.clone = function () {
      var t = Object.assign({}, this.options),
          e = new this.constructor(this.schema, this.path, t);
      return e.validators = this.validators.slice(), void 0 !== this.requiredValidator && (e.requiredValidator = this.requiredValidator), e.caster.discriminators = Object.assign({}, this.caster.discriminators), e;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "_id", c), t.exports = f;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * Module dependencies.
       */
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var i = r(177),
          o = r(344),
          s = r(10),
          a = r(170),
          u = r(4),
          h = i.Binary,
          f = s.CastError;

      function c(t, e) {
        s.call(this, t, e, "Buffer");
      }
      /*!
       * ignore
       */


      function l(t) {
        return this.castForQuery(t);
      }

      c.schemaName = "Buffer", c.defaultOptions = {},
      /*!
       * Inherits from SchemaType.
       */
      c.prototype = Object.create(s.prototype), c.prototype.constructor = c, c.prototype.OptionsConstructor = o,
      /*!
       * ignore
       */
      c._checkRequired = function (t) {
        return !(!t || !t.length);
      }, c.set = s.set, c.checkRequired = s.checkRequired, c.prototype.checkRequired = function (t, e) {
        return s._isRef(this, t, e, !0) ? !!t : this.constructor._checkRequired(t);
      }, c.prototype.cast = function (t, r, o) {
        var a;

        if (s._isRef(this, t, r, o)) {
          if (t && t.isMongooseBuffer) return t;
          if (e.isBuffer(t)) return t && t.isMongooseBuffer || (t = new i(t, [this.path, r]), null != this.options.subtype && (t._subtype = this.options.subtype)), t;

          if (t instanceof h) {
            if (a = new i(t.value(!0), [this.path, r]), "number" != typeof t.sub_type) throw new f("Buffer", t, this.path, null, this);
            return a._subtype = t.sub_type, a;
          }

          if (null == t || u.isNonBuiltinObject(t)) return this._castRef(t, r, o);
        }

        if (t && t._id && (t = t._id), t && t.isMongooseBuffer) return t;
        if (e.isBuffer(t)) return t && t.isMongooseBuffer || (t = new i(t, [this.path, r]), null != this.options.subtype && (t._subtype = this.options.subtype)), t;

        if (t instanceof h) {
          if (a = new i(t.value(!0), [this.path, r]), "number" != typeof t.sub_type) throw new f("Buffer", t, this.path, null, this);
          return a._subtype = t.sub_type, a;
        }

        if (null === t) return t;
        var c = n(t);
        if ("string" === c || "number" === c || Array.isArray(t) || "object" === c && "Buffer" === t.type && Array.isArray(t.data)) return "number" === c && (t = [t]), a = new i(t, [this.path, r]), null != this.options.subtype && (a._subtype = this.options.subtype), a;
        throw new f("Buffer", t, this.path, null, this);
      }, c.prototype.subtype = function (t) {
        return this.options.subtype = t, this;
      }, c.prototype.$conditionalHandlers = u.options(s.prototype.$conditionalHandlers, {
        $bitsAllClear: a,
        $bitsAnyClear: a,
        $bitsAllSet: a,
        $bitsAnySet: a,
        $gt: l,
        $gte: l,
        $lt: l,
        $lte: l
      }), c.prototype.castForQuery = function (t, e) {
        var r;

        if (2 === arguments.length) {
          if (!(r = this.$conditionalHandlers[t])) throw new Error("Can't use " + t + " with Buffer.");
          return r.call(this, e);
        }

        e = t;

        var n = this._castForQuery(e);

        return n ? n.toObject({
          transform: !1,
          virtuals: !1
        }) : n;
      },
      /*!
       * Module exports.
       */
      t.exports = c;
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "subtype", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module requirements.
     */

    var n = r(8),
        i = r(346),
        o = r(10),
        s = r(347),
        a = r(37),
        u = r(4),
        h = o.CastError;

    function f(t, e) {
      o.call(this, t, e, "Date");
    }
    /*!
     * Date Query casting.
     *
     * @api private
     */


    function c(t) {
      return this.cast(t);
    }

    f.schemaName = "Date", f.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    f.prototype = Object.create(o.prototype), f.prototype.constructor = f, f.prototype.OptionsConstructor = i,
    /*!
     * ignore
     */
    f._cast = s, f.set = o.set, f.cast = function (t) {
      return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
    },
    /*!
     * ignore
     */
    f._defaultCaster = function (t) {
      if (null != t && !(t instanceof Date)) throw new Error();
      return t;
    }, f.prototype.expires = function (t) {
      return "Object" !== a(this._index) && (this._index = {}), this._index.expires = t, u.expires(this._index), this;
    },
    /*!
     * ignore
     */
    f._checkRequired = function (t) {
      return t instanceof Date;
    }, f.checkRequired = o.checkRequired, f.prototype.checkRequired = function (t, e) {
      return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : f.checkRequired())(t);
    }, f.prototype.min = function (t, e) {
      if (this.minValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.minValidator;
      }, this)), t) {
        var r = e || n.messages.Date.min;
        "string" == typeof r && (r = r.replace(/{MIN}/, t === Date.now ? "Date.now()" : t.toString()));
        var i = this;
        this.validators.push({
          validator: this.minValidator = function (e) {
            var r = t;
            "function" == typeof t && t !== Date.now && (r = r.call(this));
            var n = r === Date.now ? r() : i.cast(r);
            return null === e || e.valueOf() >= n.valueOf();
          },
          message: r,
          type: "min",
          min: t
        });
      }

      return this;
    }, f.prototype.max = function (t, e) {
      if (this.maxValidator && (this.validators = this.validators.filter(function (t) {
        return t.validator !== this.maxValidator;
      }, this)), t) {
        var r = e || n.messages.Date.max;
        "string" == typeof r && (r = r.replace(/{MAX}/, t === Date.now ? "Date.now()" : t.toString()));
        var i = this;
        this.validators.push({
          validator: this.maxValidator = function (e) {
            var r = t;
            "function" == typeof r && r !== Date.now && (r = r.call(this));
            var n = r === Date.now ? r() : i.cast(r);
            return null === e || e.valueOf() <= n.valueOf();
          },
          message: r,
          type: "max",
          max: t
        });
      }

      return this;
    }, f.prototype.cast = function (t) {
      var e;
      e = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : f.cast();

      try {
        return e(t);
      } catch (e) {
        throw new h("date", t, this.path, e, this);
      }
    }, f.prototype.$conditionalHandlers = u.options(o.prototype.$conditionalHandlers, {
      $gt: c,
      $gte: c,
      $lt: c,
      $lte: c
    }), f.prototype.castForQuery = function (t, e) {
      if (2 !== arguments.length) return this._castForQuery(t);
      var r = this.$conditionalHandlers[t];
      if (!r) throw new Error("Can't use " + t + " with Date.");
      return r.call(this, e);
    },
    /*!
     * Module exports.
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "min", c), Object.defineProperty(f.prototype, "max", c), Object.defineProperty(f.prototype, "expires", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";

    var n = r(36);

    t.exports = function (t) {
      return null == t || "" === t ? null : t instanceof Date ? (n.ok(!isNaN(t.valueOf())), t) : (n.ok("boolean" != typeof t), e = t instanceof Number || "number" == typeof t ? new Date(t) : "string" == typeof t && !isNaN(Number(t)) && (Number(t) >= 275761 || Number(t) < -271820) ? new Date(Number(t)) : "function" == typeof t.valueOf ? new Date(t.valueOf()) : new Date(t), isNaN(e.valueOf()) ? void n.ok(!1) : e);
      var e;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n,
        i = r(349),
        o = r(10),
        s = r(178),
        a = r(37),
        u = r(18),
        h = r(4),
        f = o.CastError;

    function c(t, e) {
      var r = "string" == typeof t && 24 === t.length && /^[a-f0-9]+$/i.test(t),
          n = e && e.suppressWarning;
      !r && void 0 !== t || n || h.warn("mongoose: To create a new ObjectId please try `Mongoose.Types.ObjectId` instead of using `Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if you're trying to create a hex char path in your schema."), o.call(this, t, e, "ObjectID");
    }
    /*!
     * ignore
     */


    function l(t) {
      return this.cast(t);
    }
    /*!
     * ignore
     */


    function d() {
      return new u();
    }

    function p(t) {
      if (n || (n = r(14)), this instanceof n) {
        if (void 0 === t) {
          var e = new u();
          return this.$__._id = e, e;
        }

        this.$__._id = t;
      }

      return t;
    }
    /*!
     * Module exports.
     */


    c.schemaName = "ObjectId", c.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    c.prototype = Object.create(o.prototype), c.prototype.constructor = c, c.prototype.OptionsConstructor = i, c.get = o.get, c.set = o.set, c.prototype.auto = function (t) {
      return t && (this.default(d), this.set(p)), this;
    },
    /*!
     * ignore
     */
    c._checkRequired = function (t) {
      return t instanceof u;
    },
    /*!
     * ignore
     */
    c._cast = s, c.cast = function (t) {
      return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
    },
    /*!
     * ignore
     */
    c._defaultCaster = function (t) {
      if (!(t instanceof u)) throw new Error(t + " is not an instance of ObjectId");
      return t;
    }, c.checkRequired = o.checkRequired, c.prototype.checkRequired = function (t, e) {
      return o._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : c.checkRequired())(t);
    }, c.prototype.cast = function (t, e, r) {
      if (o._isRef(this, t, e, r)) {
        if (t instanceof u) return t;
        if ("objectid" === (a(t) || "").toLowerCase()) return new u(t.toHexString());
        if (null == t || h.isNonBuiltinObject(t)) return this._castRef(t, e, r);
      }

      var n;
      n = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : c.cast();

      try {
        return n(t);
      } catch (e) {
        throw new f("ObjectId", t, this.path, e, this);
      }
    }, c.prototype.$conditionalHandlers = h.options(o.prototype.$conditionalHandlers, {
      $gt: l,
      $gte: l,
      $lt: l,
      $lte: l
    }), d.$runBeforeSetters = !0, t.exports = c;
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "auto", c), Object.defineProperty(f.prototype, "populate", c),
    /*!
     * ignore
     */
    t.exports = f;
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(10),
        i = n.CastError,
        o = r(34),
        s = r(351),
        a = r(4);

    function u(t, e) {
      n.call(this, t, e, "Decimal128");
    }
    /*!
     * ignore
     */


    function h(t) {
      return this.cast(t);
    }

    u.schemaName = "Decimal128", u.defaultOptions = {},
    /*!
     * Inherits from SchemaType.
     */
    u.prototype = Object.create(n.prototype), u.prototype.constructor = u,
    /*!
     * ignore
     */
    u._cast = s, u.set = n.set, u.cast = function (t) {
      return 0 === arguments.length || (!1 === t && (t = this._defaultCaster), this._cast = t), this._cast;
    },
    /*!
     * ignore
     */
    u._defaultCaster = function (t) {
      if (null != t && !(t instanceof o)) throw new Error();
      return t;
    },
    /*!
     * ignore
     */
    u._checkRequired = function (t) {
      return t instanceof o;
    }, u.checkRequired = n.checkRequired, u.prototype.checkRequired = function (t, e) {
      return n._isRef(this, t, e, !0) ? !!t : ("function" == typeof this.constructor.checkRequired ? this.constructor.checkRequired() : u.checkRequired())(t);
    }, u.prototype.cast = function (t, e, r) {
      if (n._isRef(this, t, e, r)) return t instanceof o ? t : this._castRef(t, e, r);
      var s;
      s = "function" == typeof this._castFunction ? this._castFunction : "function" == typeof this.constructor.cast ? this.constructor.cast() : u.cast();

      try {
        return s(t);
      } catch (e) {
        throw new i("Decimal128", t, this.path, e, this);
      }
    }, u.prototype.$conditionalHandlers = a.options(n.prototype.$conditionalHandlers, {
      $gt: h,
      $gte: h,
      $lt: h,
      $lte: h
    }),
    /*!
     * Module exports.
     */
    t.exports = u;
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var i = r(34),
          o = r(36);

      t.exports = function (t) {
        return null == t ? t : "object" === n(t) && "string" == typeof t.$numberDecimal ? i.fromString(t.$numberDecimal) : t instanceof i ? t : "string" == typeof t ? i.fromString(t) : e.isBuffer(t) ? new i(t) : "number" == typeof t ? i.fromString(String(t)) : "function" == typeof t.valueOf && "string" == typeof t.valueOf() ? i.fromString(t.valueOf()) : void o.ok(!1);
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    (function (e) {
      /*!
       * ignore
       */
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      function i(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

        if (!r) {
          if (Array.isArray(t) || (r = function (t, e) {
            if (!t) return;
            if ("string" == typeof t) return o(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === r && t.constructor && (r = t.constructor.name);
            if ("Map" === r || "Set" === r) return Array.from(t);
            if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o(t, e);
          }(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);

            var _n16 = 0,
                i = function i() {};

            return {
              s: i,
              n: function n() {
                return _n16 >= t.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: t[_n16++]
                };
              },
              e: function e(t) {
                throw t;
              },
              f: i
            };
          }

          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }

        var s,
            a = !0,
            u = !1;
        return {
          s: function s() {
            r = r.call(t);
          },
          n: function n() {
            var t = r.next();
            return a = t.done, t;
          },
          e: function e(t) {
            u = !0, s = t;
          },
          f: function f() {
            try {
              a || null == r.return || r.return();
            } finally {
              if (u) throw s;
            }
          }
        };
      }

      function o(t, e) {
        (null == e || e > t.length) && (e = t.length);

        for (var r = 0, n = new Array(e); r < e; r++) {
          n[r] = t[r];
        }

        return n;
      }

      function s(t, e) {
        for (var r = 0; r < e.length; r++) {
          var n = e[r];
          n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
        }
      }

      function a() {
        return (a = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, r) {
          var n = u(t, e);

          if (n) {
            var i = Object.getOwnPropertyDescriptor(n, e);
            return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value;
          }
        }).apply(this, arguments);
      }

      function u(t, e) {
        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = l(t));) {
          ;
        }

        return t;
      }

      function h(t, e) {
        return (h = Object.setPrototypeOf || function (t, e) {
          return t.__proto__ = e, t;
        })(t, e);
      }

      function f(t) {
        var e = function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;

          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
          } catch (t) {
            return !1;
          }
        }();

        return function () {
          var r,
              n = l(t);

          if (e) {
            var i = l(this).constructor;
            r = Reflect.construct(n, arguments, i);
          } else r = n.apply(this, arguments);

          return c(this, r);
        };
      }

      function c(t, e) {
        if (e && ("object" === n(e) || "function" == typeof e)) return e;
        if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
        return function (t) {
          if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t;
        }(t);
      }

      function l(t) {
        return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        })(t);
      }

      var d = r(179),
          p = r(353),
          y = r(10),
          m = function (t) {
        !function (t, e) {
          if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
          Object.defineProperty(t, "prototype", {
            value: Object.create(e && e.prototype, {
              constructor: {
                value: t,
                writable: !0,
                configurable: !0
              }
            }),
            writable: !1
          }), e && h(t, e);
        }(c, t);
        var r,
            n,
            o,
            u = f(c);

        function c(t, e) {
          var r;
          return function (t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
          }(this, c), (r = u.call(this, t, e, "Map")).$isSchemaMap = !0, r;
        }

        return r = c, (n = [{
          key: "set",
          value: function value(t, e) {
            return y.set(t, e);
          }
        }, {
          key: "cast",
          value: function value(t, r, n) {
            if (t instanceof d) return t;
            var o = this.path;

            if (n) {
              var s = new d({}, o, r, this.$__schemaType);

              if (t instanceof e.Map) {
                var a,
                    u = i(t.keys());

                try {
                  for (u.s(); !(a = u.n()).done;) {
                    var h = a.value,
                        f = t.get(h);
                    f = null == f ? s.$__schemaType._castNullish(f) : s.$__schemaType.cast(f, r, !0, null, {
                      path: o + "." + h
                    }), s.$init(h, f);
                  }
                } catch (t) {
                  u.e(t);
                } finally {
                  u.f();
                }
              } else for (var c = 0, l = Object.keys(t); c < l.length; c++) {
                var p = l[c],
                    y = t[p];
                y = null == y ? s.$__schemaType._castNullish(y) : s.$__schemaType.cast(y, r, !0, null, {
                  path: o + "." + p
                }), s.$init(p, y);
              }

              return s;
            }

            return new d(t, o, r, this.$__schemaType);
          }
        }, {
          key: "clone",
          value: function value() {
            var t = a(l(c.prototype), "clone", this).call(this);
            return null != this.$__schemaType && (t.$__schemaType = this.$__schemaType.clone()), t;
          }
        }]) && s(r.prototype, n), o && s(r, o), Object.defineProperty(r, "prototype", {
          writable: !1
        }), c;
      }(y);

      m.prototype.OptionsConstructor = p, m.defaultOptions = {}, t.exports = m;
    }).call(this, r(7));
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
      }
    }

    function o(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function s(t, e) {
      return (s = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function a(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var r,
            n = h(t);

        if (e) {
          var i = h(this).constructor;
          r = Reflect.construct(n, arguments, i);
        } else r = n.apply(this, arguments);

        return u(this, r);
      };
    }

    function u(t, e) {
      if (e && ("object" === n(e) || "function" == typeof e)) return e;
      if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
      return function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t);
    }

    function h(t) {
      return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    var f = function (t) {
      !function (t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        Object.defineProperty(t, "prototype", {
          value: Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }),
          writable: !1
        }), e && s(t, e);
      }(h, t);
      var e,
          r,
          n,
          u = a(h);

      function h() {
        return o(this, h), u.apply(this, arguments);
      }

      return e = h, r && i(e.prototype, r), n && i(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
      }), e;
    }(r(15)),
        c = r(16);

    Object.defineProperty(f.prototype, "of", c), t.exports = f;
  }, function (t, e, r) {
    "use strict";

    (function (t) {
      /*!
       * Module dependencies.
       */
      function n(t) {
        return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }

      var i = r(24).get().Binary,
          o = r(34),
          s = r(18),
          a = r(53);
      /*!
       * ignore
       */

      function u(e) {
        return e && "object" === n(e) && !(e instanceof Date) && !(e instanceof s) && (!Array.isArray(e) || e.length > 0) && !(e instanceof t) && !(e instanceof o) && !(e instanceof i);
      }

      e.flatten =
      /*!
       * ignore
       */
      function e(r, n, i, o) {
        var s;
        s = r && a(r) && !t.isBuffer(r) ? Object.keys(r.toObject({
          transform: !1,
          virtuals: !1
        }) || {}) : Object.keys(r || {});
        var h = s.length,
            f = {};
        n = n ? n + "." : "";

        for (var c = 0; c < h; ++c) {
          var l = s[c],
              d = r[l];
          f[n + l] = d;
          var p = o && o.path && o.path(n + l),
              y = o && o.nested && o.nested[n + l];

          if (!p || "Mixed" !== p.instance) {
            if (u(d)) {
              if (i && i.skipArrays && Array.isArray(d)) continue;
              var m = e(d, n + l, i, o);

              for (var b in m) {
                f[b] = m[b];
              }

              Array.isArray(d) && (f[n + l] = d);
            }

            if (y) for (var v = Object.keys(o.paths), g = 0, w = v; g < w.length; g++) {
              var _ = w[g];
              _.startsWith(n + l + ".") && !f.hasOwnProperty(_) && (f[_] = void 0);
            }
          }
        }

        return f;
      }
      /*!
       * ignore
       */
      , e.modifiedPaths = function e(r, n, i) {
        var o = Object.keys(r || {}),
            s = o.length;
        i = i || {}, n = n ? n + "." : "";

        for (var h = 0; h < s; ++h) {
          var f = o[h],
              c = r[f],
              l = n + f;
          if (i[l] = !0, -1 !== l.indexOf(".")) for (var d = l.split("."), p = d[0], y = 1; y < d.length; ++y) {
            i[p] = !0, p += "." + d[y];
          }
          a(c) && !t.isBuffer(c) && (c = c.toObject({
            transform: !1,
            virtuals: !1
          })), u(c) && e(c, n + f, i);
        }

        return i;
      };
    }).call(this, r(3).Buffer);
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    var i = r(20),
        o = r(356),
        s = r(9);

    t.exports = function t(e) {
      if (null != e && "object" === n(e) && !Array.isArray(e) && !e.$__) for (var r = 0, a = Object.keys(e); r < a.length; r++) {
        var u = a[r],
            h = e[u];
        if (-1 === u.indexOf(".")) t(e[u]);else try {
          delete e[u], o(e, u, h);
        } catch (t) {
          if (!(t instanceof TypeError)) throw t;
          throw new i('Conflicting dotted paths when setting document path, key: "'.concat(u, '", value: ').concat(s.inspect(h)));
        }
      }
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n17 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n17 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n17++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    t.exports = function (t, e, r) {
      var i,
          o = -1 === e.indexOf(".") ? [e] : e.split("."),
          s = t,
          a = n(o.slice(0, -1));

      try {
        for (a.s(); !(i = a.n()).done;) {
          var u = i.value;
          null == s[u] && (s[u] = {}), s = s[u];
        }
      } catch (t) {
        a.e(t);
      } finally {
        a.f();
      }

      s[o[o.length - 1]] = r;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(6),
        i = r(171);
    /*!
     * Like `schema.path()`, except with a document, because impossible to
     * determine path type without knowing the embedded discriminator key.
     */

    t.exports = function t(e, r, o) {
      for (var s = (o = o || {}).typeOnly, a = -1 === r.indexOf(".") ? [r] : r.split("."), u = null, h = "adhocOrUndefined", f = i(e.schema, e.get(e.schema.options.discriminatorKey)) || e.schema, c = 0; c < a.length; ++c) {
        var l = a.slice(0, c + 1).join(".");

        if (null != (u = f.path(l))) {
          if ("Mixed" === u.instance) return s ? "real" : u;

          if (h = f.pathType(l), (u.$isSingleNested || u.$isMongooseDocumentArrayElement) && null != u.schema.discriminators) {
            var d = u.schema.discriminators,
                p = e.get(l + "." + n(u, "schema.options.discriminatorKey"));
            if (null == p || null == d[p]) continue;
            var y = a.slice(c + 1).join(".");
            return t(e.get(l), y, o);
          }
        } else h = "adhocOrUndefined";
      }

      return s ? h : u;
    };
  }, function (t, e, r) {
    "use strict";

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n18 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n18 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n18++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var o = r(6);

    t.exports = function (t, e, r) {
      var i,
          s = null != r ? Object.keys(o(t.tree, r, {})) : Object.keys(t.tree),
          a = new Set(Object.keys(e));

      if (a.size > 1) {
        i = new Set();
        var u,
            h = n(s);

        try {
          for (h.s(); !(u = h.n()).done;) {
            var f = u.value;
            a.has(f) && i.add(f);
          }
        } catch (t) {
          h.e(t);
        } finally {
          h.f();
        }

        var c,
            l = n(a);

        try {
          for (l.s(); !(c = l.n()).done;) {
            var d = c.value;
            i.has(d) || i.add(d);
          }
        } catch (t) {
          l.e(t);
        } finally {
          l.f();
        }

        i = Array.from(i);
      } else i = Array.from(a);

      return i;
    };
  }, function (t, e, r) {
    "use strict";

    var n = r(96);
    /*!
     * ignore
     */

    t.exports = function (t) {
      if (null == t) return null;
      var e = Object.keys(t),
          r = e.length,
          i = null;
      if (1 === r && "_id" === e[0]) i = !t._id;else for (; r--;) {
        if ("_id" !== e[r] && n(t[e[r]])) {
          i = !t[e[r]];
          break;
        }
      }
      return i;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * If populating a path within a document array, make sure each
     * subdoc within the array knows its subpaths are populated.
     *
     * ####Example:
     *     const doc = await Article.findOne().populate('comments.author');
     *     doc.comments[0].populated('author'); // Should be set
     */

    function n(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return i(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n19 = 0,
              o = function o() {};

          return {
            s: o,
            n: function n() {
              return _n19 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n19++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: o
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function i(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    t.exports = function (t, e) {
      if (null != t._id && null != e && 0 !== e.length) {
        var r,
            i = String(t._id),
            o = n(e);

        try {
          for (o.s(); !(r = o.n()).done;) {
            var s = r.value;
            if (!s.isVirtual) for (var a = s.path.split("."), u = 0; u < a.length - 1; ++u) {
              var h = a.slice(0, u + 1).join("."),
                  f = a.slice(u + 1).join("."),
                  c = t.get(h);

              if (null != c && c.isMongooseDocumentArray) {
                for (var l = 0; l < c.length; ++l) {
                  c[l].populated(f, null == s._docs[i] ? void 0 : s._docs[i][l], s);
                }

                break;
              }
            }
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }
      }
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies
     */

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function i(t, e) {
      var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];

      if (!r) {
        if (Array.isArray(t) || (r = function (t, e) {
          if (!t) return;
          if ("string" == typeof t) return o(t, e);
          var r = Object.prototype.toString.call(t).slice(8, -1);
          "Object" === r && t.constructor && (r = t.constructor.name);
          if ("Map" === r || "Set" === r) return Array.from(t);
          if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return o(t, e);
        }(t)) || e && t && "number" == typeof t.length) {
          r && (t = r);

          var _n20 = 0,
              i = function i() {};

          return {
            s: i,
            n: function n() {
              return _n20 >= t.length ? {
                done: !0
              } : {
                done: !1,
                value: t[_n20++]
              };
            },
            e: function e(t) {
              throw t;
            },
            f: i
          };
        }

        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      var s,
          a = !0,
          u = !1;
      return {
        s: function s() {
          r = r.call(t);
        },
        n: function n() {
          var t = r.next();
          return a = t.done, t;
        },
        e: function e(t) {
          u = !0, s = t;
        },
        f: function f() {
          try {
            a || null == r.return || r.return();
          } finally {
            if (u) throw s;
          }
        }
      };
    }

    function o(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var r = 0, n = new Array(e); r < e; r++) {
        n[r] = t[r];
      }

      return n;
    }

    var s = r(362),
        a = r(6),
        u = r(59),
        h = r(96),
        f = r(44);
    /*!
     * Set each path query option to lean
     *
     * @param {Object} option
     */

    function c(t) {
      return function (e) {
        e.options || (e.options = {}), null != t && Array.isArray(t.virtuals) && ((t = Object.assign({}, t)).virtuals = t.virtuals.filter(function (t) {
          return "string" == typeof t && t.startsWith(e.path + ".");
        }).map(function (t) {
          return t.slice(e.path.length + 1);
        })), e.options.lean = t;
      };
    }
    /*!
     * Handle the `WriteOpResult` from the server
     */

    /*!
     * Prepare a set of path options for query population.
     *
     * @param {Query} query
     * @param {Object} options
     * @return {Array}
     */


    e.preparePopulationOptions = function (t, e) {
      var r = t.options.populate,
          n = Object.keys(r).reduce(function (t, e) {
        return t.concat([r[e]]);
      }, []);
      return null != e.lean && n.filter(function (t) {
        return null == a(t, "options.lean");
      }).forEach(c(e.lean)), n.forEach(function (e) {
        e._localModel = t.model;
      }), n;
    },
    /*!
     * Prepare a set of path options for query population. This is the MongooseQuery
     * version
     *
     * @param {Query} query
     * @param {Object} options
     * @return {Array}
     */
    e.preparePopulationOptionsMQ = function (t, e) {
      var r = t._mongooseOptions.populate,
          n = Object.keys(r).reduce(function (t, e) {
        return t.concat([r[e]]);
      }, []);
      null != e.lean && n.filter(function (t) {
        return null == a(t, "options.lean");
      }).forEach(c(e.lean));
      var i = a(t, "options.session", null);
      null != i && n.forEach(function (t) {
        null != t.options ? "session" in t.options || (t.options.session = i) : t.options = {
          session: i
        };
      });

      var o = t._fieldsForExec();

      return n.forEach(function (t) {
        t._queryProjection = o;
      }), n.forEach(function (e) {
        e._localModel = t.model;
      }), n;
    },
    /*!
     * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,
     * it returns an instance of the given model.
     *
     * @param {Model}  model
     * @param {Object} doc
     * @param {Object} fields
     *
     * @return {Document}
     */
    e.createModel = function (t, r, n, i, o) {
      t.hooks.execPreSync("createModel", r);
      var s = t.schema ? t.schema.discriminatorMapping : null,
          a = s && s.isRoot ? s.key : null,
          h = r[a];

      if (a && h && t.discriminators) {
        var c = t.discriminators[h] || u(t.discriminators, h);

        if (c) {
          var l = f(i);
          return e.applyPaths(l, c.schema), new c(void 0, l, !0);
        }
      }

      var d = {
        skipId: !0,
        isNew: !1,
        willInit: !0
      };
      return null != o && "defaults" in o && (d.defaults = o.defaults), new t(void 0, n, d);
    },
    /*!
     * ignore
     */
    e.applyPaths = function (t, e) {
      var r, o, u;
      if (t) for (u = (o = Object.keys(t)).length; u--;) {
        if ("+" !== o[u][0]) {
          var f = t[o[u]];

          if (h(f)) {
            r = !f;
            break;
          }
        }
      }
      var c = [],
          l = [],
          d = [];

      switch (function e(n, i) {
        if (i || (i = ""), -1 !== d.indexOf(n)) return [];
        d.push(n);
        var o = [];
        return n.eachPath(function (n, a) {
          i && (n = i + "." + n);
          var u = E(n, a);

          if (null == u && a.$isMongooseArray && !a.$isMongooseDocumentArray && (u = E(n, a.caster)), null != u && o.push(u), a.schema) {
            var h = e(a.schema, n);
            !1 === r && s(t, n, a.schema, c, h);
          }
        }), d.pop(), o;
      }(e), r) {
        case !0:
          var p,
              y = i(l);

          try {
            for (y.s(); !(p = y.n()).done;) {
              var m = p.value;
              t[m] = 0;
            }
          } catch (t) {
            y.e(t);
          } finally {
            y.f();
          }

          break;

        case !1:
          e && e.paths._id && e.paths._id.options && !1 === e.paths._id.options.select && (t._id = 0);
          var b,
              v = i(c);

          try {
            for (v.s(); !(b = v.n()).done;) {
              var g = b.value;
              t[g] = t[g] || 1;
            }
          } catch (t) {
            v.e(t);
          } finally {
            v.f();
          }

          break;

        case void 0:
          if (null == t) break;

          for (var w = 0, _ = Object.keys(t || {}); w < _.length; w++) {
            var M = _[w];
            M.startsWith("+") && delete t[M];
          }

          var S,
              O = i(l);

          try {
            for (O.s(); !(S = O.n()).done;) {
              var A = S.value;
              t[A] = 0;
            }
          } catch (t) {
            O.e(t);
          } finally {
            O.f();
          }

      }

      function E(e, i) {
        var s = "+" + e,
            u = t && s in t;

        if (u && delete t[s], "boolean" == typeof i.selected) {
          if (u) return delete t[s], void (!1 === r && o.length > 1 && !~o.indexOf(e) && (t[e] = 1));

          for (var h = e.split("."), f = "", d = 0; d < h.length; ++d) {
            if (f += f.length ? "." + h[d] : h[d], -1 !== l.indexOf(f)) return;
          }

          if (!r && a(i, "options.$skipDiscriminatorCheck", !1)) for (var p = "", y = 0; y < h.length; ++y) {
            p += (0 === p.length ? "" : ".") + h[y];
            var m = a(t, p, !1) || a(t, p + ".$", !1);
            if (m && "object" !== n(m)) return;
          }
          return (i.selected ? c : l).push(e), e;
        }
      }
    }, e.handleDeleteWriteOpResult = function (t) {
      return function (e, r) {
        if (e) return t(e);
        var n = Object.assign({}, r.result);
        return null != a(r, "result.n", null) && (n.deletedCount = r.result.n), null != r.deletedCount && (n.deletedCount = r.deletedCount), t(null, n);
      };
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t, e, r, n, i) {
      var o = Object.keys(t).reduce(function (t, r) {
        return t || r.startsWith(e + ".");
      }, !1),
          s = e + "." + r.options.discriminatorKey;
      o || 1 !== i.length || i[0] !== s || n.splice(n.indexOf(s), 1);
    };
  }, function (t, e, r) {
    "use strict";

    function n(t) {
      return (n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    t.exports = function (t) {
      return !!t && ("object" === n(t) || "function" == typeof t) && "function" == typeof t.then;
    };
  }, function (t, e, r) {
    "use strict";

    t.exports = function (t) {
      for (var e = t.split("."), r = "", n = [], i = 0; i < e.length; ++i) {
        r += (r.length > 0 ? "." : "") + e[i], n.push(r);
      }

      return n;
    };
  }, function (t, e, r) {
    "use strict";
    /*!
     * Module dependencies.
     */

    var n = r(14),
        i = r(11).EventEmitter,
        o = r(8),
        s = r(89),
        a = r(18),
        u = o.ValidationError,
        h = r(167),
        f = r(35);

    function c(t, e, r, i, u) {
      if (!(this instanceof c)) return new c(t, e, r, i, u);
      if (f(e) && !e.instanceOfSchema && (e = new s(e)), e = this.schema || e, !this.schema && e.options._id && void 0 === (t = t || {})._id && (t._id = new a()), !e) throw new o.MissingSchemaError();

      for (var l in this.$__setSchema(e), n.call(this, t, r, i, u), h(this, e, {
        decorateDoc: !0
      }), e.methods) {
        this[l] = e.methods[l];
      }

      for (var d in e.statics) {
        this[d] = e.statics[d];
      }
    }
    /*!
     * Inherit from the NodeJS document
     */


    c.prototype = Object.create(n.prototype), c.prototype.constructor = c,
    /*!
     * ignore
     */
    c.events = new i(),
    /*!
     * Browser doc exposes the event emitter API
     */
    c.$emitter = new i(), ["on", "once", "emit", "listeners", "removeListener", "setMaxListeners", "removeAllListeners", "addListener"].forEach(function (t) {
      c[t] = function () {
        return c.$emitter[t].apply(c.$emitter, arguments);
      };
    }),
    /*!
     * Module exports.
     */
    c.ValidationError = u, t.exports = c;
  }]);
});
},{}],"../../model/documents.js":[function(require,module,exports) {
var mongoose = require("mongoose");

var documentSchema = new mongoose.Schema({
  date: {
    type: Date
  },
  description: {
    type: String
  },
  type: {
    type: String
  },
  name: {
    type: String
  },
  doc_link: {
    type: String
  },
  doc_id: {
    type: String
  }
});
var documents = mongoose.model('documents', documentSchema);
module.exports = documents;
},{"mongoose":"../../node_modules/mongoose/dist/browser.umd.js"}],"script.js":[function(require,module,exports) {
"use strict";

require("core-js/modules/es6.array.copy-within");

require("core-js/modules/es6.array.fill");

require("core-js/modules/es6.array.find");

require("core-js/modules/es6.array.find-index");

require("core-js/modules/es6.array.from");

require("core-js/modules/es7.array.includes");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.array.of");

require("core-js/modules/es6.array.sort");

require("core-js/modules/es6.array.species");

require("core-js/modules/es6.date.to-primitive");

require("core-js/modules/es6.function.has-instance");

require("core-js/modules/es6.function.name");

require("core-js/modules/es6.map");

require("core-js/modules/es6.math.acosh");

require("core-js/modules/es6.math.asinh");

require("core-js/modules/es6.math.atanh");

require("core-js/modules/es6.math.cbrt");

require("core-js/modules/es6.math.clz32");

require("core-js/modules/es6.math.cosh");

require("core-js/modules/es6.math.expm1");

require("core-js/modules/es6.math.fround");

require("core-js/modules/es6.math.hypot");

require("core-js/modules/es6.math.imul");

require("core-js/modules/es6.math.log1p");

require("core-js/modules/es6.math.log10");

require("core-js/modules/es6.math.log2");

require("core-js/modules/es6.math.sign");

require("core-js/modules/es6.math.sinh");

require("core-js/modules/es6.math.tanh");

require("core-js/modules/es6.math.trunc");

require("core-js/modules/es6.number.constructor");

require("core-js/modules/es6.number.epsilon");

require("core-js/modules/es6.number.is-finite");

require("core-js/modules/es6.number.is-integer");

require("core-js/modules/es6.number.is-nan");

require("core-js/modules/es6.number.is-safe-integer");

require("core-js/modules/es6.number.max-safe-integer");

require("core-js/modules/es6.number.min-safe-integer");

require("core-js/modules/es6.number.parse-float");

require("core-js/modules/es6.number.parse-int");

require("core-js/modules/es6.object.assign");

require("core-js/modules/es7.object.define-getter");

require("core-js/modules/es7.object.define-setter");

require("core-js/modules/es7.object.entries");

require("core-js/modules/es6.object.freeze");

require("core-js/modules/es6.object.get-own-property-descriptor");

require("core-js/modules/es7.object.get-own-property-descriptors");

require("core-js/modules/es6.object.get-own-property-names");

require("core-js/modules/es6.object.get-prototype-of");

require("core-js/modules/es7.object.lookup-getter");

require("core-js/modules/es7.object.lookup-setter");

require("core-js/modules/es6.object.prevent-extensions");

require("core-js/modules/es6.object.is");

require("core-js/modules/es6.object.is-frozen");

require("core-js/modules/es6.object.is-sealed");

require("core-js/modules/es6.object.is-extensible");

require("core-js/modules/es6.object.keys");

require("core-js/modules/es6.object.seal");

require("core-js/modules/es6.object.set-prototype-of");

require("core-js/modules/es7.object.values");

require("core-js/modules/es6.promise");

require("core-js/modules/es7.promise.finally");

require("core-js/modules/es6.reflect.apply");

require("core-js/modules/es6.reflect.construct");

require("core-js/modules/es6.reflect.define-property");

require("core-js/modules/es6.reflect.delete-property");

require("core-js/modules/es6.reflect.get");

require("core-js/modules/es6.reflect.get-own-property-descriptor");

require("core-js/modules/es6.reflect.get-prototype-of");

require("core-js/modules/es6.reflect.has");

require("core-js/modules/es6.reflect.is-extensible");

require("core-js/modules/es6.reflect.own-keys");

require("core-js/modules/es6.reflect.prevent-extensions");

require("core-js/modules/es6.reflect.set");

require("core-js/modules/es6.reflect.set-prototype-of");

require("core-js/modules/es6.regexp.constructor");

require("core-js/modules/es6.regexp.flags");

require("core-js/modules/es6.regexp.match");

require("core-js/modules/es6.regexp.replace");

require("core-js/modules/es6.regexp.split");

require("core-js/modules/es6.regexp.search");

require("core-js/modules/es6.regexp.to-string");

require("core-js/modules/es6.set");

require("core-js/modules/es6.symbol");

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.string.anchor");

require("core-js/modules/es6.string.big");

require("core-js/modules/es6.string.blink");

require("core-js/modules/es6.string.bold");

require("core-js/modules/es6.string.code-point-at");

require("core-js/modules/es6.string.ends-with");

require("core-js/modules/es6.string.fixed");

require("core-js/modules/es6.string.fontcolor");

require("core-js/modules/es6.string.fontsize");

require("core-js/modules/es6.string.from-code-point");

require("core-js/modules/es6.string.includes");

require("core-js/modules/es6.string.italics");

require("core-js/modules/es6.string.iterator");

require("core-js/modules/es6.string.link");

require("core-js/modules/es7.string.pad-start");

require("core-js/modules/es7.string.pad-end");

require("core-js/modules/es6.string.raw");

require("core-js/modules/es6.string.repeat");

require("core-js/modules/es6.string.small");

require("core-js/modules/es6.string.starts-with");

require("core-js/modules/es6.string.strike");

require("core-js/modules/es6.string.sub");

require("core-js/modules/es6.string.sup");

require("core-js/modules/es6.typed.array-buffer");

require("core-js/modules/es6.typed.int8-array");

require("core-js/modules/es6.typed.uint8-array");

require("core-js/modules/es6.typed.uint8-clamped-array");

require("core-js/modules/es6.typed.int16-array");

require("core-js/modules/es6.typed.uint16-array");

require("core-js/modules/es6.typed.int32-array");

require("core-js/modules/es6.typed.uint32-array");

require("core-js/modules/es6.typed.float32-array");

require("core-js/modules/es6.typed.float64-array");

require("core-js/modules/es6.weak-map");

require("core-js/modules/es6.weak-set");

require("core-js/modules/es7.array.flat-map");

require("core-js/modules/web.timers");

require("core-js/modules/web.immediate");

require("core-js/modules/web.dom.iterable");

require("regenerator-runtime/runtime");

var _axios = _interopRequireDefault(require("axios"));

var _console = require("console");

var _lodash = _interopRequireWildcard(require("lodash"));

var _moment = _interopRequireDefault(require("moment"));

var _util = require("util");

var _documents = _interopRequireDefault(require("../../model/documents"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var updateCollectiondata = function updateCollectiondata(total, dateNow) {
  // console.log(total,"9999999999");
  var collectionObj = new Object();
  collectionObj["id1"] = dateNow; // console.log(total);

  collectionObj["amount"] = total;
  updateCollection(collectionObj);
};

var StudentData =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(student, id) {
    var data, _data, entries;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;

            if (!(id !== "add")) {
              _context.next = 7;
              break;
            }

            _context.next = 4;
            return (0, _axios.default)({
              method: 'PATCH',
              url: "/api/v1/studentInfo/updateStudent/".concat(id),
              data: student
            });

          case 4:
            data = _context.sent;
            _context.next = 10;
            break;

          case 7:
            _context.next = 9;
            return (0, _axios.default)({
              method: 'POST',
              url: "/api/v1/studentInfo/addStudent",
              data: student
            });

          case 9:
            _data = _context.sent;

          case 10:
            location.reload();
            _context.next = 17;
            break;

          case 13:
            _context.prev = 13;
            _context.t0 = _context["catch"](0);
            entries = Object.entries(_context.t0.response.data.err.errors);
            entries.forEach(function (el) {
              if (el[1].path !== "password") {
                window.alert("".concat(el[1].message));
              }
            });

          case 17:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 13]]);
  }));

  return function StudentData(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var updateCollection =
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee2(collectionObj) {
    var updateAmount;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            _context2.next = 3;
            return (0, _axios.default)({
              method: "PATCH",
              url: "/api/v1/collectionInfo",
              data: collectionObj
            });

          case 3:
            updateAmount = _context2.sent;
            _context2.next = 9;
            break;

          case 6:
            _context2.prev = 6;
            _context2.t0 = _context2["catch"](0);
            window.alert(_context2.t0.response.data.message);

          case 9:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[0, 6]]);
  }));

  return function updateCollection(_x3) {
    return _ref2.apply(this, arguments);
  };
}();

if (document.querySelector(".del-doc-school")) {
  var delBtn = document.querySelectorAll(".del-doc-school");
  delBtn.forEach(function (el) {
    el.addEventListener("click",
    /*#__PURE__*/
    function () {
      var _ref3 = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee3(e) {
        var randnum, enteredNum, data;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                // console.log(el);
                randnum = Math.round(Math.random() * 10000) + 100000 * 1;
                enteredNum = prompt("Enter the code ".concat(randnum), "");

                if (!(enteredNum * 1 !== randnum * 1)) {
                  _context3.next = 4;
                  break;
                }

                return _context3.abrupt("return", window.alert("Wrong Code"));

              case 4:
                _context3.prev = 4;
                _context3.next = 7;
                return (0, _axios.default)({
                  method: 'DELETE',
                  url: "/api/v1/documentInfo/deleteDoc/".concat(el.value)
                });

              case 7:
                data = _context3.sent;
                location.reload();
                _context3.next = 14;
                break;

              case 11:
                _context3.prev = 11;
                _context3.t0 = _context3["catch"](4);
                window.alert(_context3.t0.response.data.message);

              case 14:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, null, [[4, 11]]);
      }));

      return function (_x4) {
        return _ref3.apply(this, arguments);
      };
    }());
  });
}

if (document.querySelector("#get-all-form")) document.querySelector("#get-all-form").addEventListener("submit", function (e) {
  e.preventDefault();
  var year = document.getElementById("all-year").value;
  var classSchool = document.getElementById("all-class").value;
  if (year === "") year = false;
  if (classSchool === "") classSchool = false;
  window.open("/studentInfo/get-all/".concat(year, "/").concat(classSchool));
});
if (document.querySelector("#get-one-form")) document.querySelector("#get-one-form").addEventListener("submit", function (e) {
  e.preventDefault();
  var year = document.getElementById("year").value;
  if (year === "") year = false;
  var classSchool = document.getElementById("student-class").value;
  if (classSchool === "") classSchool = false;
  var name = document.getElementById("name").value.toUpperCase();
  if (name === "") name = false;
  window.open("/studentInfo/get-one/".concat(year, "/").concat(classSchool, "/").concat(name, "/false"));
});

if (document.querySelector("#get-student-data")) {
  var months = document.querySelectorAll(".month"); // const monthName = ['january','february','march','april','may','june','july','august','september','october','november','december']

  months.forEach(function (el) {
    if (el.value !== "") el.classList.add('no_change');
  });
}

if (document.querySelector("#student-age")) {
  var student_age = document.querySelector("#student-age");
  var student_dob = document.querySelector("#student-dob");
  student_age.addEventListener("change", function (e) {
    var time_left;
    var year = (new Date(student_age.value) - new Date(student_dob.value)) / (1000 * 60 * 60 * 24 * 365);
    time_left = (new Date(student_age.value) - new Date(student_dob.value)) % (1000 * 60 * 60 * 24 * 365);
    var month = time_left / (1000 * 60 * 60 * 30 * 24); // console.log(new Date(student_age.value)-new Date(student_dob.value));

    alert("Student is ".concat(Math.trunc(year), " Years and ").concat(Math.trunc(month), " Months old"));
  });
}

if (document.querySelector("#submit-all")) document.querySelector("#submit-all").addEventListener("click",
/*#__PURE__*/
function () {
  var _ref4 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee4(e) {
    var classList, year, name, father, studentClassCode, religion, dob, category, gender, studentClass, dateNow, student, feesStudent, data1, fees, months, total, _iterator, _step, el, data, _data2, id;

    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            classList = ["PG", 'LKG', 'UKG', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th'];
            e.preventDefault();
            document.querySelector("#submit-all").value = "Updating";
            year = document.getElementById("student-year").value;
            name = document.getElementById("student-name").value;
            father = document.getElementById("student-father").value;
            studentClassCode = document.getElementById("student-class").value;
            religion = document.getElementById("student-religion").value;
            dob = document.getElementById("student-dob").value;
            category = document.getElementById("student-category").value;
            gender = document.getElementById("student-gender").value;
            studentClass = classList[studentClassCode * 1];
            dateNow = new Date().toLocaleString().split(",")[0];
            dateNow += 'Z';
            student = new Object();
            student.year = year;
            student.leave = !document.getElementById("student-leave").checked;
            student.name = name;
            student.dob = dob;
            student.religion = religion;
            student.category = category;
            student.gender = gender;
            student.class = studentClass;
            student.father_name = father;
            student.class_code = studentClassCode;
            student.roll_no = document.getElementById("student-roll_no").value;
            feesStudent = _lodash.default.cloneDeep(student);
            console.log(student);

            if (!(document.querySelector("#submit-all").name === "add")) {
              _context4.next = 30;
              break;
            }

            return _context4.abrupt("return", StudentData(student, "add"));

          case 30:
            _context4.prev = 30;
            _context4.next = 33;
            return (0, _axios.default)({
              method: "GET",
              url: "/api/v1/collectionInfo/get-fees"
            });

          case 33:
            data1 = _context4.sent;
            _context4.next = 39;
            break;

          case 36:
            _context4.prev = 36;
            _context4.t0 = _context4["catch"](30);
            window.alert(_context4.t0.response.data.message);

          case 39:
            fees = data1.data.fees; // console.log(fees);

            months = document.querySelectorAll(".month"); // const monthName = ['january','february','march','april','may','june','july','august','september','october','november','december']

            total = 0 * 1;
            _iterator = _createForOfIteratorHelper(months);
            _context4.prev = 43;

            _iterator.s();

          case 45:
            if ((_step = _iterator.n()).done) {
              _context4.next = 76;
              break;
            }

            el = _step.value;
            student["".concat(el.name)] = el.value; // // console.log("10");

            if (!(el.classList.contains('no_change') !== true && el.value !== "")) {
              _context4.next = 59;
              break;
            }

            student["".concat(el.name)] = dateNow;
            feesStudent['fees'] = fees[studentClassCode] * 1;
            feesStudent['month'] = el.name;
            feesStudent['date'] = dateNow; // console.log(feesStudent);
            // console.log(Date.now(),dateNow);

            total = total + fees[studentClassCode] * 1;
            _context4.next = 56;
            return (0, _axios.default)({
              method: 'POST',
              url: "/api/v1/studentInfo/feesStudent",
              data: feesStudent
            });

          case 56:
            data = _context4.sent;
            _context4.next = 73;
            break;

          case 59:
            if (!(el.classList.contains('no_change') === true && el.value === "")) {
              _context4.next = 73;
              break;
            }

            feesStudent['fees'] = fees[studentClassCode] * 1;
            feesStudent['month'] = el.name;
            feesStudent['date'] = dateNow; // console.log(Date.now(),dateNow);

            _context4.prev = 63;
            _context4.next = 66;
            return (0, _axios.default)({
              method: 'DELETE',
              url: "/api/v1/studentInfo/feesStudent",
              data: feesStudent
            });

          case 66:
            _data2 = _context4.sent;

            if (_data2.status === 201) {
              total = total - fees[studentClassCode] * 1;
            } // console.log(total);


            _context4.next = 73;
            break;

          case 70:
            _context4.prev = 70;
            _context4.t1 = _context4["catch"](63);
            window.alert(_context4.t1.response.data.message);

          case 73:
            ;

          case 74:
            _context4.next = 45;
            break;

          case 76:
            _context4.next = 81;
            break;

          case 78:
            _context4.prev = 78;
            _context4.t2 = _context4["catch"](43);

            _iterator.e(_context4.t2);

          case 81:
            _context4.prev = 81;

            _iterator.f();

            return _context4.finish(81);

          case 84:
            updateCollectiondata(total, dateNow);
            id = window.location.href.split("/")[5];
            StudentData(student, id);

          case 87:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, null, [[30, 36], [43, 78, 81, 84], [63, 70]]);
  }));

  return function (_x5) {
    return _ref4.apply(this, arguments);
  };
}());

if (document.querySelector(".uploader")) {
  document.querySelector(".uploader").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref5 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee5(e) {
      var form, data;
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              e.preventDefault();
              form = new FormData();
              form.append('description', document.getElementById('desc').value.toLowerCase());
              form.append('type', document.getElementById('type-data').value.toLowerCase());
              form.append('file', document.getElementById('fileUp').files[0]); // console.log(form);

              _context5.prev = 5;
              _context5.next = 8;
              return (0, _axios.default)({
                method: 'POST',
                url: "/api/v1/documentInfo/uploadFile",
                data: form
              });

            case 8:
              data = _context5.sent;
              location.reload();
              _context5.next = 15;
              break;

            case 12:
              _context5.prev = 12;
              _context5.t0 = _context5["catch"](5);
              window.alert(_context5.t0.response.data.message);

            case 15:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, null, [[5, 12]]);
    }));

    return function (_x6) {
      return _ref5.apply(this, arguments);
    };
  }());
}

;

if (document.querySelector(".download-form")) {
  document.querySelector(".download-form").addEventListener("submit", function (e) {
    e.preventDefault();
    var type = document.querySelector("#type").value;
    var date = document.querySelector("#date").value;
    if (type === "") type = "NULL";
    if (date === "") date = "NULL";
    window.open("/documentInfo/list/".concat(type, "/").concat(date));
  });
}

;

if (document.querySelector("#login-form")) {
  document.querySelector("#login-form").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref6 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee6(e) {
      var data, data1;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              e.preventDefault();
              data = new Object();
              data.email = document.querySelector("#email-login").value;
              data.password = document.querySelector("#password-login").value; // console.log(data);

              _context6.prev = 4;
              _context6.next = 7;
              return (0, _axios.default)({
                method: 'POST',
                url: '/api/v1/userInfo/login',
                data: data
              });

            case 7:
              data1 = _context6.sent;
              location.href = "/"; // console.log(data1)

              _context6.next = 14;
              break;

            case 11:
              _context6.prev = 11;
              _context6.t0 = _context6["catch"](4);
              window.alert(_context6.t0.response.data.message);

            case 14:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, null, [[4, 11]]);
    }));

    return function (_x7) {
      return _ref6.apply(this, arguments);
    };
  }());
}

if (document.querySelector(".nav--link--logout")) {
  document.querySelector(".nav--link--logout").addEventListener("click",
  /*#__PURE__*/
  function () {
    var _ref7 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee7(e) {
      var data;
      return regeneratorRuntime.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return (0, _axios.default)({
                method: 'POST',
                url: '/api/v1/userInfo/logout'
              });

            case 2:
              data = _context7.sent;
              window.location.href = '/';

            case 4:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7);
    }));

    return function (_x8) {
      return _ref7.apply(this, arguments);
    };
  }());
}

if (document.querySelector("#excel-form")) {
  document.getElementById("session-check").addEventListener("click", function (e) {
    document.getElementById("session-filter").classList.toggle("invisible");
    document.getElementById("session-filter-label").classList.toggle("invisible");
  });
  document.querySelector("#excel-form-filter").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref8 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee8(e) {
      var excel, data;
      return regeneratorRuntime.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              excel = new Object();
              e.preventDefault();
              excel['session'] = document.getElementById("session-check").checked;
              excel['father'] = document.getElementById("father-check").checked;
              excel['fees'] = document.getElementById("fees-check").checked;
              excel["add_info"] = document.getElementById("add-info-check").checked;
              excel['sessionfilter'] = document.getElementById("session-filter").value;
              excel['classfilter'] = document.getElementById("class-filter").value; // console.log(excel,"***********");

              _context8.next = 10;
              return (0, _axios.default)({
                method: 'POST',
                url: '/excel',
                data: excel
              });

            case 10:
              data = _context8.sent;
              window.open("/users.xlsx");

            case 12:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8);
    }));

    return function (_x9) {
      return _ref8.apply(this, arguments);
    };
  }());
}

if (document.querySelector("#signup-form")) {
  document.querySelector("#signup-form").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref9 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee9(e) {
      var data, data1, entries;
      return regeneratorRuntime.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              e.preventDefault();
              data = new Object();
              data.email = document.querySelector("#email-signup").value;
              data.password = document.querySelector("#password-signup").value;
              data.username = document.querySelector("#username-signup").value;
              data.passwordConfirm = document.querySelector("#passwordConfirm-signup").value; // console.log(data);

              _context9.prev = 6;
              _context9.next = 9;
              return (0, _axios.default)({
                method: 'POST',
                url: '/api/v1/userInfo/signup',
                data: data
              });

            case 9:
              data1 = _context9.sent;
              // console.log(data1);
              if (data1.status == 201) window.location.href = '/';
              _context9.next = 16;
              break;

            case 13:
              _context9.prev = 13;
              _context9.t0 = _context9["catch"](6);
              // console.log(err.response.data);
              if (_context9.t0.response.data.err.code === 11000) window.alert("Email already taken");else {
                entries = Object.entries(_context9.t0.response.data.err.errors);
                entries.forEach(function (el) {
                  if (el[1].path !== "password") {
                    window.alert("".concat(el[1].message));
                  } else {
                    window.alert("Password is shorter than ".concat(el[1].properties.minlength, " characters"));
                  }
                });
              }

            case 16:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9, null, [[6, 13]]);
    }));

    return function (_x10) {
      return _ref9.apply(this, arguments);
    };
  }());
}

if (document.getElementById("fees-record")) {
  var options = document.getElementsByClassName("fee-option"); // console.log(options);

  var _iterator2 = _createForOfIteratorHelper(options),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var el = _step2.value;
      el.addEventListener("click", function (e) {
        if (document.querySelector("#get-by-date-radio").checked === true) {
          document.querySelector("#get-by-date-radio").checked = true;
          document.querySelector("#get-by-month-radio").checked = false;
          document.querySelector(".get-by-date").classList.remove('invisible');
          document.querySelectorAll(".get-by-month").forEach(function (el) {
            return el.classList.add('invisible');
          });
        } else if (document.querySelector("#get-by-month-radio").checked === true) {
          document.querySelector("#get-by-date-radio").checked = false;
          document.querySelector("#get-by-month-radio").checked = true;
          document.querySelectorAll(".get-by-month").forEach(function (el) {
            return el.classList.remove('invisible');
          });
          document.querySelector(".get-by-date").classList.add('invisible');
        }
      });
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  ;
  document.getElementById("fees-record").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref10 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee10(e) {
      var start_class, end_class, full_data, classList, objs, i, feedesc, start_date, end_date, dates, classes, pr, url, _objs, start_month, end_month, month_list, _i, _feedesc, session, end_session, months_limit, _start_date, _end_date, _dates, _classes, _pr;

      return regeneratorRuntime.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              e.preventDefault();
              start_class = document.querySelector("#class-from").value;
              end_class = document.querySelector("#class-to").value;
              full_data = true;
              classList = ["PG", 'LKG', 'UKG', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th']; // console.log(start_class,end_class);

              if (document.querySelector(".get-by-month").classList.contains('invisible') === true) {
                objs = [];

                for (i = start_class; i <= end_class; i++) {
                  feedesc = new Object();
                  feedesc["class"] = classList[i * 1];
                  feedesc["total"] = 0 * 1;
                  if (full_data) feedesc["data"] = [];
                  objs.push(feedesc);
                } // console.log(objs);


                start_date = document.querySelector("#date-from").value;
                end_date = document.querySelector("#date-to").value;
                dates = new Object();
                dates["start_date"] = start_date;
                dates["end_date"] = end_date;
                classes = new Object();
                classes["maxm"] = end_class;
                classes["minm"] = start_class;
                objs.push(dates);
                objs.push(classes);
                pr = JSON.stringify(objs);
                url = new URL("http://".concat(window.location.host, "/studentInfo/displayFeeRecord")); // // console.log(window.location.host);

                url.searchParams.set('data', pr); // console.log(url.search);

                window.location.href = "".concat(url);
              } else {
                _objs = [];
                start_month = document.querySelector("#month-from").value;
                end_month = document.querySelector("#month-to").value;
                month_list = ["April", "May", "June", "July", "August", "September", "October", "November", "December", "January", "February", "March"];

                for (_i = start_month; _i <= end_month; _i++) {
                  _feedesc = new Object();
                  _feedesc["month"] = month_list[_i - 1];
                  _feedesc["total"] = 0 * 1;
                  if (full_data) _feedesc["data"] = [];

                  _objs.push(_feedesc);
                }

                session = document.getElementById("fee-session").value; // console.log(session);

                end_session = session;
                months_limit = new Object();
                months_limit["maxm"] = end_month;
                months_limit["minm"] = start_month;
                months_limit['session'] = session;

                if (end_month >= 10) {
                  end_month = end_month - 10;
                  end_session = end_session * 1 + 1;
                }

                _start_date = new Date(session, start_month * 1 + 2, 1); // console.log(start_date);

                _end_date = new Date(end_session, end_month * 1 + 1, 0); // console.log(end_date)

                _dates = new Object();
                _dates["start_date"] = _start_date;
                _dates["end_date"] = _end_date;
                _classes = new Object();
                _classes["maxm"] = end_class;
                _classes["minm"] = start_class;

                _objs.push(months_limit);

                _objs.push(_dates);

                _objs.push(_classes);

                _pr = JSON.stringify(_objs); // console.log(objs);

                url = new URL("http://".concat(window.location.host, "/studentInfo/displayFeeRecord")); // console.log(window.location.host);

                url.searchParams.set('data', _pr); // console.log(url.search);

                window.location.href = "".concat(url);
              }

            case 6:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10);
    }));

    return function (_x11) {
      return _ref10.apply(this, arguments);
    };
  }());
}

if (document.querySelector("#get-sr-main")) {
  document.querySelector("#get-sr-main").addEventListener("submit", function (e) {
    e.preventDefault();
    var section = document.querySelector("#sr-main-section").value;
    var name = document.querySelector("#sr-main-name").value.toUpperCase();
    var srno = document.querySelector("#sr-main-srno").value;
    if (name === "") name = "NULL";
    if (srno === "") srno = "NULL";
    window.location.href = "/studentInfo/sr-find/".concat(section, "/").concat(name, "/").concat(srno);
  });
}

if (document.querySelector("#get-student-sr-data")) {
  document.querySelector("#get-student-sr-data").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref11 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee11(e) {
      var objs, father, mother, address, obj1, _obj, _obj2, _obj3, _obj4, _obj5, _obj6, _obj7, _obj8, _obj9, _obj10, phone_nos, data, _data3;

      return regeneratorRuntime.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              e.preventDefault();
              objs = new Object();
              objs["sr"] = document.querySelector("#student-sr").value;
              if (document.querySelector("#student-sr_no")) objs["sr_no"] = document.querySelector("#student-sr_no").value;
              if (document.querySelector("#student-prev_sr_no")) objs["prev_sr_no"] = document.querySelector("#student-prev_sr_no").value;
              objs["name"] = document.querySelector("#student-sr-name").value;
              objs["dob"] = document.querySelector("#student-sr-dob").value;
              objs["dob_in_word"] = document.querySelector("#student-sr-dob_in_word").value;
              objs["caste"] = document.querySelector("#student-sr-caste").value;
              objs["religion"] = document.querySelector("#student-sr-religion").value;
              objs["nationality"] = document.querySelector("#student-sr-nationality").value;
              objs["category"] = document.querySelector("#student-sr-category").value;
              objs["occupation"] = document.querySelector("#student-sr-occupation").value;
              objs["sex"] = document.querySelector("#student-sr-sex").value;
              objs["last_school"] = document.querySelector("#student-sr-last_school").value;
              objs["class"] = document.querySelector("#student-sr-class").value;
              objs["date_of_admission"] = document.querySelector("#student-sr-date_of_admission").value;
              if (objs["sr"] === "PG") objs["sr"] = "PG";
              if (objs["sr"] === "PRE PRIMARY") objs["sr"] = "LKG TO UKG";
              if (objs["sr"] === "PRIMARY") objs["sr"] = "1 TO 5";
              if (objs["sr"] === "JUNIOR HIGHSCHOOL") objs["sr"] = "1 TO 8";
              father = new Object();
              mother = new Object();
              address = new Object();
              father.name = document.querySelector("#student-sr-father-name").value;
              mother.name = document.querySelector("#student-sr-mother-name").value;
              father.age = document.querySelector("#student-sr-father-age").value;
              mother.age = document.querySelector("#student-sr-mother-age").value;
              if (objs["prev_sr_no"] === "null") objs["prev_sr_no"] = "";
              if (father.age === "null") father.age = "";
              if (mother.age === "null") mother.age = "";
              father.qualification = document.querySelector("#student-sr-father-qualification").value;
              mother.qualification = document.querySelector("#student-sr-mother-qualification").value;
              father.occupation = document.querySelector("#student-sr-father-occupation").value;
              mother.occupation = document.querySelector("#student-sr-mother-occupation").value;
              address.permanent = document.querySelector("#student-sr-address-permanent").value;
              address.local = document.querySelector("#student-sr-address-local").value;
              address.work = document.querySelector("#student-sr-address-work").value;
              objs["father"] = father;
              objs["mother"] = mother;
              objs["address"] = address;

              if (document.querySelector("#student-sr-pg_admission")) {
                obj1 = new Object();
                obj1["admission"] = document.querySelector("#student-sr-pg_admission").value;
                obj1["passing"] = document.querySelector("#student-sr-pg_passing").value;
                objs["pg"] = obj1;
              }

              if (document.querySelector("#student-sr-lkg_admission")) {
                _obj = new Object();
                _obj["admission"] = document.querySelector("#student-sr-lkg_admission").value;
                _obj["passing"] = document.querySelector("#student-sr-lkg_passing").value;
                objs["lkg"] = _obj;
              }

              if (document.querySelector("#student-sr-ukg_admission")) {
                _obj2 = new Object();
                _obj2["admission"] = document.querySelector("#student-sr-ukg_admission").value;
                _obj2["passing"] = document.querySelector("#student-sr-ukg_passing").value;
                objs["ukg"] = _obj2;
              }

              if (document.querySelector("#student-sr-one_admission")) {
                _obj3 = new Object();
                _obj3["admission"] = document.querySelector("#student-sr-one_admission").value;
                _obj3["passing"] = document.querySelector("#student-sr-one_passing").value;
                objs["one"] = _obj3;
              }

              if (document.querySelector("#student-sr-two_admission")) {
                _obj4 = new Object();
                _obj4["admission"] = document.querySelector("#student-sr-two_admission").value;
                _obj4["passing"] = document.querySelector("#student-sr-two_passing").value;
                objs["two"] = _obj4;
              }

              if (document.querySelector("#student-sr-three_admission")) {
                _obj5 = new Object();
                _obj5["admission"] = document.querySelector("#student-sr-three_admission").value;
                _obj5["passing"] = document.querySelector("#student-sr-three_passing").value;
                objs["three"] = _obj5;
              }

              if (document.querySelector("#student-sr-four_admission")) {
                _obj6 = new Object();
                _obj6["admission"] = document.querySelector("#student-sr-four_admission").value;
                _obj6["passing"] = document.querySelector("#student-sr-four_passing").value;
                objs["four"] = _obj6;
              }

              if (document.querySelector("#student-sr-five_admission")) {
                _obj7 = new Object();
                _obj7["admission"] = document.querySelector("#student-sr-five_admission").value;
                _obj7["passing"] = document.querySelector("#student-sr-five_passing").value;
                objs["five"] = _obj7;
              }

              if (document.querySelector("#student-sr-six_admission")) {
                _obj8 = new Object();
                _obj8["admission"] = document.querySelector("#student-sr-six_admission").value;
                _obj8["passing"] = document.querySelector("#student-sr-six_passing").value;
                objs["six"] = _obj8;
              }

              if (document.querySelector("#student-sr-seven_admission")) {
                _obj9 = new Object();
                _obj9["admission"] = document.querySelector("#student-sr-seven_admission").value;
                _obj9["passing"] = document.querySelector("#student-sr-seven_passing").value;
                objs["seven"] = _obj9;
              }

              if (document.querySelector("#student-sr-eight_admission")) {
                _obj10 = new Object();
                _obj10["admission"] = document.querySelector("#student-sr-eight_admission").value;
                _obj10["passing"] = document.querySelector("#student-sr-eight_passing").value;
                objs["eight"] = _obj10;
              }

              phone_nos = [];
              phone_nos.push(document.querySelector("#student-sr-phone_no1").value);
              phone_nos.push(document.querySelector("#student-sr-phone_no2").value);
              objs["phone_number"] = phone_nos;
              objs["whatsapp_number"] = document.querySelector("#student-sr-whatsapp_no").value;
              objs["last_class"] = document.querySelector("#student-sr-last_class").value;
              objs["leave_date"] = document.querySelector("#student-sr-leave_date").value;
              objs["remark"] = document.querySelector("#student-sr-remark").value;
              objs["leave_reason"] = document.querySelector("#student-sr-leave_reason").value;
              objs["brother_sister"] = document.querySelector("#student-sr-brother_sister").value;
              console.log(objs);

              if (!document.querySelector("#get-student-sr-data").classList.contains("sr-update")) {
                _context11.next = 74;
                break;
              }

              _context11.prev = 64;
              _context11.next = 67;
              return (0, _axios.default)({
                method: 'PATCH',
                url: "/api/v1/studentInfo/update-sr/".concat(objs.sr.toLowerCase().split(" ").join(""), "/").concat(window.location.href.split("/")[6]),
                data: objs
              });

            case 67:
              data = _context11.sent;
              // console.log(data)
              setTimeout(function () {// location.reload();
              }, 500);
              _context11.next = 74;
              break;

            case 71:
              _context11.prev = 71;
              _context11.t0 = _context11["catch"](64);
              window.alert(_context11.t0.response.data.message);

            case 74:
              if (!document.querySelector("#get-student-sr-data").classList.contains("sr-add")) {
                _context11.next = 85;
                break;
              }

              _context11.prev = 75;
              _context11.next = 78;
              return (0, _axios.default)({
                method: 'POST',
                url: "/api/v1/studentInfo/add-sr",
                data: objs
              });

            case 78:
              _data3 = _context11.sent;
              location.reload();
              _context11.next = 85;
              break;

            case 82:
              _context11.prev = 82;
              _context11.t1 = _context11["catch"](75);
              window.alert(_context11.t1.response.data.message);

            case 85:
            case "end":
              return _context11.stop();
          }
        }
      }, _callee11, null, [[64, 71], [75, 82]]);
    }));

    return function (_x12) {
      return _ref11.apply(this, arguments);
    };
  }());
}

if (document.querySelector(".student-sr-options")) {
  var prePrimary = document.querySelectorAll(".pre_primary");
  var primary = document.querySelectorAll(".primary");
  var upperPrimary = document.querySelectorAll(".upper_primary");
  var playGroup = document.querySelectorAll(".play_group"); // console.log(prePrimary);

  document.querySelector(".student-sr-options").addEventListener("change", function (e) {
    if (document.querySelector(".student-sr-options").value === "PG") {
      prePrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
      playGroup.forEach(function (el) {
        el.classList.remove("invisible");
      });
      primary.forEach(function (el) {
        el.classList.add("invisible");
      });
      upperPrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
    }

    if (document.querySelector(".student-sr-options").value === "LKG TO UKG") {
      prePrimary.forEach(function (el) {
        el.classList.remove("invisible");
      });
      playGroup.forEach(function (el) {
        el.classList.add("invisible");
      });
      primary.forEach(function (el) {
        el.classList.add("invisible");
      });
      upperPrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
    }

    if (document.querySelector(".student-sr-options").value === "1 TO 5") {
      prePrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
      playGroup.forEach(function (el) {
        el.classList.add("invisible");
      });
      primary.forEach(function (el) {
        el.classList.remove("invisible");
      });
      upperPrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
    }

    if (document.querySelector(".student-sr-options").value === "6 TO 8") {
      prePrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
      playGroup.forEach(function (el) {
        el.classList.add("invisible");
      });
      primary.forEach(function (el) {
        el.classList.add("invisible");
      });
      upperPrimary.forEach(function (el) {
        el.classList.remove("invisible");
      });
    }
  });
}

if (document.querySelector("#set-fees-form")) {
  document.querySelector("#set-fees-form").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref12 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee12(e) {
      var obj, data;
      return regeneratorRuntime.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              e.preventDefault();
              obj = new Object();
              obj["0"] = document.querySelector("#fees-pg").value;
              obj["1"] = document.querySelector("#fees-lkg").value;
              obj["2"] = document.querySelector("#fees-ukg").value;
              obj["3"] = document.querySelector("#fees-one").value;
              obj["4"] = document.querySelector("#fees-two").value;
              obj["5"] = document.querySelector("#fees-three").value;
              obj["6"] = document.querySelector("#fees-four").value;
              obj["7"] = document.querySelector("#fees-five").value;
              obj["8"] = document.querySelector("#fees-six").value;
              obj["9"] = document.querySelector("#fees-seven").value;
              obj["10"] = document.querySelector("#fees-eight").value;
              _context12.prev = 13;
              _context12.next = 16;
              return (0, _axios.default)({
                method: "POST",
                url: "/api/v1/collectionInfo/fees-update",
                data: obj
              });

            case 16:
              data = _context12.sent;
              // console.log(data);
              location.reload();
              _context12.next = 23;
              break;

            case 20:
              _context12.prev = 20;
              _context12.t0 = _context12["catch"](13);
              window.alert(_context12.t0.response.data.message);

            case 23:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12, null, [[13, 20]]);
    }));

    return function (_x13) {
      return _ref12.apply(this, arguments);
    };
  }());
}

if (document.querySelector("#promote-student-fee")) {
  var click_ct = 0;
  document.querySelector("#promote-student-fee").addEventListener("click",
  /*#__PURE__*/
  _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee13() {
    var randnum, enteredNum, excel, data;
    return regeneratorRuntime.wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            randnum = Math.round(Math.random() * 10000) + 100000 * 1;
            enteredNum = prompt("Enter the code ".concat(randnum), "");
            excel = new Object();
            excel["promote"] = 1;
            _context13.next = 6;
            return (0, _axios.default)({
              method: 'POST',
              url: '/excel',
              data: excel
            });

          case 6:
            window.open("/users.xlsx");

            if (!(enteredNum * 1 !== randnum * 1)) {
              _context13.next = 9;
              break;
            }

            return _context13.abrupt("return", window.alert("Wrong Code"));

          case 9:
            _context13.next = 11;
            return (0, _axios.default)({
              method: 'POST',
              url: "/api/v1/studentInfo/promote-student-fees/".concat(new Date().getFullYear() * 1 - 1)
            });

          case 11:
            data = _context13.sent;
            if (data.status === 201) window.alert("All Students Promoted ð¥³ð¥³");

          case 13:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13);
  })));
}

if (document.querySelector("#promote-form")) {
  var promoteNext = document.querySelectorAll(".promote-next-message");
  var promoteClass = document.querySelector("#promote-class");
  var promoteSr = document.querySelector("#promote-sr");

  var _prePrimary = document.querySelectorAll(".pre_primary");

  var _primary = document.querySelectorAll(".primary");

  var _upperPrimary = document.querySelectorAll(".upper_primary");

  var _playGroup = document.querySelectorAll(".play_group");

  promoteSr.addEventListener("change", function () {
    if (promoteSr.value === "PG") {
      _playGroup.forEach(function (el) {
        el.classList.remove("invisible");
      });

      _prePrimary.forEach(function (el) {
        el.classList.remove("invisible");
      });

      _primary.forEach(function (el) {
        el.classList.add("invisible");
      });

      _upperPrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
    }

    if (promoteSr.value === "LKG TO UKG") {
      _playGroup.forEach(function (el) {
        el.classList.add("invisible");
      });

      _prePrimary.forEach(function (el) {
        el.classList.remove("invisible");
      });

      _primary.forEach(function (el) {
        el.classList.add("invisible");
      });

      _upperPrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
    }

    if (promoteSr.value === "1 TO 5") {
      _playGroup.forEach(function (el) {
        el.classList.add("invisible");
      });

      _prePrimary.forEach(function (el) {
        el.classList.add("invisible");
      });

      _primary.forEach(function (el) {
        el.classList.remove("invisible");
      });

      _upperPrimary.forEach(function (el) {
        el.classList.add("invisible");
      });
    }

    if (promoteSr.value === "6 TO 8") {
      _playGroup.forEach(function (el) {
        el.classList.add("invisible");
      });

      _prePrimary.forEach(function (el) {
        el.classList.add("invisible");
      });

      _primary.forEach(function (el) {
        el.classList.add("invisible");
      });

      _upperPrimary.forEach(function (el) {
        el.classList.remove("invisible");
      });
    }
  });
  document.querySelector("#promote-class").addEventListener("change", function () {
    var curr = document.querySelector("#promote-class").value;
    console.log(curr);

    if (curr === "ukg" || curr === "five" || curr === "eight" || curr === "pg") {
      console.log("ll");

      var _iterator3 = _createForOfIteratorHelper(promoteNext),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _el = _step3.value;

          _el.classList.remove("invisible");
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    } else {
      var _iterator4 = _createForOfIteratorHelper(promoteNext),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _el2 = _step4.value;

          _el2.classList.add("invisible");
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
  });
  document.querySelector("#promote-form").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref14 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee14(e) {
      var promoteSr, promoteClass, promotePassingDate, promoteNextAdmissionDate, promotePassingMessage, data;
      return regeneratorRuntime.wrap(function _callee14$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              e.preventDefault();
              window.open("/studentInfo/sr-excel");
              promoteSr = document.querySelector("#promote-sr").value;
              promoteClass = document.querySelector("#promote-class").value;
              promotePassingDate = document.querySelector("#promote-passing-date").value;
              promoteNextAdmissionDate = document.querySelector("#promote-next-admission-date").value;
              if (document.querySelector("#promote-passing-message")) promotePassingMessage = document.querySelector("#promote-passing-message").value;
              if (promotePassingMessage === "") promotePassingMessage = "Passed Class ".concat(promoteClass.toUpperCase());
              _context14.prev = 8;
              _context14.next = 11;
              return (0, _axios.default)({
                method: "POST",
                url: "/api/v1/studentInfo/promote-student/".concat(promoteSr, "/").concat(promoteClass, "/").concat(promotePassingMessage, "/").concat(promotePassingDate, "/").concat(promoteNextAdmissionDate)
              });

            case 11:
              data = _context14.sent;
              // console.log(data.data);
              location.reload();
              _context14.next = 18;
              break;

            case 15:
              _context14.prev = 15;
              _context14.t0 = _context14["catch"](8);
              window.alert(_context14.t0.response.data.message);

            case 18:
            case "end":
              return _context14.stop();
          }
        }
      }, _callee14, null, [[8, 15]]);
    }));

    return function (_x14) {
      return _ref14.apply(this, arguments);
    };
  }());
}

if (document.querySelector(".upload-pic-btn")) {
  document.querySelector(".upload-pic-btn").addEventListener("click",
  /*#__PURE__*/
  function () {
    var _ref15 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee15(e) {
      var sr_name, formPic, data;
      return regeneratorRuntime.wrap(function _callee15$(_context15) {
        while (1) {
          switch (_context15.prev = _context15.next) {
            case 0:
              document.querySelector(".upload-pic-btn").style.padding = "0.2rem";
              document.querySelector(".upload-pic-btn").style.margin = "0.8rem auto 0.8rem auto";
              setTimeout(function () {
                document.querySelector(".upload-pic-btn").style.padding = "0.5rem";
                document.querySelector(".upload-pic-btn").style.margin = "0.5rem auto";
              }, 1);
              sr_name = document.getElementById("student-sr").value;
              if (sr_name === "PG") sr_name = "PG";
              if (sr_name === "PRE PRIMARY") sr_name = "LKG TO UKG";
              if (sr_name === "PRIMARY") sr_name = "1 TO 5";
              if (sr_name === "JUNIOR HIGHSCHOOL") sr_name = "1 TO 8";
              formPic = new FormData();
              formPic.append('sr', sr_name);
              formPic.append('student_name', document.querySelector("#student-sr-name").value);
              formPic.append('student_id', document.getElementById("student-sr-id").textContent);
              formPic.append('pic', document.getElementById('picUp').files[0]); // console.log(formPic);

              _context15.prev = 13;
              _context15.next = 16;
              return (0, _axios.default)({
                method: "POST",
                url: "/api/v1/documentInfo/uploadPic",
                data: formPic
              });

            case 16:
              data = _context15.sent;
              location.reload();
              _context15.next = 23;
              break;

            case 20:
              _context15.prev = 20;
              _context15.t0 = _context15["catch"](13);
              window.alert(_context15.t0.response.data.message);

            case 23:
            case "end":
              return _context15.stop();
          }
        }
      }, _callee15, null, [[13, 20]]);
    }));

    return function (_x15) {
      return _ref15.apply(this, arguments);
    };
  }());
}

if (document.querySelector("#document-upload-form")) {
  document.querySelector("#document-upload-form").addEventListener("submit",
  /*#__PURE__*/
  function () {
    var _ref16 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee16(e) {
      var formDoc, sr_name, data;
      return regeneratorRuntime.wrap(function _callee16$(_context16) {
        while (1) {
          switch (_context16.prev = _context16.next) {
            case 0:
              e.preventDefault();
              formDoc = new FormData();
              sr_name = document.getElementById("student-sr").value;
              if (sr_name === "PG") sr_name = "PG";
              if (sr_name === "PRE PRIMARY") sr_name = "LKG TO UKG";
              if (sr_name === "PRIMARY") sr_name = "1 TO 5";
              if (sr_name === "JUNIOR HIGHSCHOOL") sr_name = "1 TO 8";
              formDoc.append('sr', sr_name);
              formDoc.append('student_id', document.getElementById("student-sr-id").textContent);
              formDoc.append('desc', document.querySelector("#upload-desc").value);
              formDoc.append('student_name', document.querySelector("#student-sr-name").value);
              formDoc.append('doc', document.querySelector("#upload-doc").files[0]);
              _context16.prev = 12;
              _context16.next = 15;
              return (0, _axios.default)({
                method: 'POST',
                url: '/api/v1/documentInfo/uploadDoc',
                data: formDoc
              });

            case 15:
              data = _context16.sent;
              location.reload();
              _context16.next = 22;
              break;

            case 19:
              _context16.prev = 19;
              _context16.t0 = _context16["catch"](12);
              window.alert(_context16.t0.response.data.message);

            case 22:
            case "end":
              return _context16.stop();
          }
        }
      }, _callee16, null, [[12, 19]]);
    }));

    return function (_x16) {
      return _ref16.apply(this, arguments);
    };
  }());
}

if (document.querySelector(".del-doc")) {
  document.querySelectorAll(".del-doc").forEach(function (el) {
    el.addEventListener("click",
    /*#__PURE__*/
    function () {
      var _ref17 = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee17(e) {
        var obj, randnum, enteredNum, sr_name, data;
        return regeneratorRuntime.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                obj = new Object(); // console.log(el);

                randnum = Math.round(Math.random() * 10000) + 100000 * 1;
                enteredNum = prompt("Enter the code ".concat(randnum), "");

                if (!(enteredNum * 1 !== randnum * 1)) {
                  _context17.next = 5;
                  break;
                }

                return _context17.abrupt("return", window.alert("Wrong Code"));

              case 5:
                sr_name = document.getElementById("student-sr").value;
                if (sr_name === "PG") sr_name = "PG";
                if (sr_name === "PRE PRIMARY") sr_name = "LKG TO UKG";
                if (sr_name === "PRIMARY") sr_name = "1 TO 5";
                if (sr_name === "JUNIOR HIGHSCHOOL") sr_name = "1 TO 8";
                obj.doc_name = el.name;
                obj.doc_id = el.id;
                obj.student_sr = sr_name;
                obj.student_id = document.querySelector("#student-sr-id").textContent; // console.log(obj);

                _context17.prev = 14;
                _context17.next = 17;
                return (0, _axios.default)({
                  method: "DELETE",
                  url: "/api/v1/documentInfo/deleteDoc",
                  data: obj
                });

              case 17:
                data = _context17.sent;
                location.reload();
                _context17.next = 24;
                break;

              case 21:
                _context17.prev = 21;
                _context17.t0 = _context17["catch"](14);
                window.alert(_context17.t0.response.data.message);

              case 24:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, null, [[14, 21]]);
      }));

      return function (_x17) {
        return _ref17.apply(this, arguments);
      };
    }());
  });
}

if (document.querySelector("#del-sr-record")) {
  document.querySelector("#del-sr-record").addEventListener("click",
  /*#__PURE__*/
  function () {
    var _ref18 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee18(e) {
      var randnum, enteredNum, data;
      return regeneratorRuntime.wrap(function _callee18$(_context18) {
        while (1) {
          switch (_context18.prev = _context18.next) {
            case 0:
              e.preventDefault();
              randnum = Math.round(Math.random() * 10000) + 100000 * 1;
              enteredNum = prompt("Enter the code ".concat(randnum), "");

              if (!(enteredNum * 1 !== randnum * 1)) {
                _context18.next = 5;
                break;
              }

              return _context18.abrupt("return", window.alert("Wrong Code"));

            case 5:
              _context18.next = 7;
              return (0, _axios.default)({
                method: "DELETE",
                url: "".concat(document.querySelector("#del-sr-record").href)
              });

            case 7:
              data = _context18.sent;
              console.log(data);
              window.location.href = "/studentInfo/sr-main";

            case 10:
            case "end":
              return _context18.stop();
          }
        }
      }, _callee18);
    }));

    return function (_x18) {
      return _ref18.apply(this, arguments);
    };
  }());
}

if (document.querySelector("#update-me")) {
  document.querySelector("#update-me-submit").addEventListener("click",
  /*#__PURE__*/
  function () {
    var _ref19 = _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee19(e) {
      var obj, data, entries;
      return regeneratorRuntime.wrap(function _callee19$(_context19) {
        while (1) {
          switch (_context19.prev = _context19.next) {
            case 0:
              e.preventDefault();
              obj = new Object();
              obj.username = document.querySelector("#user_name").value;
              obj.email = document.querySelector("#user_email").value;
              obj.password = document.querySelector("#user_password").value;
              obj.newPassword = document.querySelector("#user_new_password").value;
              obj.confirmNewPassword = document.querySelector("#user_confirm_new_password").value;
              _context19.prev = 7;
              _context19.next = 10;
              return (0, _axios.default)({
                method: 'POST',
                url: '/api/v1/userInfo/updateMe',
                data: obj
              });

            case 10:
              data = _context19.sent;
              console.log(data);
              if (data.data.status === 201) window.reload();
              _context19.next = 24;
              break;

            case 15:
              _context19.prev = 15;
              _context19.t0 = _context19["catch"](7);
              console.log(data);
              console.log(_context19.t0.response);

              if (_context19.t0.response.data.err.errors) {
                _context19.next = 22;
                break;
              }

              window.alert(_context19.t0.response.data.message);
              return _context19.abrupt("return");

            case 22:
              entries = Object.entries(_context19.t0.response.data.err.errors);
              entries.forEach(function (el) {
                if (el[1].path !== "password") {
                  window.alert("".concat(el[1].message));
                } else {
                  window.alert("Password is shorter than ".concat(el[1].properties.minlength, " characters"));
                }
              });

            case 24:
            case "end":
              return _context19.stop();
          }
        }
      }, _callee19, null, [[7, 15]]);
    }));

    return function (_x19) {
      return _ref19.apply(this, arguments);
    };
  }());
}
},{"core-js/modules/es6.array.copy-within":"../../node_modules/core-js/modules/es6.array.copy-within.js","core-js/modules/es6.array.fill":"../../node_modules/core-js/modules/es6.array.fill.js","core-js/modules/es6.array.find":"../../node_modules/core-js/modules/es6.array.find.js","core-js/modules/es6.array.find-index":"../../node_modules/core-js/modules/es6.array.find-index.js","core-js/modules/es6.array.from":"../../node_modules/core-js/modules/es6.array.from.js","core-js/modules/es7.array.includes":"../../node_modules/core-js/modules/es7.array.includes.js","core-js/modules/es6.array.iterator":"../../node_modules/core-js/modules/es6.array.iterator.js","core-js/modules/es6.array.of":"../../node_modules/core-js/modules/es6.array.of.js","core-js/modules/es6.array.sort":"../../node_modules/core-js/modules/es6.array.sort.js","core-js/modules/es6.array.species":"../../node_modules/core-js/modules/es6.array.species.js","core-js/modules/es6.date.to-primitive":"../../node_modules/core-js/modules/es6.date.to-primitive.js","core-js/modules/es6.function.has-instance":"../../node_modules/core-js/modules/es6.function.has-instance.js","core-js/modules/es6.function.name":"../../node_modules/core-js/modules/es6.function.name.js","core-js/modules/es6.map":"../../node_modules/core-js/modules/es6.map.js","core-js/modules/es6.math.acosh":"../../node_modules/core-js/modules/es6.math.acosh.js","core-js/modules/es6.math.asinh":"../../node_modules/core-js/modules/es6.math.asinh.js","core-js/modules/es6.math.atanh":"../../node_modules/core-js/modules/es6.math.atanh.js","core-js/modules/es6.math.cbrt":"../../node_modules/core-js/modules/es6.math.cbrt.js","core-js/modules/es6.math.clz32":"../../node_modules/core-js/modules/es6.math.clz32.js","core-js/modules/es6.math.cosh":"../../node_modules/core-js/modules/es6.math.cosh.js","core-js/modules/es6.math.expm1":"../../node_modules/core-js/modules/es6.math.expm1.js","core-js/modules/es6.math.fround":"../../node_modules/core-js/modules/es6.math.fround.js","core-js/modules/es6.math.hypot":"../../node_modules/core-js/modules/es6.math.hypot.js","core-js/modules/es6.math.imul":"../../node_modules/core-js/modules/es6.math.imul.js","core-js/modules/es6.math.log1p":"../../node_modules/core-js/modules/es6.math.log1p.js","core-js/modules/es6.math.log10":"../../node_modules/core-js/modules/es6.math.log10.js","core-js/modules/es6.math.log2":"../../node_modules/core-js/modules/es6.math.log2.js","core-js/modules/es6.math.sign":"../../node_modules/core-js/modules/es6.math.sign.js","core-js/modules/es6.math.sinh":"../../node_modules/core-js/modules/es6.math.sinh.js","core-js/modules/es6.math.tanh":"../../node_modules/core-js/modules/es6.math.tanh.js","core-js/modules/es6.math.trunc":"../../node_modules/core-js/modules/es6.math.trunc.js","core-js/modules/es6.number.constructor":"../../node_modules/core-js/modules/es6.number.constructor.js","core-js/modules/es6.number.epsilon":"../../node_modules/core-js/modules/es6.number.epsilon.js","core-js/modules/es6.number.is-finite":"../../node_modules/core-js/modules/es6.number.is-finite.js","core-js/modules/es6.number.is-integer":"../../node_modules/core-js/modules/es6.number.is-integer.js","core-js/modules/es6.number.is-nan":"../../node_modules/core-js/modules/es6.number.is-nan.js","core-js/modules/es6.number.is-safe-integer":"../../node_modules/core-js/modules/es6.number.is-safe-integer.js","core-js/modules/es6.number.max-safe-integer":"../../node_modules/core-js/modules/es6.number.max-safe-integer.js","core-js/modules/es6.number.min-safe-integer":"../../node_modules/core-js/modules/es6.number.min-safe-integer.js","core-js/modules/es6.number.parse-float":"../../node_modules/core-js/modules/es6.number.parse-float.js","core-js/modules/es6.number.parse-int":"../../node_modules/core-js/modules/es6.number.parse-int.js","core-js/modules/es6.object.assign":"../../node_modules/core-js/modules/es6.object.assign.js","core-js/modules/es7.object.define-getter":"../../node_modules/core-js/modules/es7.object.define-getter.js","core-js/modules/es7.object.define-setter":"../../node_modules/core-js/modules/es7.object.define-setter.js","core-js/modules/es7.object.entries":"../../node_modules/core-js/modules/es7.object.entries.js","core-js/modules/es6.object.freeze":"../../node_modules/core-js/modules/es6.object.freeze.js","core-js/modules/es6.object.get-own-property-descriptor":"../../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","core-js/modules/es7.object.get-own-property-descriptors":"../../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","core-js/modules/es6.object.get-own-property-names":"../../node_modules/core-js/modules/es6.object.get-own-property-names.js","core-js/modules/es6.object.get-prototype-of":"../../node_modules/core-js/modules/es6.object.get-prototype-of.js","core-js/modules/es7.object.lookup-getter":"../../node_modules/core-js/modules/es7.object.lookup-getter.js","core-js/modules/es7.object.lookup-setter":"../../node_modules/core-js/modules/es7.object.lookup-setter.js","core-js/modules/es6.object.prevent-extensions":"../../node_modules/core-js/modules/es6.object.prevent-extensions.js","core-js/modules/es6.object.is":"../../node_modules/core-js/modules/es6.object.is.js","core-js/modules/es6.object.is-frozen":"../../node_modules/core-js/modules/es6.object.is-frozen.js","core-js/modules/es6.object.is-sealed":"../../node_modules/core-js/modules/es6.object.is-sealed.js","core-js/modules/es6.object.is-extensible":"../../node_modules/core-js/modules/es6.object.is-extensible.js","core-js/modules/es6.object.keys":"../../node_modules/core-js/modules/es6.object.keys.js","core-js/modules/es6.object.seal":"../../node_modules/core-js/modules/es6.object.seal.js","core-js/modules/es6.object.set-prototype-of":"../../node_modules/core-js/modules/es6.object.set-prototype-of.js","core-js/modules/es7.object.values":"../../node_modules/core-js/modules/es7.object.values.js","core-js/modules/es6.promise":"../../node_modules/core-js/modules/es6.promise.js","core-js/modules/es7.promise.finally":"../../node_modules/core-js/modules/es7.promise.finally.js","core-js/modules/es6.reflect.apply":"../../node_modules/core-js/modules/es6.reflect.apply.js","core-js/modules/es6.reflect.construct":"../../node_modules/core-js/modules/es6.reflect.construct.js","core-js/modules/es6.reflect.define-property":"../../node_modules/core-js/modules/es6.reflect.define-property.js","core-js/modules/es6.reflect.delete-property":"../../node_modules/core-js/modules/es6.reflect.delete-property.js","core-js/modules/es6.reflect.get":"../../node_modules/core-js/modules/es6.reflect.get.js","core-js/modules/es6.reflect.get-own-property-descriptor":"../../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","core-js/modules/es6.reflect.get-prototype-of":"../../node_modules/core-js/modules/es6.reflect.get-prototype-of.js","core-js/modules/es6.reflect.has":"../../node_modules/core-js/modules/es6.reflect.has.js","core-js/modules/es6.reflect.is-extensible":"../../node_modules/core-js/modules/es6.reflect.is-extensible.js","core-js/modules/es6.reflect.own-keys":"../../node_modules/core-js/modules/es6.reflect.own-keys.js","core-js/modules/es6.reflect.prevent-extensions":"../../node_modules/core-js/modules/es6.reflect.prevent-extensions.js","core-js/modules/es6.reflect.set":"../../node_modules/core-js/modules/es6.reflect.set.js","core-js/modules/es6.reflect.set-prototype-of":"../../node_modules/core-js/modules/es6.reflect.set-prototype-of.js","core-js/modules/es6.regexp.constructor":"../../node_modules/core-js/modules/es6.regexp.constructor.js","core-js/modules/es6.regexp.flags":"../../node_modules/core-js/modules/es6.regexp.flags.js","core-js/modules/es6.regexp.match":"../../node_modules/core-js/modules/es6.regexp.match.js","core-js/modules/es6.regexp.replace":"../../node_modules/core-js/modules/es6.regexp.replace.js","core-js/modules/es6.regexp.split":"../../node_modules/core-js/modules/es6.regexp.split.js","core-js/modules/es6.regexp.search":"../../node_modules/core-js/modules/es6.regexp.search.js","core-js/modules/es6.regexp.to-string":"../../node_modules/core-js/modules/es6.regexp.to-string.js","core-js/modules/es6.set":"../../node_modules/core-js/modules/es6.set.js","core-js/modules/es6.symbol":"../../node_modules/core-js/modules/es6.symbol.js","core-js/modules/es7.symbol.async-iterator":"../../node_modules/core-js/modules/es7.symbol.async-iterator.js","core-js/modules/es6.string.anchor":"../../node_modules/core-js/modules/es6.string.anchor.js","core-js/modules/es6.string.big":"../../node_modules/core-js/modules/es6.string.big.js","core-js/modules/es6.string.blink":"../../node_modules/core-js/modules/es6.string.blink.js","core-js/modules/es6.string.bold":"../../node_modules/core-js/modules/es6.string.bold.js","core-js/modules/es6.string.code-point-at":"../../node_modules/core-js/modules/es6.string.code-point-at.js","core-js/modules/es6.string.ends-with":"../../node_modules/core-js/modules/es6.string.ends-with.js","core-js/modules/es6.string.fixed":"../../node_modules/core-js/modules/es6.string.fixed.js","core-js/modules/es6.string.fontcolor":"../../node_modules/core-js/modules/es6.string.fontcolor.js","core-js/modules/es6.string.fontsize":"../../node_modules/core-js/modules/es6.string.fontsize.js","core-js/modules/es6.string.from-code-point":"../../node_modules/core-js/modules/es6.string.from-code-point.js","core-js/modules/es6.string.includes":"../../node_modules/core-js/modules/es6.string.includes.js","core-js/modules/es6.string.italics":"../../node_modules/core-js/modules/es6.string.italics.js","core-js/modules/es6.string.iterator":"../../node_modules/core-js/modules/es6.string.iterator.js","core-js/modules/es6.string.link":"../../node_modules/core-js/modules/es6.string.link.js","core-js/modules/es7.string.pad-start":"../../node_modules/core-js/modules/es7.string.pad-start.js","core-js/modules/es7.string.pad-end":"../../node_modules/core-js/modules/es7.string.pad-end.js","core-js/modules/es6.string.raw":"../../node_modules/core-js/modules/es6.string.raw.js","core-js/modules/es6.string.repeat":"../../node_modules/core-js/modules/es6.string.repeat.js","core-js/modules/es6.string.small":"../../node_modules/core-js/modules/es6.string.small.js","core-js/modules/es6.string.starts-with":"../../node_modules/core-js/modules/es6.string.starts-with.js","core-js/modules/es6.string.strike":"../../node_modules/core-js/modules/es6.string.strike.js","core-js/modules/es6.string.sub":"../../node_modules/core-js/modules/es6.string.sub.js","core-js/modules/es6.string.sup":"../../node_modules/core-js/modules/es6.string.sup.js","core-js/modules/es6.typed.array-buffer":"../../node_modules/core-js/modules/es6.typed.array-buffer.js","core-js/modules/es6.typed.int8-array":"../../node_modules/core-js/modules/es6.typed.int8-array.js","core-js/modules/es6.typed.uint8-array":"../../node_modules/core-js/modules/es6.typed.uint8-array.js","core-js/modules/es6.typed.uint8-clamped-array":"../../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","core-js/modules/es6.typed.int16-array":"../../node_modules/core-js/modules/es6.typed.int16-array.js","core-js/modules/es6.typed.uint16-array":"../../node_modules/core-js/modules/es6.typed.uint16-array.js","core-js/modules/es6.typed.int32-array":"../../node_modules/core-js/modules/es6.typed.int32-array.js","core-js/modules/es6.typed.uint32-array":"../../node_modules/core-js/modules/es6.typed.uint32-array.js","core-js/modules/es6.typed.float32-array":"../../node_modules/core-js/modules/es6.typed.float32-array.js","core-js/modules/es6.typed.float64-array":"../../node_modules/core-js/modules/es6.typed.float64-array.js","core-js/modules/es6.weak-map":"../../node_modules/core-js/modules/es6.weak-map.js","core-js/modules/es6.weak-set":"../../node_modules/core-js/modules/es6.weak-set.js","core-js/modules/es7.array.flat-map":"../../node_modules/core-js/modules/es7.array.flat-map.js","core-js/modules/web.timers":"../../node_modules/core-js/modules/web.timers.js","core-js/modules/web.immediate":"../../node_modules/core-js/modules/web.immediate.js","core-js/modules/web.dom.iterable":"../../node_modules/core-js/modules/web.dom.iterable.js","regenerator-runtime/runtime":"../../node_modules/regenerator-runtime/runtime.js","axios":"../../node_modules/axios/index.js","console":"../../node_modules/console-browserify/index.js","lodash":"../../node_modules/lodash/lodash.js","moment":"../../node_modules/moment/moment.js","util":"../../node_modules/node-libs-browser/node_modules/util/util.js","../../model/documents":"../../model/documents.js"}],"../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "62166" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else {
        window.location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] â¨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] ð¨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">ð¨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","script.js"], null)
//# sourceMappingURL=/bundle.js.map